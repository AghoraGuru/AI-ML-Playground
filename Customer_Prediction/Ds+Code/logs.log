2023-04-11 20:10:55,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:10:55,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:10:55,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:10:55,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:10:55,775:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-11 20:12:00,004:INFO:PyCaret ClassificationExperiment
2023-04-11 20:12:00,004:INFO:Logging name: clf-default-name
2023-04-11 20:12:00,004:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 20:12:00,004:INFO:version 3.0.0
2023-04-11 20:12:00,004:INFO:Initializing setup()
2023-04-11 20:12:00,004:INFO:self.USI: 0a1b
2023-04-11 20:12:00,004:INFO:self._variable_keys: {'_ml_usecase', 'X', 'fold_generator', 'is_multiclass', 'fix_imbalance', 'logging_param', 'y_test', 'seed', 'memory', 'X_test', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'gpu_param', 'y_train', 'idx', '_available_plots', 'html_param', 'n_jobs_param', 'USI', 'X_train', 'data', 'pipeline', 'exp_id', 'y'}
2023-04-11 20:12:00,004:INFO:Checking environment
2023-04-11 20:12:00,004:INFO:python_version: 3.10.9
2023-04-11 20:12:00,004:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 20:12:00,004:INFO:machine: x86_64
2023-04-11 20:12:00,005:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 20:12:00,005:INFO:Memory: svmem(total=16570302464, available=11604434944, percent=30.0, used=4039245824, free=4200235008, active=4806238208, inactive=6056226816, buffers=1123815424, cached=7207006208, shared=574861312, slab=664461312)
2023-04-11 20:12:00,005:INFO:Physical Core: 6
2023-04-11 20:12:00,005:INFO:Logical Core: 12
2023-04-11 20:12:00,005:INFO:Checking libraries
2023-04-11 20:12:00,006:INFO:System:
2023-04-11 20:12:00,006:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 20:12:00,006:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 20:12:00,006:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 20:12:00,006:INFO:PyCaret required dependencies:
2023-04-11 20:12:00,006:INFO:                 pip: 22.3.1
2023-04-11 20:12:00,006:INFO:          setuptools: 65.6.3
2023-04-11 20:12:00,006:INFO:             pycaret: 3.0.0
2023-04-11 20:12:00,006:INFO:             IPython: 8.12.0
2023-04-11 20:12:00,006:INFO:          ipywidgets: 8.0.4
2023-04-11 20:12:00,006:INFO:                tqdm: 4.64.1
2023-04-11 20:12:00,006:INFO:               numpy: 1.23.5
2023-04-11 20:12:00,006:INFO:              pandas: 1.5.3
2023-04-11 20:12:00,006:INFO:              jinja2: 3.1.2
2023-04-11 20:12:00,006:INFO:               scipy: 1.10.1
2023-04-11 20:12:00,006:INFO:              joblib: 1.2.0
2023-04-11 20:12:00,006:INFO:             sklearn: 1.2.2
2023-04-11 20:12:00,006:INFO:                pyod: 1.0.9
2023-04-11 20:12:00,006:INFO:            imblearn: 0.10.1
2023-04-11 20:12:00,006:INFO:   category_encoders: 2.6.0
2023-04-11 20:12:00,006:INFO:            lightgbm: 3.3.5
2023-04-11 20:12:00,007:INFO:               numba: 0.56.4
2023-04-11 20:12:00,007:INFO:            requests: 2.28.1
2023-04-11 20:12:00,007:INFO:          matplotlib: 3.7.1
2023-04-11 20:12:00,007:INFO:          scikitplot: 0.3.7
2023-04-11 20:12:00,007:INFO:         yellowbrick: 1.5
2023-04-11 20:12:00,007:INFO:              plotly: 5.14.1
2023-04-11 20:12:00,007:INFO:             kaleido: 0.2.1
2023-04-11 20:12:00,007:INFO:         statsmodels: 0.13.5
2023-04-11 20:12:00,007:INFO:              sktime: 0.17.1
2023-04-11 20:12:00,007:INFO:               tbats: 1.1.2
2023-04-11 20:12:00,007:INFO:            pmdarima: 2.0.3
2023-04-11 20:12:00,007:INFO:              psutil: 5.9.4
2023-04-11 20:12:00,007:INFO:PyCaret optional dependencies:
2023-04-11 20:12:00,019:INFO:                shap: Not installed
2023-04-11 20:12:00,019:INFO:           interpret: Not installed
2023-04-11 20:12:00,019:INFO:                umap: Not installed
2023-04-11 20:12:00,019:INFO:    pandas_profiling: Not installed
2023-04-11 20:12:00,020:INFO:  explainerdashboard: Not installed
2023-04-11 20:12:00,020:INFO:             autoviz: Not installed
2023-04-11 20:12:00,020:INFO:           fairlearn: Not installed
2023-04-11 20:12:00,020:INFO:             xgboost: 1.7.5
2023-04-11 20:12:00,020:INFO:            catboost: Not installed
2023-04-11 20:12:00,020:INFO:              kmodes: Not installed
2023-04-11 20:12:00,020:INFO:             mlxtend: Not installed
2023-04-11 20:12:00,020:INFO:       statsforecast: Not installed
2023-04-11 20:12:00,020:INFO:        tune_sklearn: Not installed
2023-04-11 20:12:00,020:INFO:                 ray: Not installed
2023-04-11 20:12:00,020:INFO:            hyperopt: Not installed
2023-04-11 20:12:00,020:INFO:              optuna: Not installed
2023-04-11 20:12:00,020:INFO:               skopt: Not installed
2023-04-11 20:12:00,020:INFO:              mlflow: Not installed
2023-04-11 20:12:00,020:INFO:              gradio: Not installed
2023-04-11 20:12:00,020:INFO:             fastapi: Not installed
2023-04-11 20:12:00,020:INFO:             uvicorn: Not installed
2023-04-11 20:12:00,020:INFO:              m2cgen: Not installed
2023-04-11 20:12:00,020:INFO:           evidently: Not installed
2023-04-11 20:12:00,020:INFO:               fugue: Not installed
2023-04-11 20:12:00,020:INFO:           streamlit: 1.21.0
2023-04-11 20:12:00,020:INFO:             prophet: Not installed
2023-04-11 20:12:00,020:INFO:None
2023-04-11 20:12:00,020:INFO:Set up data.
2023-04-11 20:12:16,522:INFO:PyCaret ClassificationExperiment
2023-04-11 20:12:16,522:INFO:Logging name: clf-default-name
2023-04-11 20:12:16,522:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 20:12:16,522:INFO:version 3.0.0
2023-04-11 20:12:16,522:INFO:Initializing setup()
2023-04-11 20:12:16,522:INFO:self.USI: 2f11
2023-04-11 20:12:16,522:INFO:self._variable_keys: {'_ml_usecase', 'X', 'fold_generator', 'is_multiclass', 'fix_imbalance', 'logging_param', 'y_test', 'seed', 'memory', 'X_test', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'gpu_param', 'y_train', 'idx', '_available_plots', 'html_param', 'n_jobs_param', 'USI', 'X_train', 'data', 'pipeline', 'exp_id', 'y'}
2023-04-11 20:12:16,522:INFO:Checking environment
2023-04-11 20:12:16,522:INFO:python_version: 3.10.9
2023-04-11 20:12:16,522:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 20:12:16,522:INFO:machine: x86_64
2023-04-11 20:12:16,522:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 20:12:16,523:INFO:Memory: svmem(total=16570302464, available=11668205568, percent=29.6, used=3977887744, free=4263440384, active=4747288576, inactive=6061875200, buffers=1123926016, cached=7205048320, shared=572416000, slab=664612864)
2023-04-11 20:12:16,523:INFO:Physical Core: 6
2023-04-11 20:12:16,523:INFO:Logical Core: 12
2023-04-11 20:12:16,523:INFO:Checking libraries
2023-04-11 20:12:16,523:INFO:System:
2023-04-11 20:12:16,523:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 20:12:16,524:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 20:12:16,524:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 20:12:16,524:INFO:PyCaret required dependencies:
2023-04-11 20:12:16,524:INFO:                 pip: 22.3.1
2023-04-11 20:12:16,524:INFO:          setuptools: 65.6.3
2023-04-11 20:12:16,524:INFO:             pycaret: 3.0.0
2023-04-11 20:12:16,524:INFO:             IPython: 8.12.0
2023-04-11 20:12:16,524:INFO:          ipywidgets: 8.0.4
2023-04-11 20:12:16,524:INFO:                tqdm: 4.64.1
2023-04-11 20:12:16,524:INFO:               numpy: 1.23.5
2023-04-11 20:12:16,524:INFO:              pandas: 1.5.3
2023-04-11 20:12:16,524:INFO:              jinja2: 3.1.2
2023-04-11 20:12:16,524:INFO:               scipy: 1.10.1
2023-04-11 20:12:16,524:INFO:              joblib: 1.2.0
2023-04-11 20:12:16,524:INFO:             sklearn: 1.2.2
2023-04-11 20:12:16,524:INFO:                pyod: 1.0.9
2023-04-11 20:12:16,524:INFO:            imblearn: 0.10.1
2023-04-11 20:12:16,524:INFO:   category_encoders: 2.6.0
2023-04-11 20:12:16,524:INFO:            lightgbm: 3.3.5
2023-04-11 20:12:16,524:INFO:               numba: 0.56.4
2023-04-11 20:12:16,524:INFO:            requests: 2.28.1
2023-04-11 20:12:16,525:INFO:          matplotlib: 3.7.1
2023-04-11 20:12:16,525:INFO:          scikitplot: 0.3.7
2023-04-11 20:12:16,525:INFO:         yellowbrick: 1.5
2023-04-11 20:12:16,525:INFO:              plotly: 5.14.1
2023-04-11 20:12:16,525:INFO:             kaleido: 0.2.1
2023-04-11 20:12:16,525:INFO:         statsmodels: 0.13.5
2023-04-11 20:12:16,525:INFO:              sktime: 0.17.1
2023-04-11 20:12:16,525:INFO:               tbats: 1.1.2
2023-04-11 20:12:16,525:INFO:            pmdarima: 2.0.3
2023-04-11 20:12:16,525:INFO:              psutil: 5.9.4
2023-04-11 20:12:16,525:INFO:PyCaret optional dependencies:
2023-04-11 20:12:16,525:INFO:                shap: Not installed
2023-04-11 20:12:16,525:INFO:           interpret: Not installed
2023-04-11 20:12:16,525:INFO:                umap: Not installed
2023-04-11 20:12:16,525:INFO:    pandas_profiling: Not installed
2023-04-11 20:12:16,525:INFO:  explainerdashboard: Not installed
2023-04-11 20:12:16,525:INFO:             autoviz: Not installed
2023-04-11 20:12:16,525:INFO:           fairlearn: Not installed
2023-04-11 20:12:16,525:INFO:             xgboost: 1.7.5
2023-04-11 20:12:16,525:INFO:            catboost: Not installed
2023-04-11 20:12:16,525:INFO:              kmodes: Not installed
2023-04-11 20:12:16,525:INFO:             mlxtend: Not installed
2023-04-11 20:12:16,525:INFO:       statsforecast: Not installed
2023-04-11 20:12:16,525:INFO:        tune_sklearn: Not installed
2023-04-11 20:12:16,526:INFO:                 ray: Not installed
2023-04-11 20:12:16,526:INFO:            hyperopt: Not installed
2023-04-11 20:12:16,526:INFO:              optuna: Not installed
2023-04-11 20:12:16,526:INFO:               skopt: Not installed
2023-04-11 20:12:16,526:INFO:              mlflow: Not installed
2023-04-11 20:12:16,526:INFO:              gradio: Not installed
2023-04-11 20:12:16,526:INFO:             fastapi: Not installed
2023-04-11 20:12:16,526:INFO:             uvicorn: Not installed
2023-04-11 20:12:16,526:INFO:              m2cgen: Not installed
2023-04-11 20:12:16,526:INFO:           evidently: Not installed
2023-04-11 20:12:16,526:INFO:               fugue: Not installed
2023-04-11 20:12:16,526:INFO:           streamlit: 1.21.0
2023-04-11 20:12:16,526:INFO:             prophet: Not installed
2023-04-11 20:12:16,526:INFO:None
2023-04-11 20:12:16,526:INFO:Set up data.
2023-04-11 20:12:16,560:INFO:Set up train/test split.
2023-04-11 20:12:16,576:INFO:Set up index.
2023-04-11 20:12:16,576:INFO:Set up folding strategy.
2023-04-11 20:12:16,576:INFO:Assigning column types.
2023-04-11 20:12:16,580:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-11 20:12:16,610:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 20:12:16,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:12:16,640:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:16,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:16,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 20:12:16,758:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:12:16,775:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:16,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:16,777:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-11 20:12:16,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:12:16,824:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:16,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:16,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:12:16,873:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:16,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:16,875:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-11 20:12:16,924:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:16,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:16,972:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:16,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:16,975:INFO:Preparing preprocessing pipeline...
2023-04-11 20:12:16,976:INFO:Set up label encoding.
2023-04-11 20:12:16,976:INFO:Set up simple imputation.
2023-04-11 20:12:16,984:INFO:Set up encoding of ordinal features.
2023-04-11 20:12:16,999:INFO:Set up encoding of categorical features.
2023-04-11 20:12:17,000:INFO:Set up column name cleaning.
2023-04-11 20:12:17,454:INFO:Finished creating preprocessing pipeline.
2023-04-11 20:12:17,551:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=4427,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-11 20:12:17,551:INFO:Creating final display dataframe.
2023-04-11 20:12:18,284:INFO:Setup _display_container:                     Description                             Value
0                    Session id                              4427
1                        Target                   Customer Status
2                   Target type                        Multiclass
3                Target mapping  Churned: 0, Joined: 1, Stayed: 2
4           Original data shape                        (7043, 38)
5        Transformed data shape                        (7043, 72)
6   Transformed train set shape                        (4930, 72)
7    Transformed test set shape                        (2113, 72)
8              Ordinal features                                14
9              Numeric features                                15
10         Categorical features                                22
11     Rows with missing values                             77.5%
12                   Preprocess                              True
13              Imputation type                            simple
14           Numeric imputation                              mean
15       Categorical imputation                              mode
16     Maximum one-hot encoding                                25
17              Encoding method                              None
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              2f11
2023-04-11 20:12:18,341:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:18,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:18,396:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:12:18,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:12:18,398:INFO:setup() successfully completed in 1.88s...............
2023-04-11 20:12:18,398:INFO:Initializing compare_models()
2023-04-11 20:12:18,398:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 20:12:18,398:INFO:Checking exceptions
2023-04-11 20:12:18,402:INFO:Preparing display monitor
2023-04-11 20:12:18,425:INFO:Initializing Logistic Regression
2023-04-11 20:12:18,425:INFO:Total runtime is 4.478295644124349e-06 minutes
2023-04-11 20:12:18,429:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:18,429:INFO:Initializing create_model()
2023-04-11 20:12:18,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:18,429:INFO:Checking exceptions
2023-04-11 20:12:18,429:INFO:Importing libraries
2023-04-11 20:12:18,429:INFO:Copying training dataset
2023-04-11 20:12:18,437:INFO:Defining folds
2023-04-11 20:12:18,437:INFO:Declaring metric variables
2023-04-11 20:12:18,441:INFO:Importing untrained model
2023-04-11 20:12:18,444:INFO:Logistic Regression Imported successfully
2023-04-11 20:12:18,449:INFO:Starting cross validation
2023-04-11 20:12:18,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:22,558:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:22,563:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:22,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,034:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,039:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,044:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,198:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:24,693:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,696:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,699:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:24,778:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:24,918:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:24,965:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:25,073:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:25,183:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:25,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,259:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,302:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,307:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,372:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:12:25,377:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,483:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,486:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,491:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,533:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,536:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,631:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,634:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,636:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,770:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,772:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,775:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:25,781:INFO:Calculating mean and std
2023-04-11 20:12:25,782:INFO:Creating metrics dataframe
2023-04-11 20:12:25,793:INFO:Uploading results into container
2023-04-11 20:12:25,794:INFO:Uploading model into container now
2023-04-11 20:12:25,794:INFO:_master_model_container: 1
2023-04-11 20:12:25,794:INFO:_display_container: 2
2023-04-11 20:12:25,795:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4427, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 20:12:25,795:INFO:create_model() successfully completed......................................
2023-04-11 20:12:25,896:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:25,896:INFO:Creating metrics dataframe
2023-04-11 20:12:25,903:INFO:Initializing K Neighbors Classifier
2023-04-11 20:12:25,903:INFO:Total runtime is 0.12463456392288208 minutes
2023-04-11 20:12:25,907:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:25,907:INFO:Initializing create_model()
2023-04-11 20:12:25,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:25,907:INFO:Checking exceptions
2023-04-11 20:12:25,908:INFO:Importing libraries
2023-04-11 20:12:25,908:INFO:Copying training dataset
2023-04-11 20:12:25,915:INFO:Defining folds
2023-04-11 20:12:25,916:INFO:Declaring metric variables
2023-04-11 20:12:25,918:INFO:Importing untrained model
2023-04-11 20:12:25,921:INFO:K Neighbors Classifier Imported successfully
2023-04-11 20:12:25,926:INFO:Starting cross validation
2023-04-11 20:12:25,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:27,040:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,046:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,051:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,088:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,092:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,095:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,431:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,433:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,436:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,436:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,436:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,441:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,514:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,516:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,518:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,519:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,520:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,608:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,610:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:27,613:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,263:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,268:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,383:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,385:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:28,392:INFO:Calculating mean and std
2023-04-11 20:12:28,393:INFO:Creating metrics dataframe
2023-04-11 20:12:28,405:INFO:Uploading results into container
2023-04-11 20:12:28,406:INFO:Uploading model into container now
2023-04-11 20:12:28,407:INFO:_master_model_container: 2
2023-04-11 20:12:28,407:INFO:_display_container: 2
2023-04-11 20:12:28,407:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 20:12:28,407:INFO:create_model() successfully completed......................................
2023-04-11 20:12:28,493:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:28,494:INFO:Creating metrics dataframe
2023-04-11 20:12:28,501:INFO:Initializing Naive Bayes
2023-04-11 20:12:28,501:INFO:Total runtime is 0.16793566942214966 minutes
2023-04-11 20:12:28,504:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:28,504:INFO:Initializing create_model()
2023-04-11 20:12:28,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:28,504:INFO:Checking exceptions
2023-04-11 20:12:28,504:INFO:Importing libraries
2023-04-11 20:12:28,505:INFO:Copying training dataset
2023-04-11 20:12:28,513:INFO:Defining folds
2023-04-11 20:12:28,514:INFO:Declaring metric variables
2023-04-11 20:12:28,517:INFO:Importing untrained model
2023-04-11 20:12:28,520:INFO:Naive Bayes Imported successfully
2023-04-11 20:12:28,527:INFO:Starting cross validation
2023-04-11 20:12:28,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:29,669:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,672:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,677:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,854:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,861:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,861:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,866:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,871:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,906:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,908:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,908:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,913:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,914:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,917:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,918:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,920:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,924:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,930:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,932:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,947:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,949:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,952:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,956:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,963:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:29,968:INFO:Calculating mean and std
2023-04-11 20:12:29,969:INFO:Creating metrics dataframe
2023-04-11 20:12:29,980:INFO:Uploading results into container
2023-04-11 20:12:29,981:INFO:Uploading model into container now
2023-04-11 20:12:29,981:INFO:_master_model_container: 3
2023-04-11 20:12:29,981:INFO:_display_container: 2
2023-04-11 20:12:29,981:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 20:12:29,981:INFO:create_model() successfully completed......................................
2023-04-11 20:12:30,062:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:30,062:INFO:Creating metrics dataframe
2023-04-11 20:12:30,070:INFO:Initializing Decision Tree Classifier
2023-04-11 20:12:30,070:INFO:Total runtime is 0.19407742420832316 minutes
2023-04-11 20:12:30,072:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:30,073:INFO:Initializing create_model()
2023-04-11 20:12:30,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:30,073:INFO:Checking exceptions
2023-04-11 20:12:30,073:INFO:Importing libraries
2023-04-11 20:12:30,073:INFO:Copying training dataset
2023-04-11 20:12:30,080:INFO:Defining folds
2023-04-11 20:12:30,080:INFO:Declaring metric variables
2023-04-11 20:12:30,082:INFO:Importing untrained model
2023-04-11 20:12:30,086:INFO:Decision Tree Classifier Imported successfully
2023-04-11 20:12:30,093:INFO:Starting cross validation
2023-04-11 20:12:30,097:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:31,122:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,126:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,129:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,188:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,193:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,401:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,403:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,406:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,464:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,467:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,469:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,504:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,509:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,514:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,520:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,523:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,528:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,544:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,549:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,549:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,554:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,558:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,583:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,586:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,589:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:31,594:INFO:Calculating mean and std
2023-04-11 20:12:31,595:INFO:Creating metrics dataframe
2023-04-11 20:12:31,607:INFO:Uploading results into container
2023-04-11 20:12:31,608:INFO:Uploading model into container now
2023-04-11 20:12:31,608:INFO:_master_model_container: 4
2023-04-11 20:12:31,608:INFO:_display_container: 2
2023-04-11 20:12:31,609:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4427, splitter='best')
2023-04-11 20:12:31,609:INFO:create_model() successfully completed......................................
2023-04-11 20:12:31,687:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:31,687:INFO:Creating metrics dataframe
2023-04-11 20:12:31,695:INFO:Initializing SVM - Linear Kernel
2023-04-11 20:12:31,695:INFO:Total runtime is 0.22116007010142008 minutes
2023-04-11 20:12:31,697:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:31,697:INFO:Initializing create_model()
2023-04-11 20:12:31,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:31,697:INFO:Checking exceptions
2023-04-11 20:12:31,698:INFO:Importing libraries
2023-04-11 20:12:31,698:INFO:Copying training dataset
2023-04-11 20:12:31,705:INFO:Defining folds
2023-04-11 20:12:31,705:INFO:Declaring metric variables
2023-04-11 20:12:31,708:INFO:Importing untrained model
2023-04-11 20:12:31,711:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 20:12:31,716:INFO:Starting cross validation
2023-04-11 20:12:31,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:33,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,383:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,384:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,389:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,390:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,393:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,394:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,396:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,396:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,445:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,448:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,450:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,457:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,458:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,460:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,476:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,478:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,480:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,482:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,483:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,495:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,496:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,502:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,533:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,534:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,535:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,535:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,536:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,538:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,538:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,540:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,540:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,550:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,552:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,603:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:12:33,604:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,607:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,608:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:33,609:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:33,615:INFO:Calculating mean and std
2023-04-11 20:12:33,615:INFO:Creating metrics dataframe
2023-04-11 20:12:33,633:INFO:Uploading results into container
2023-04-11 20:12:33,633:INFO:Uploading model into container now
2023-04-11 20:12:33,634:INFO:_master_model_container: 5
2023-04-11 20:12:33,634:INFO:_display_container: 2
2023-04-11 20:12:33,634:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4427, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-11 20:12:33,634:INFO:create_model() successfully completed......................................
2023-04-11 20:12:33,715:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:33,715:INFO:Creating metrics dataframe
2023-04-11 20:12:33,723:INFO:Initializing Ridge Classifier
2023-04-11 20:12:33,723:INFO:Total runtime is 0.25495996077855426 minutes
2023-04-11 20:12:33,726:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:33,726:INFO:Initializing create_model()
2023-04-11 20:12:33,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:33,726:INFO:Checking exceptions
2023-04-11 20:12:33,726:INFO:Importing libraries
2023-04-11 20:12:33,727:INFO:Copying training dataset
2023-04-11 20:12:33,733:INFO:Defining folds
2023-04-11 20:12:33,733:INFO:Declaring metric variables
2023-04-11 20:12:33,735:INFO:Importing untrained model
2023-04-11 20:12:33,737:INFO:Ridge Classifier Imported successfully
2023-04-11 20:12:33,742:INFO:Starting cross validation
2023-04-11 20:12:33,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:34,879:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:34,880:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,883:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,885:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:34,886:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,904:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:34,907:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,912:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,915:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:34,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,992:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:34,995:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,996:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:34,998:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:34,999:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,002:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,004:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,005:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:35,006:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,006:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,008:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,010:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,012:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,013:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,059:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:35,060:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,063:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,065:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,066:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,066:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:35,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,070:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,071:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:35,072:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:35,072:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,073:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,073:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,074:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,076:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,076:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,077:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,079:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,079:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,097:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:12:35,100:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,102:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,104:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:12:35,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:35,111:INFO:Calculating mean and std
2023-04-11 20:12:35,112:INFO:Creating metrics dataframe
2023-04-11 20:12:35,128:INFO:Uploading results into container
2023-04-11 20:12:35,128:INFO:Uploading model into container now
2023-04-11 20:12:35,129:INFO:_master_model_container: 6
2023-04-11 20:12:35,129:INFO:_display_container: 2
2023-04-11 20:12:35,129:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4427, solver='auto',
                tol=0.0001)
2023-04-11 20:12:35,129:INFO:create_model() successfully completed......................................
2023-04-11 20:12:35,209:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:35,209:INFO:Creating metrics dataframe
2023-04-11 20:12:35,217:INFO:Initializing Random Forest Classifier
2023-04-11 20:12:35,217:INFO:Total runtime is 0.27986183563868205 minutes
2023-04-11 20:12:35,219:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:35,219:INFO:Initializing create_model()
2023-04-11 20:12:35,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:35,220:INFO:Checking exceptions
2023-04-11 20:12:35,220:INFO:Importing libraries
2023-04-11 20:12:35,220:INFO:Copying training dataset
2023-04-11 20:12:35,228:INFO:Defining folds
2023-04-11 20:12:35,228:INFO:Declaring metric variables
2023-04-11 20:12:35,230:INFO:Importing untrained model
2023-04-11 20:12:35,234:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:12:35,239:INFO:Starting cross validation
2023-04-11 20:12:35,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:37,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,675:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,727:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,736:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,740:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,747:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,755:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,761:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,767:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,829:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,840:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,844:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,847:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,850:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,919:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,922:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,947:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,950:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,952:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,988:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,990:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:37,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:38,019:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:38,022:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:38,024:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:38,030:INFO:Calculating mean and std
2023-04-11 20:12:38,031:INFO:Creating metrics dataframe
2023-04-11 20:12:38,050:INFO:Uploading results into container
2023-04-11 20:12:38,050:INFO:Uploading model into container now
2023-04-11 20:12:38,051:INFO:_master_model_container: 7
2023-04-11 20:12:38,051:INFO:_display_container: 2
2023-04-11 20:12:38,051:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4427, verbose=0, warm_start=False)
2023-04-11 20:12:38,051:INFO:create_model() successfully completed......................................
2023-04-11 20:12:38,135:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:38,135:INFO:Creating metrics dataframe
2023-04-11 20:12:38,143:INFO:Initializing Quadratic Discriminant Analysis
2023-04-11 20:12:38,143:INFO:Total runtime is 0.3286335825920105 minutes
2023-04-11 20:12:38,147:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:38,147:INFO:Initializing create_model()
2023-04-11 20:12:38,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:38,147:INFO:Checking exceptions
2023-04-11 20:12:38,148:INFO:Importing libraries
2023-04-11 20:12:38,148:INFO:Copying training dataset
2023-04-11 20:12:38,154:INFO:Defining folds
2023-04-11 20:12:38,154:INFO:Declaring metric variables
2023-04-11 20:12:38,157:INFO:Importing untrained model
2023-04-11 20:12:38,161:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-11 20:12:38,166:INFO:Starting cross validation
2023-04-11 20:12:38,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:38,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,765:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,804:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,897:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,898:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,941:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,968:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:38,987:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:12:39,288:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,292:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,297:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,436:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,439:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,482:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,482:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,487:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,487:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,492:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,492:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,506:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,580:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,583:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,586:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,592:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,594:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,596:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,597:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,599:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,600:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,602:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,640:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,642:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,645:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:39,651:INFO:Calculating mean and std
2023-04-11 20:12:39,652:INFO:Creating metrics dataframe
2023-04-11 20:12:39,670:INFO:Uploading results into container
2023-04-11 20:12:39,670:INFO:Uploading model into container now
2023-04-11 20:12:39,670:INFO:_master_model_container: 8
2023-04-11 20:12:39,671:INFO:_display_container: 2
2023-04-11 20:12:39,671:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-11 20:12:39,671:INFO:create_model() successfully completed......................................
2023-04-11 20:12:39,750:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:39,750:INFO:Creating metrics dataframe
2023-04-11 20:12:39,758:INFO:Initializing Ada Boost Classifier
2023-04-11 20:12:39,758:INFO:Total runtime is 0.3555539608001709 minutes
2023-04-11 20:12:39,761:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:39,761:INFO:Initializing create_model()
2023-04-11 20:12:39,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:39,761:INFO:Checking exceptions
2023-04-11 20:12:39,761:INFO:Importing libraries
2023-04-11 20:12:39,762:INFO:Copying training dataset
2023-04-11 20:12:39,768:INFO:Defining folds
2023-04-11 20:12:39,768:INFO:Declaring metric variables
2023-04-11 20:12:39,771:INFO:Importing untrained model
2023-04-11 20:12:39,773:INFO:Ada Boost Classifier Imported successfully
2023-04-11 20:12:39,780:INFO:Starting cross validation
2023-04-11 20:12:39,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:41,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,518:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,774:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,779:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,784:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,789:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,793:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,992:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,996:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:41,999:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,006:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,009:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,019:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,021:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,024:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,070:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,072:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,073:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,075:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,085:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,087:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,094:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,098:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,101:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:42,106:INFO:Calculating mean and std
2023-04-11 20:12:42,107:INFO:Creating metrics dataframe
2023-04-11 20:12:42,129:INFO:Uploading results into container
2023-04-11 20:12:42,129:INFO:Uploading model into container now
2023-04-11 20:12:42,129:INFO:_master_model_container: 9
2023-04-11 20:12:42,130:INFO:_display_container: 2
2023-04-11 20:12:42,130:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4427)
2023-04-11 20:12:42,130:INFO:create_model() successfully completed......................................
2023-04-11 20:12:42,209:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:42,209:INFO:Creating metrics dataframe
2023-04-11 20:12:42,218:INFO:Initializing Gradient Boosting Classifier
2023-04-11 20:12:42,218:INFO:Total runtime is 0.3965464154879252 minutes
2023-04-11 20:12:42,220:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:42,220:INFO:Initializing create_model()
2023-04-11 20:12:42,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:42,220:INFO:Checking exceptions
2023-04-11 20:12:42,220:INFO:Importing libraries
2023-04-11 20:12:42,221:INFO:Copying training dataset
2023-04-11 20:12:42,227:INFO:Defining folds
2023-04-11 20:12:42,227:INFO:Declaring metric variables
2023-04-11 20:12:42,230:INFO:Importing untrained model
2023-04-11 20:12:42,233:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 20:12:42,238:INFO:Starting cross validation
2023-04-11 20:12:42,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:50,819:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:12:50,983:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:50,989:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:50,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,112:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,119:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,126:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,939:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,943:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,972:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,976:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:51,980:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,284:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,288:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,291:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,758:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,766:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,779:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,784:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,787:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,900:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,903:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,906:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,949:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,952:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,954:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:52,960:INFO:Calculating mean and std
2023-04-11 20:12:52,961:INFO:Creating metrics dataframe
2023-04-11 20:12:52,987:INFO:Uploading results into container
2023-04-11 20:12:52,988:INFO:Uploading model into container now
2023-04-11 20:12:52,988:INFO:_master_model_container: 10
2023-04-11 20:12:52,988:INFO:_display_container: 2
2023-04-11 20:12:52,988:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4427, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 20:12:52,989:INFO:create_model() successfully completed......................................
2023-04-11 20:12:53,069:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:53,069:INFO:Creating metrics dataframe
2023-04-11 20:12:53,078:INFO:Initializing Linear Discriminant Analysis
2023-04-11 20:12:53,078:INFO:Total runtime is 0.5775469144185383 minutes
2023-04-11 20:12:53,081:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:53,082:INFO:Initializing create_model()
2023-04-11 20:12:53,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:53,082:INFO:Checking exceptions
2023-04-11 20:12:53,082:INFO:Importing libraries
2023-04-11 20:12:53,082:INFO:Copying training dataset
2023-04-11 20:12:53,088:INFO:Defining folds
2023-04-11 20:12:53,089:INFO:Declaring metric variables
2023-04-11 20:12:53,092:INFO:Importing untrained model
2023-04-11 20:12:53,095:INFO:Linear Discriminant Analysis Imported successfully
2023-04-11 20:12:53,100:INFO:Starting cross validation
2023-04-11 20:12:53,104:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:54,265:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,269:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,274:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,363:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,758:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,760:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,764:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,766:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,870:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,873:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,874:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,877:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,879:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,883:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,905:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,910:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,914:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,918:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,922:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,926:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,965:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,971:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:54,977:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:55,063:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:55,065:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:55,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:55,073:INFO:Calculating mean and std
2023-04-11 20:12:55,074:INFO:Creating metrics dataframe
2023-04-11 20:12:55,101:INFO:Uploading results into container
2023-04-11 20:12:55,101:INFO:Uploading model into container now
2023-04-11 20:12:55,102:INFO:_master_model_container: 11
2023-04-11 20:12:55,102:INFO:_display_container: 2
2023-04-11 20:12:55,102:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-11 20:12:55,102:INFO:create_model() successfully completed......................................
2023-04-11 20:12:55,181:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:55,181:INFO:Creating metrics dataframe
2023-04-11 20:12:55,191:INFO:Initializing Extra Trees Classifier
2023-04-11 20:12:55,191:INFO:Total runtime is 0.6127709825833638 minutes
2023-04-11 20:12:55,194:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:55,194:INFO:Initializing create_model()
2023-04-11 20:12:55,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:55,194:INFO:Checking exceptions
2023-04-11 20:12:55,194:INFO:Importing libraries
2023-04-11 20:12:55,195:INFO:Copying training dataset
2023-04-11 20:12:55,201:INFO:Defining folds
2023-04-11 20:12:55,201:INFO:Declaring metric variables
2023-04-11 20:12:55,204:INFO:Importing untrained model
2023-04-11 20:12:55,207:INFO:Extra Trees Classifier Imported successfully
2023-04-11 20:12:55,211:INFO:Starting cross validation
2023-04-11 20:12:55,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:12:57,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:12:57,755:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:57,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:57,770:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:57,840:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:12:57,931:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:57,938:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:57,946:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,098:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,109:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,114:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,122:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,244:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,251:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,258:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,261:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,264:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:12:58,311:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,318:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,325:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,337:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,344:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,351:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,373:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,377:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,454:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,459:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,462:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:12:58,469:INFO:Calculating mean and std
2023-04-11 20:12:58,470:INFO:Creating metrics dataframe
2023-04-11 20:12:58,506:INFO:Uploading results into container
2023-04-11 20:12:58,507:INFO:Uploading model into container now
2023-04-11 20:12:58,507:INFO:_master_model_container: 12
2023-04-11 20:12:58,507:INFO:_display_container: 2
2023-04-11 20:12:58,508:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4427, verbose=0, warm_start=False)
2023-04-11 20:12:58,508:INFO:create_model() successfully completed......................................
2023-04-11 20:12:58,591:INFO:SubProcess create_model() end ==================================
2023-04-11 20:12:58,591:INFO:Creating metrics dataframe
2023-04-11 20:12:58,600:INFO:Initializing Extreme Gradient Boosting
2023-04-11 20:12:58,600:INFO:Total runtime is 0.6695875287055969 minutes
2023-04-11 20:12:58,603:INFO:SubProcess create_model() called ==================================
2023-04-11 20:12:58,603:INFO:Initializing create_model()
2023-04-11 20:12:58,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:12:58,603:INFO:Checking exceptions
2023-04-11 20:12:58,604:INFO:Importing libraries
2023-04-11 20:12:58,604:INFO:Copying training dataset
2023-04-11 20:12:58,610:INFO:Defining folds
2023-04-11 20:12:58,610:INFO:Declaring metric variables
2023-04-11 20:12:58,613:INFO:Importing untrained model
2023-04-11 20:12:58,617:INFO:Extreme Gradient Boosting Imported successfully
2023-04-11 20:12:58,623:INFO:Starting cross validation
2023-04-11 20:12:58,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:13:06,962:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:06,969:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:06,977:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:07,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:07,373:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:07,377:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:08,891:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:08,897:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:08,904:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,229:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,233:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,236:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,322:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,326:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,330:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,736:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,739:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,740:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,743:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,744:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,746:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,796:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,802:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,802:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,805:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,808:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:09,822:INFO:Calculating mean and std
2023-04-11 20:13:09,823:INFO:Creating metrics dataframe
2023-04-11 20:13:09,883:INFO:Uploading results into container
2023-04-11 20:13:09,883:INFO:Uploading model into container now
2023-04-11 20:13:09,884:INFO:_master_model_container: 13
2023-04-11 20:13:09,884:INFO:_display_container: 2
2023-04-11 20:13:09,885:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-11 20:13:09,885:INFO:create_model() successfully completed......................................
2023-04-11 20:13:09,966:INFO:SubProcess create_model() end ==================================
2023-04-11 20:13:09,966:INFO:Creating metrics dataframe
2023-04-11 20:13:09,976:INFO:Initializing Light Gradient Boosting Machine
2023-04-11 20:13:09,976:INFO:Total runtime is 0.859177577495575 minutes
2023-04-11 20:13:09,978:INFO:SubProcess create_model() called ==================================
2023-04-11 20:13:09,978:INFO:Initializing create_model()
2023-04-11 20:13:09,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:13:09,979:INFO:Checking exceptions
2023-04-11 20:13:09,979:INFO:Importing libraries
2023-04-11 20:13:09,979:INFO:Copying training dataset
2023-04-11 20:13:09,985:INFO:Defining folds
2023-04-11 20:13:09,985:INFO:Declaring metric variables
2023-04-11 20:13:09,988:INFO:Importing untrained model
2023-04-11 20:13:09,993:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 20:13:09,998:INFO:Starting cross validation
2023-04-11 20:13:10,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:13:12,040:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,046:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,051:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,069:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,075:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,080:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,681:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,685:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,689:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,716:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,720:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,725:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,820:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,825:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,830:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,848:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,849:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,853:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,855:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,862:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,862:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,866:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,870:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,874:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,878:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:12,999:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:13,001:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:13,004:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:13,010:INFO:Calculating mean and std
2023-04-11 20:13:13,011:INFO:Creating metrics dataframe
2023-04-11 20:13:13,046:INFO:Uploading results into container
2023-04-11 20:13:13,047:INFO:Uploading model into container now
2023-04-11 20:13:13,048:INFO:_master_model_container: 14
2023-04-11 20:13:13,048:INFO:_display_container: 2
2023-04-11 20:13:13,048:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4427, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 20:13:13,048:INFO:create_model() successfully completed......................................
2023-04-11 20:13:13,126:INFO:SubProcess create_model() end ==================================
2023-04-11 20:13:13,126:INFO:Creating metrics dataframe
2023-04-11 20:13:13,135:INFO:Initializing Dummy Classifier
2023-04-11 20:13:13,135:INFO:Total runtime is 0.9118364651997884 minutes
2023-04-11 20:13:13,138:INFO:SubProcess create_model() called ==================================
2023-04-11 20:13:13,138:INFO:Initializing create_model()
2023-04-11 20:13:13,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f0021ee69b0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:13:13,138:INFO:Checking exceptions
2023-04-11 20:13:13,138:INFO:Importing libraries
2023-04-11 20:13:13,138:INFO:Copying training dataset
2023-04-11 20:13:13,147:INFO:Defining folds
2023-04-11 20:13:13,148:INFO:Declaring metric variables
2023-04-11 20:13:13,151:INFO:Importing untrained model
2023-04-11 20:13:13,154:INFO:Dummy Classifier Imported successfully
2023-04-11 20:13:13,161:INFO:Starting cross validation
2023-04-11 20:13:13,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:13:14,328:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,329:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,332:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,334:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,334:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,336:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,336:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,338:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,606:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,613:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,615:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,618:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,661:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,662:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,721:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,727:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,730:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,731:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,733:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,736:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,738:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,745:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,751:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,755:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,758:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,760:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,777:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,780:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:13:14,782:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:13:14,797:INFO:Calculating mean and std
2023-04-11 20:13:14,799:INFO:Creating metrics dataframe
2023-04-11 20:13:14,835:INFO:Uploading results into container
2023-04-11 20:13:14,836:INFO:Uploading model into container now
2023-04-11 20:13:14,836:INFO:_master_model_container: 15
2023-04-11 20:13:14,836:INFO:_display_container: 2
2023-04-11 20:13:14,836:INFO:DummyClassifier(constant=None, random_state=4427, strategy='prior')
2023-04-11 20:13:14,836:INFO:create_model() successfully completed......................................
2023-04-11 20:13:14,916:INFO:SubProcess create_model() end ==================================
2023-04-11 20:13:14,916:INFO:Creating metrics dataframe
2023-04-11 20:13:14,935:INFO:Initializing create_model()
2023-04-11 20:13:14,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4427, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:13:14,935:INFO:Checking exceptions
2023-04-11 20:13:14,936:INFO:Importing libraries
2023-04-11 20:13:14,936:INFO:Copying training dataset
2023-04-11 20:13:14,944:INFO:Defining folds
2023-04-11 20:13:14,945:INFO:Declaring metric variables
2023-04-11 20:13:14,945:INFO:Importing untrained model
2023-04-11 20:13:14,945:INFO:Declaring custom model
2023-04-11 20:13:14,945:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 20:13:14,948:INFO:Cross validation set to False
2023-04-11 20:13:14,948:INFO:Fitting Model
2023-04-11 20:13:19,674:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4427, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 20:13:19,674:INFO:create_model() successfully completed......................................
2023-04-11 20:13:19,790:INFO:_master_model_container: 15
2023-04-11 20:13:19,790:INFO:_display_container: 2
2023-04-11 20:13:19,791:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4427, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 20:13:19,791:INFO:compare_models() successfully completed......................................
2023-04-11 20:14:22,715:INFO:Initializing create_model()
2023-04-11 20:14:22,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:14:22,715:INFO:Checking exceptions
2023-04-11 20:14:22,744:INFO:Importing libraries
2023-04-11 20:14:22,745:INFO:Copying training dataset
2023-04-11 20:14:22,760:INFO:Defining folds
2023-04-11 20:14:22,760:INFO:Declaring metric variables
2023-04-11 20:14:22,769:INFO:Importing untrained model
2023-04-11 20:14:22,778:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:14:22,794:INFO:Starting cross validation
2023-04-11 20:14:22,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:14:24,133:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,142:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,188:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,193:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,196:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,201:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,205:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,210:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,212:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,215:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,221:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,223:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,245:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,247:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,260:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,325:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,331:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,331:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,335:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,336:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,338:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,591:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,594:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,596:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:14:24,602:INFO:Calculating mean and std
2023-04-11 20:14:24,604:INFO:Creating metrics dataframe
2023-04-11 20:14:24,611:INFO:Finalizing model
2023-04-11 20:14:25,398:INFO:Uploading results into container
2023-04-11 20:14:25,399:INFO:Uploading model into container now
2023-04-11 20:14:25,409:INFO:_master_model_container: 16
2023-04-11 20:14:25,409:INFO:_display_container: 3
2023-04-11 20:14:25,410:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4427, verbose=0, warm_start=False)
2023-04-11 20:14:25,410:INFO:create_model() successfully completed......................................
2023-04-11 20:14:37,661:INFO:Initializing interpret_model()
2023-04-11 20:14:37,662:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4427, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>)
2023-04-11 20:14:37,662:INFO:Checking exceptions
2023-04-11 20:14:37,662:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-04-11 20:14:57,080:INFO:Initializing interpret_model()
2023-04-11 20:14:57,080:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4427, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f002169f370>)
2023-04-11 20:14:57,080:INFO:Checking exceptions
2023-04-11 20:14:57,081:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-04-11 20:15:09,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:15:09,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:15:09,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:15:09,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 20:15:09,666:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-11 20:15:09,778:INFO:PyCaret ClassificationExperiment
2023-04-11 20:15:09,778:INFO:Logging name: clf-default-name
2023-04-11 20:15:09,778:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 20:15:09,778:INFO:version 3.0.0
2023-04-11 20:15:09,778:INFO:Initializing setup()
2023-04-11 20:15:09,778:INFO:self.USI: b123
2023-04-11 20:15:09,778:INFO:self._variable_keys: {'fix_imbalance', '_available_plots', 'log_plots_param', 'fold_generator', 'USI', 'target_param', 'y_test', 'X_test', 'exp_id', 'y_train', 'X_train', 'fold_shuffle_param', 'gpu_n_jobs_param', 'idx', 'y', 'memory', 'html_param', 'pipeline', 'seed', 'exp_name_log', '_ml_usecase', 'logging_param', 'data', 'n_jobs_param', 'X', 'fold_groups_param', 'gpu_param', 'is_multiclass'}
2023-04-11 20:15:09,778:INFO:Checking environment
2023-04-11 20:15:09,778:INFO:python_version: 3.10.9
2023-04-11 20:15:09,778:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 20:15:09,778:INFO:machine: x86_64
2023-04-11 20:15:09,778:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 20:15:09,779:INFO:Memory: svmem(total=16570302464, available=11443691520, percent=30.9, used=3954282496, free=3965587456, active=4773568512, inactive=6307172352, buffers=1125220352, cached=7525212160, shared=820568064, slab=671031296)
2023-04-11 20:15:09,780:INFO:Physical Core: 6
2023-04-11 20:15:09,780:INFO:Logical Core: 12
2023-04-11 20:15:09,780:INFO:Checking libraries
2023-04-11 20:15:09,780:INFO:System:
2023-04-11 20:15:09,780:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 20:15:09,780:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 20:15:09,780:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 20:15:09,780:INFO:PyCaret required dependencies:
2023-04-11 20:15:09,781:INFO:                 pip: 22.3.1
2023-04-11 20:15:09,781:INFO:          setuptools: 65.6.3
2023-04-11 20:15:09,781:INFO:             pycaret: 3.0.0
2023-04-11 20:15:09,781:INFO:             IPython: 8.12.0
2023-04-11 20:15:09,781:INFO:          ipywidgets: 8.0.4
2023-04-11 20:15:09,781:INFO:                tqdm: 4.64.1
2023-04-11 20:15:09,781:INFO:               numpy: 1.23.5
2023-04-11 20:15:09,781:INFO:              pandas: 1.5.3
2023-04-11 20:15:09,781:INFO:              jinja2: 3.1.2
2023-04-11 20:15:09,781:INFO:               scipy: 1.10.1
2023-04-11 20:15:09,781:INFO:              joblib: 1.2.0
2023-04-11 20:15:09,781:INFO:             sklearn: 1.2.2
2023-04-11 20:15:09,781:INFO:                pyod: 1.0.9
2023-04-11 20:15:09,781:INFO:            imblearn: 0.10.1
2023-04-11 20:15:09,781:INFO:   category_encoders: 2.6.0
2023-04-11 20:15:09,781:INFO:            lightgbm: 3.3.5
2023-04-11 20:15:09,781:INFO:               numba: 0.56.4
2023-04-11 20:15:09,781:INFO:            requests: 2.28.1
2023-04-11 20:15:09,781:INFO:          matplotlib: 3.7.1
2023-04-11 20:15:09,781:INFO:          scikitplot: 0.3.7
2023-04-11 20:15:09,781:INFO:         yellowbrick: 1.5
2023-04-11 20:15:09,781:INFO:              plotly: 5.14.1
2023-04-11 20:15:09,781:INFO:             kaleido: 0.2.1
2023-04-11 20:15:09,781:INFO:         statsmodels: 0.13.5
2023-04-11 20:15:09,782:INFO:              sktime: 0.17.1
2023-04-11 20:15:09,782:INFO:               tbats: 1.1.2
2023-04-11 20:15:09,782:INFO:            pmdarima: 2.0.3
2023-04-11 20:15:09,782:INFO:              psutil: 5.9.4
2023-04-11 20:15:09,782:INFO:PyCaret optional dependencies:
2023-04-11 20:15:09,794:INFO:                shap: 0.41.0
2023-04-11 20:15:09,794:INFO:           interpret: Not installed
2023-04-11 20:15:09,794:INFO:                umap: Not installed
2023-04-11 20:15:09,794:INFO:    pandas_profiling: Not installed
2023-04-11 20:15:09,794:INFO:  explainerdashboard: Not installed
2023-04-11 20:15:09,794:INFO:             autoviz: Not installed
2023-04-11 20:15:09,795:INFO:           fairlearn: Not installed
2023-04-11 20:15:09,795:INFO:             xgboost: 1.7.5
2023-04-11 20:15:09,795:INFO:            catboost: Not installed
2023-04-11 20:15:09,795:INFO:              kmodes: Not installed
2023-04-11 20:15:09,795:INFO:             mlxtend: Not installed
2023-04-11 20:15:09,795:INFO:       statsforecast: Not installed
2023-04-11 20:15:09,795:INFO:        tune_sklearn: Not installed
2023-04-11 20:15:09,795:INFO:                 ray: Not installed
2023-04-11 20:15:09,795:INFO:            hyperopt: Not installed
2023-04-11 20:15:09,795:INFO:              optuna: Not installed
2023-04-11 20:15:09,795:INFO:               skopt: Not installed
2023-04-11 20:15:09,795:INFO:              mlflow: Not installed
2023-04-11 20:15:09,795:INFO:              gradio: Not installed
2023-04-11 20:15:09,795:INFO:             fastapi: Not installed
2023-04-11 20:15:09,795:INFO:             uvicorn: Not installed
2023-04-11 20:15:09,795:INFO:              m2cgen: Not installed
2023-04-11 20:15:09,795:INFO:           evidently: Not installed
2023-04-11 20:15:09,795:INFO:               fugue: Not installed
2023-04-11 20:15:09,795:INFO:           streamlit: 1.21.0
2023-04-11 20:15:09,795:INFO:             prophet: Not installed
2023-04-11 20:15:09,795:INFO:None
2023-04-11 20:15:09,796:INFO:Set up data.
2023-04-11 20:15:09,825:INFO:Set up train/test split.
2023-04-11 20:15:09,840:INFO:Set up index.
2023-04-11 20:15:09,840:INFO:Set up folding strategy.
2023-04-11 20:15:09,840:INFO:Assigning column types.
2023-04-11 20:15:09,844:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-11 20:15:09,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 20:15:09,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:15:09,899:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:09,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:09,952:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 20:15:09,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:15:09,971:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:09,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:09,973:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-11 20:15:10,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:15:10,032:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:10,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:10,065:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 20:15:10,083:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:10,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:10,085:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-11 20:15:10,135:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:10,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:10,185:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:10,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:10,188:INFO:Preparing preprocessing pipeline...
2023-04-11 20:15:10,188:INFO:Set up label encoding.
2023-04-11 20:15:10,188:INFO:Set up simple imputation.
2023-04-11 20:15:10,196:INFO:Set up encoding of ordinal features.
2023-04-11 20:15:10,213:INFO:Set up encoding of categorical features.
2023-04-11 20:15:10,214:INFO:Set up column name cleaning.
2023-04-11 20:15:10,582:INFO:Finished creating preprocessing pipeline.
2023-04-11 20:15:10,671:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7838,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-11 20:15:10,671:INFO:Creating final display dataframe.
2023-04-11 20:15:11,376:INFO:Setup _display_container:                     Description                             Value
0                    Session id                              7838
1                        Target                   Customer Status
2                   Target type                        Multiclass
3                Target mapping  Churned: 0, Joined: 1, Stayed: 2
4           Original data shape                        (7043, 38)
5        Transformed data shape                        (7043, 72)
6   Transformed train set shape                        (4930, 72)
7    Transformed test set shape                        (2113, 72)
8              Ordinal features                                14
9              Numeric features                                15
10         Categorical features                                22
11     Rows with missing values                             77.5%
12                   Preprocess                              True
13              Imputation type                            simple
14           Numeric imputation                              mean
15       Categorical imputation                              mode
16     Maximum one-hot encoding                                25
17              Encoding method                              None
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              b123
2023-04-11 20:15:11,434:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:11,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:11,490:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 20:15:11,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 20:15:11,493:INFO:setup() successfully completed in 1.73s...............
2023-04-11 20:15:11,493:INFO:Initializing compare_models()
2023-04-11 20:15:11,493:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 20:15:11,493:INFO:Checking exceptions
2023-04-11 20:15:11,496:INFO:Preparing display monitor
2023-04-11 20:15:11,522:INFO:Initializing Logistic Regression
2023-04-11 20:15:11,522:INFO:Total runtime is 5.582968393961589e-06 minutes
2023-04-11 20:15:11,525:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:11,525:INFO:Initializing create_model()
2023-04-11 20:15:11,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:11,525:INFO:Checking exceptions
2023-04-11 20:15:11,526:INFO:Importing libraries
2023-04-11 20:15:11,526:INFO:Copying training dataset
2023-04-11 20:15:11,531:INFO:Defining folds
2023-04-11 20:15:11,531:INFO:Declaring metric variables
2023-04-11 20:15:11,534:INFO:Importing untrained model
2023-04-11 20:15:11,537:INFO:Logistic Regression Imported successfully
2023-04-11 20:15:11,548:INFO:Starting cross validation
2023-04-11 20:15:11,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:18,729:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:18,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:18,981:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,498:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,505:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,535:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,550:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,571:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,660:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,669:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,683:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,697:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:19,729:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,733:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,738:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:19,837:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 20:15:20,118:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,121:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,126:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,206:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,211:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,214:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,216:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,218:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,224:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,251:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,255:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,260:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,299:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,302:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,305:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,387:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,390:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,393:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,486:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,489:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,492:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:20,497:INFO:Calculating mean and std
2023-04-11 20:15:20,499:INFO:Creating metrics dataframe
2023-04-11 20:15:20,541:INFO:Uploading results into container
2023-04-11 20:15:20,542:INFO:Uploading model into container now
2023-04-11 20:15:20,543:INFO:_master_model_container: 1
2023-04-11 20:15:20,543:INFO:_display_container: 2
2023-04-11 20:15:20,543:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7838, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 20:15:20,543:INFO:create_model() successfully completed......................................
2023-04-11 20:15:20,625:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:20,625:INFO:Creating metrics dataframe
2023-04-11 20:15:20,632:INFO:Initializing K Neighbors Classifier
2023-04-11 20:15:20,632:INFO:Total runtime is 0.15183517932891843 minutes
2023-04-11 20:15:20,634:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:20,634:INFO:Initializing create_model()
2023-04-11 20:15:20,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:20,635:INFO:Checking exceptions
2023-04-11 20:15:20,635:INFO:Importing libraries
2023-04-11 20:15:20,635:INFO:Copying training dataset
2023-04-11 20:15:20,643:INFO:Defining folds
2023-04-11 20:15:20,643:INFO:Declaring metric variables
2023-04-11 20:15:20,646:INFO:Importing untrained model
2023-04-11 20:15:20,648:INFO:K Neighbors Classifier Imported successfully
2023-04-11 20:15:20,653:INFO:Starting cross validation
2023-04-11 20:15:20,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:22,123:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,128:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,133:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,189:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,195:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,200:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,202:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,264:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,270:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,288:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,293:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,364:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,367:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,369:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,388:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,395:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,399:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,510:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:22,513:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,251:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,274:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,277:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,280:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:23,285:INFO:Calculating mean and std
2023-04-11 20:15:23,286:INFO:Creating metrics dataframe
2023-04-11 20:15:23,336:INFO:Uploading results into container
2023-04-11 20:15:23,336:INFO:Uploading model into container now
2023-04-11 20:15:23,337:INFO:_master_model_container: 2
2023-04-11 20:15:23,337:INFO:_display_container: 2
2023-04-11 20:15:23,337:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 20:15:23,337:INFO:create_model() successfully completed......................................
2023-04-11 20:15:23,402:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:23,402:INFO:Creating metrics dataframe
2023-04-11 20:15:23,410:INFO:Initializing Naive Bayes
2023-04-11 20:15:23,410:INFO:Total runtime is 0.1981456637382507 minutes
2023-04-11 20:15:23,413:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:23,413:INFO:Initializing create_model()
2023-04-11 20:15:23,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:23,413:INFO:Checking exceptions
2023-04-11 20:15:23,413:INFO:Importing libraries
2023-04-11 20:15:23,413:INFO:Copying training dataset
2023-04-11 20:15:23,419:INFO:Defining folds
2023-04-11 20:15:23,420:INFO:Declaring metric variables
2023-04-11 20:15:23,422:INFO:Importing untrained model
2023-04-11 20:15:23,426:INFO:Naive Bayes Imported successfully
2023-04-11 20:15:23,431:INFO:Starting cross validation
2023-04-11 20:15:23,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:24,614:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,617:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,620:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,687:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,691:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,732:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,736:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,737:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,742:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,746:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,751:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,830:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,837:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,838:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,839:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,842:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,867:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,870:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,872:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,891:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,897:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:24,999:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:25,002:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:25,004:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:25,011:INFO:Calculating mean and std
2023-04-11 20:15:25,012:INFO:Creating metrics dataframe
2023-04-11 20:15:25,055:INFO:Uploading results into container
2023-04-11 20:15:25,056:INFO:Uploading model into container now
2023-04-11 20:15:25,056:INFO:_master_model_container: 3
2023-04-11 20:15:25,056:INFO:_display_container: 2
2023-04-11 20:15:25,056:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 20:15:25,056:INFO:create_model() successfully completed......................................
2023-04-11 20:15:25,122:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:25,122:INFO:Creating metrics dataframe
2023-04-11 20:15:25,130:INFO:Initializing Decision Tree Classifier
2023-04-11 20:15:25,130:INFO:Total runtime is 0.2268097678820292 minutes
2023-04-11 20:15:25,133:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:25,133:INFO:Initializing create_model()
2023-04-11 20:15:25,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:25,133:INFO:Checking exceptions
2023-04-11 20:15:25,133:INFO:Importing libraries
2023-04-11 20:15:25,133:INFO:Copying training dataset
2023-04-11 20:15:25,141:INFO:Defining folds
2023-04-11 20:15:25,141:INFO:Declaring metric variables
2023-04-11 20:15:25,144:INFO:Importing untrained model
2023-04-11 20:15:25,147:INFO:Decision Tree Classifier Imported successfully
2023-04-11 20:15:25,153:INFO:Starting cross validation
2023-04-11 20:15:25,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:26,252:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,256:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,259:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,365:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,371:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,416:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,422:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,427:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,552:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,556:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,557:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,561:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,592:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,596:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,599:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,610:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,615:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,620:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,662:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,711:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,714:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,716:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,746:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:26,757:INFO:Calculating mean and std
2023-04-11 20:15:26,759:INFO:Creating metrics dataframe
2023-04-11 20:15:26,806:INFO:Uploading results into container
2023-04-11 20:15:26,806:INFO:Uploading model into container now
2023-04-11 20:15:26,806:INFO:_master_model_container: 4
2023-04-11 20:15:26,806:INFO:_display_container: 2
2023-04-11 20:15:26,807:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7838, splitter='best')
2023-04-11 20:15:26,807:INFO:create_model() successfully completed......................................
2023-04-11 20:15:26,872:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:26,872:INFO:Creating metrics dataframe
2023-04-11 20:15:26,880:INFO:Initializing SVM - Linear Kernel
2023-04-11 20:15:26,880:INFO:Total runtime is 0.2559704542160034 minutes
2023-04-11 20:15:26,882:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:26,883:INFO:Initializing create_model()
2023-04-11 20:15:26,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:26,883:INFO:Checking exceptions
2023-04-11 20:15:26,883:INFO:Importing libraries
2023-04-11 20:15:26,883:INFO:Copying training dataset
2023-04-11 20:15:26,889:INFO:Defining folds
2023-04-11 20:15:26,889:INFO:Declaring metric variables
2023-04-11 20:15:26,891:INFO:Importing untrained model
2023-04-11 20:15:26,895:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 20:15:26,900:INFO:Starting cross validation
2023-04-11 20:15:26,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:28,581:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,584:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,589:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,592:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,693:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,700:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,701:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,744:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,754:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,785:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,786:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,789:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,790:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,793:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,816:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,817:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,820:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,822:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,822:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,825:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,830:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,833:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,836:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,837:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,840:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,842:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,843:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,844:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,849:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,852:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,854:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,860:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,863:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,868:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,869:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,871:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,989:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:15:28,990:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:28,995:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:28,996:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:29,002:INFO:Calculating mean and std
2023-04-11 20:15:29,003:INFO:Creating metrics dataframe
2023-04-11 20:15:29,053:INFO:Uploading results into container
2023-04-11 20:15:29,054:INFO:Uploading model into container now
2023-04-11 20:15:29,054:INFO:_master_model_container: 5
2023-04-11 20:15:29,054:INFO:_display_container: 2
2023-04-11 20:15:29,054:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7838, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-11 20:15:29,054:INFO:create_model() successfully completed......................................
2023-04-11 20:15:29,125:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:29,125:INFO:Creating metrics dataframe
2023-04-11 20:15:29,137:INFO:Initializing Ridge Classifier
2023-04-11 20:15:29,137:INFO:Total runtime is 0.2935842434565226 minutes
2023-04-11 20:15:29,139:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:29,139:INFO:Initializing create_model()
2023-04-11 20:15:29,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:29,139:INFO:Checking exceptions
2023-04-11 20:15:29,139:INFO:Importing libraries
2023-04-11 20:15:29,139:INFO:Copying training dataset
2023-04-11 20:15:29,147:INFO:Defining folds
2023-04-11 20:15:29,148:INFO:Declaring metric variables
2023-04-11 20:15:29,150:INFO:Importing untrained model
2023-04-11 20:15:29,153:INFO:Ridge Classifier Imported successfully
2023-04-11 20:15:29,158:INFO:Starting cross validation
2023-04-11 20:15:29,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:30,333:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,337:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,351:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,424:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,426:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,429:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,431:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,433:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,468:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,471:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,476:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,479:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,481:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,510:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,518:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,520:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,520:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,523:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,523:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,524:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,529:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,530:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,569:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,571:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,573:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,574:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,578:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,582:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,584:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,585:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,653:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,654:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,656:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,659:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,684:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:15:30,685:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,688:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,689:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:15:30,690:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:30,696:INFO:Calculating mean and std
2023-04-11 20:15:30,697:INFO:Creating metrics dataframe
2023-04-11 20:15:30,745:INFO:Uploading results into container
2023-04-11 20:15:30,746:INFO:Uploading model into container now
2023-04-11 20:15:30,746:INFO:_master_model_container: 6
2023-04-11 20:15:30,746:INFO:_display_container: 2
2023-04-11 20:15:30,747:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7838, solver='auto',
                tol=0.0001)
2023-04-11 20:15:30,747:INFO:create_model() successfully completed......................................
2023-04-11 20:15:30,815:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:30,815:INFO:Creating metrics dataframe
2023-04-11 20:15:30,823:INFO:Initializing Random Forest Classifier
2023-04-11 20:15:30,823:INFO:Total runtime is 0.32168490886688234 minutes
2023-04-11 20:15:30,825:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:30,826:INFO:Initializing create_model()
2023-04-11 20:15:30,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:30,826:INFO:Checking exceptions
2023-04-11 20:15:30,826:INFO:Importing libraries
2023-04-11 20:15:30,826:INFO:Copying training dataset
2023-04-11 20:15:30,835:INFO:Defining folds
2023-04-11 20:15:30,835:INFO:Declaring metric variables
2023-04-11 20:15:30,838:INFO:Importing untrained model
2023-04-11 20:15:30,840:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:15:30,848:INFO:Starting cross validation
2023-04-11 20:15:30,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:33,077:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,083:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,087:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,314:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,320:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,326:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,438:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,444:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,448:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,453:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,483:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,488:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,491:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,513:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,519:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,526:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,529:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,574:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,577:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,578:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,581:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,584:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,584:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,587:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:33,633:INFO:Calculating mean and std
2023-04-11 20:15:33,634:INFO:Creating metrics dataframe
2023-04-11 20:15:33,683:INFO:Uploading results into container
2023-04-11 20:15:33,683:INFO:Uploading model into container now
2023-04-11 20:15:33,683:INFO:_master_model_container: 7
2023-04-11 20:15:33,684:INFO:_display_container: 2
2023-04-11 20:15:33,684:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:15:33,684:INFO:create_model() successfully completed......................................
2023-04-11 20:15:33,750:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:33,750:INFO:Creating metrics dataframe
2023-04-11 20:15:33,758:INFO:Initializing Quadratic Discriminant Analysis
2023-04-11 20:15:33,758:INFO:Total runtime is 0.3706003228823344 minutes
2023-04-11 20:15:33,761:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:33,761:INFO:Initializing create_model()
2023-04-11 20:15:33,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:33,761:INFO:Checking exceptions
2023-04-11 20:15:33,761:INFO:Importing libraries
2023-04-11 20:15:33,761:INFO:Copying training dataset
2023-04-11 20:15:33,769:INFO:Defining folds
2023-04-11 20:15:33,769:INFO:Declaring metric variables
2023-04-11 20:15:33,772:INFO:Importing untrained model
2023-04-11 20:15:33,774:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-11 20:15:33,781:INFO:Starting cross validation
2023-04-11 20:15:33,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:34,359:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,387:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,418:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,434:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,493:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,521:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,584:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:15:34,962:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:34,966:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:34,970:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:34,979:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:34,985:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:34,991:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,157:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,170:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,173:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,183:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,184:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,188:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,189:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,193:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,195:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,234:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,235:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,236:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,249:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,252:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,255:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:35,301:INFO:Calculating mean and std
2023-04-11 20:15:35,302:INFO:Creating metrics dataframe
2023-04-11 20:15:35,351:INFO:Uploading results into container
2023-04-11 20:15:35,351:INFO:Uploading model into container now
2023-04-11 20:15:35,352:INFO:_master_model_container: 8
2023-04-11 20:15:35,352:INFO:_display_container: 2
2023-04-11 20:15:35,352:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-11 20:15:35,352:INFO:create_model() successfully completed......................................
2023-04-11 20:15:35,414:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:35,415:INFO:Creating metrics dataframe
2023-04-11 20:15:35,423:INFO:Initializing Ada Boost Classifier
2023-04-11 20:15:35,423:INFO:Total runtime is 0.39835331439971927 minutes
2023-04-11 20:15:35,426:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:35,426:INFO:Initializing create_model()
2023-04-11 20:15:35,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:35,427:INFO:Checking exceptions
2023-04-11 20:15:35,427:INFO:Importing libraries
2023-04-11 20:15:35,427:INFO:Copying training dataset
2023-04-11 20:15:35,433:INFO:Defining folds
2023-04-11 20:15:35,434:INFO:Declaring metric variables
2023-04-11 20:15:35,437:INFO:Importing untrained model
2023-04-11 20:15:35,440:INFO:Ada Boost Classifier Imported successfully
2023-04-11 20:15:35,447:INFO:Starting cross validation
2023-04-11 20:15:35,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:37,470:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,474:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,479:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,557:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,561:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,565:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,884:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,890:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,897:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,987:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,991:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,991:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,995:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:37,997:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,004:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,006:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,010:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,012:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,016:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,060:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,063:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,067:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,071:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,074:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,093:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,096:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:38,144:INFO:Calculating mean and std
2023-04-11 20:15:38,146:INFO:Creating metrics dataframe
2023-04-11 20:15:38,202:INFO:Uploading results into container
2023-04-11 20:15:38,203:INFO:Uploading model into container now
2023-04-11 20:15:38,203:INFO:_master_model_container: 9
2023-04-11 20:15:38,203:INFO:_display_container: 2
2023-04-11 20:15:38,204:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7838)
2023-04-11 20:15:38,204:INFO:create_model() successfully completed......................................
2023-04-11 20:15:38,268:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:38,268:INFO:Creating metrics dataframe
2023-04-11 20:15:38,276:INFO:Initializing Gradient Boosting Classifier
2023-04-11 20:15:38,276:INFO:Total runtime is 0.4459097743034363 minutes
2023-04-11 20:15:38,279:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:38,279:INFO:Initializing create_model()
2023-04-11 20:15:38,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:38,279:INFO:Checking exceptions
2023-04-11 20:15:38,279:INFO:Importing libraries
2023-04-11 20:15:38,279:INFO:Copying training dataset
2023-04-11 20:15:38,286:INFO:Defining folds
2023-04-11 20:15:38,286:INFO:Declaring metric variables
2023-04-11 20:15:38,288:INFO:Importing untrained model
2023-04-11 20:15:38,291:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 20:15:38,296:INFO:Starting cross validation
2023-04-11 20:15:38,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:48,457:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:48,738:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:48,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:48,788:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:48,795:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,071:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,085:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,238:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:49,332:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,338:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,376:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:49,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,522:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,526:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,553:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,563:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:49,567:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,619:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:49,624:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,628:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,631:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,685:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,691:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,770:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,774:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,777:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,793:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,796:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:49,806:INFO:Calculating mean and std
2023-04-11 20:15:49,807:INFO:Creating metrics dataframe
2023-04-11 20:15:49,877:INFO:Uploading results into container
2023-04-11 20:15:49,877:INFO:Uploading model into container now
2023-04-11 20:15:49,878:INFO:_master_model_container: 10
2023-04-11 20:15:49,878:INFO:_display_container: 2
2023-04-11 20:15:49,878:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7838, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 20:15:49,878:INFO:create_model() successfully completed......................................
2023-04-11 20:15:49,944:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:49,944:INFO:Creating metrics dataframe
2023-04-11 20:15:49,955:INFO:Initializing Linear Discriminant Analysis
2023-04-11 20:15:49,955:INFO:Total runtime is 0.6405602892239889 minutes
2023-04-11 20:15:49,958:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:49,959:INFO:Initializing create_model()
2023-04-11 20:15:49,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:49,959:INFO:Checking exceptions
2023-04-11 20:15:49,959:INFO:Importing libraries
2023-04-11 20:15:49,959:INFO:Copying training dataset
2023-04-11 20:15:49,970:INFO:Defining folds
2023-04-11 20:15:49,970:INFO:Declaring metric variables
2023-04-11 20:15:49,973:INFO:Importing untrained model
2023-04-11 20:15:49,975:INFO:Linear Discriminant Analysis Imported successfully
2023-04-11 20:15:49,980:INFO:Starting cross validation
2023-04-11 20:15:49,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:51,535:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,546:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,703:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,710:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,714:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,836:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,845:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,853:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,883:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,891:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,895:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,897:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,905:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,913:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,932:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,941:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,948:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:51,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,009:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,009:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,024:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,031:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,037:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,181:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,188:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:52,197:INFO:Calculating mean and std
2023-04-11 20:15:52,198:INFO:Creating metrics dataframe
2023-04-11 20:15:52,283:INFO:Uploading results into container
2023-04-11 20:15:52,284:INFO:Uploading model into container now
2023-04-11 20:15:52,285:INFO:_master_model_container: 11
2023-04-11 20:15:52,285:INFO:_display_container: 2
2023-04-11 20:15:52,286:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-11 20:15:52,286:INFO:create_model() successfully completed......................................
2023-04-11 20:15:52,400:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:52,400:INFO:Creating metrics dataframe
2023-04-11 20:15:52,413:INFO:Initializing Extra Trees Classifier
2023-04-11 20:15:52,414:INFO:Total runtime is 0.68153342405955 minutes
2023-04-11 20:15:52,418:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:52,419:INFO:Initializing create_model()
2023-04-11 20:15:52,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:52,419:INFO:Checking exceptions
2023-04-11 20:15:52,419:INFO:Importing libraries
2023-04-11 20:15:52,419:INFO:Copying training dataset
2023-04-11 20:15:52,430:INFO:Defining folds
2023-04-11 20:15:52,430:INFO:Declaring metric variables
2023-04-11 20:15:52,435:INFO:Importing untrained model
2023-04-11 20:15:52,443:INFO:Extra Trees Classifier Imported successfully
2023-04-11 20:15:52,453:INFO:Starting cross validation
2023-04-11 20:15:52,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:15:55,697:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:55,707:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:55,723:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:55,888:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:55,957:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:55,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:56,158:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,168:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:56,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,186:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,205:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,221:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,259:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,268:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:56,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,281:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,320:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,321:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,327:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,328:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,335:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,335:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,388:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:56,491:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,496:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 20:15:56,563:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,571:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,577:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,650:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,657:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,660:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,706:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,710:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,713:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:15:56,720:INFO:Calculating mean and std
2023-04-11 20:15:56,722:INFO:Creating metrics dataframe
2023-04-11 20:15:56,810:INFO:Uploading results into container
2023-04-11 20:15:56,811:INFO:Uploading model into container now
2023-04-11 20:15:56,811:INFO:_master_model_container: 12
2023-04-11 20:15:56,811:INFO:_display_container: 2
2023-04-11 20:15:56,812:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:15:56,812:INFO:create_model() successfully completed......................................
2023-04-11 20:15:56,896:INFO:SubProcess create_model() end ==================================
2023-04-11 20:15:56,896:INFO:Creating metrics dataframe
2023-04-11 20:15:56,909:INFO:Initializing Extreme Gradient Boosting
2023-04-11 20:15:56,909:INFO:Total runtime is 0.756458842754364 minutes
2023-04-11 20:15:56,912:INFO:SubProcess create_model() called ==================================
2023-04-11 20:15:56,912:INFO:Initializing create_model()
2023-04-11 20:15:56,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:15:56,913:INFO:Checking exceptions
2023-04-11 20:15:56,913:INFO:Importing libraries
2023-04-11 20:15:56,913:INFO:Copying training dataset
2023-04-11 20:15:56,920:INFO:Defining folds
2023-04-11 20:15:56,920:INFO:Declaring metric variables
2023-04-11 20:15:56,924:INFO:Importing untrained model
2023-04-11 20:15:56,929:INFO:Extreme Gradient Boosting Imported successfully
2023-04-11 20:15:56,937:INFO:Starting cross validation
2023-04-11 20:15:56,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:16:05,748:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:05,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:05,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:06,336:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:06,340:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:06,344:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:07,643:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:07,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:07,657:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:07,663:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:07,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:07,672:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,049:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,053:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,058:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,235:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,239:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,244:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,319:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,325:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,332:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,405:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,410:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,416:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,438:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,441:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,445:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,449:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:08,479:INFO:Calculating mean and std
2023-04-11 20:16:08,480:INFO:Creating metrics dataframe
2023-04-11 20:16:08,562:INFO:Uploading results into container
2023-04-11 20:16:08,563:INFO:Uploading model into container now
2023-04-11 20:16:08,564:INFO:_master_model_container: 13
2023-04-11 20:16:08,564:INFO:_display_container: 2
2023-04-11 20:16:08,565:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-11 20:16:08,565:INFO:create_model() successfully completed......................................
2023-04-11 20:16:08,634:INFO:SubProcess create_model() end ==================================
2023-04-11 20:16:08,634:INFO:Creating metrics dataframe
2023-04-11 20:16:08,644:INFO:Initializing Light Gradient Boosting Machine
2023-04-11 20:16:08,644:INFO:Total runtime is 0.9520349820454915 minutes
2023-04-11 20:16:08,646:INFO:SubProcess create_model() called ==================================
2023-04-11 20:16:08,647:INFO:Initializing create_model()
2023-04-11 20:16:08,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:16:08,647:INFO:Checking exceptions
2023-04-11 20:16:08,647:INFO:Importing libraries
2023-04-11 20:16:08,647:INFO:Copying training dataset
2023-04-11 20:16:08,654:INFO:Defining folds
2023-04-11 20:16:08,654:INFO:Declaring metric variables
2023-04-11 20:16:08,658:INFO:Importing untrained model
2023-04-11 20:16:08,663:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 20:16:08,670:INFO:Starting cross validation
2023-04-11 20:16:08,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:16:11,411:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,417:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,421:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,636:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,643:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,651:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,660:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,669:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,679:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,687:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,740:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,746:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,755:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,761:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,768:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,774:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,782:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,783:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,786:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,788:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,790:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,795:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:11,925:INFO:Calculating mean and std
2023-04-11 20:16:11,926:INFO:Creating metrics dataframe
2023-04-11 20:16:11,997:INFO:Uploading results into container
2023-04-11 20:16:11,998:INFO:Uploading model into container now
2023-04-11 20:16:11,998:INFO:_master_model_container: 14
2023-04-11 20:16:11,998:INFO:_display_container: 2
2023-04-11 20:16:11,998:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7838, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 20:16:11,998:INFO:create_model() successfully completed......................................
2023-04-11 20:16:12,067:INFO:SubProcess create_model() end ==================================
2023-04-11 20:16:12,067:INFO:Creating metrics dataframe
2023-04-11 20:16:12,077:INFO:Initializing Dummy Classifier
2023-04-11 20:16:12,077:INFO:Total runtime is 1.0092580755551657 minutes
2023-04-11 20:16:12,081:INFO:SubProcess create_model() called ==================================
2023-04-11 20:16:12,081:INFO:Initializing create_model()
2023-04-11 20:16:12,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff5cc642b90>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:16:12,081:INFO:Checking exceptions
2023-04-11 20:16:12,081:INFO:Importing libraries
2023-04-11 20:16:12,081:INFO:Copying training dataset
2023-04-11 20:16:12,091:INFO:Defining folds
2023-04-11 20:16:12,091:INFO:Declaring metric variables
2023-04-11 20:16:12,094:INFO:Importing untrained model
2023-04-11 20:16:12,097:INFO:Dummy Classifier Imported successfully
2023-04-11 20:16:12,103:INFO:Starting cross validation
2023-04-11 20:16:12,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:16:13,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,217:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,220:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,319:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,323:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,325:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,328:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,450:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,453:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,457:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,554:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,564:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,566:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,631:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,636:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,639:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,642:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,686:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,690:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,692:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,694:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,705:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,709:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,712:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,712:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,715:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,717:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,719:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,721:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,726:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,729:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:16:13,732:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:13,788:INFO:Calculating mean and std
2023-04-11 20:16:13,789:INFO:Creating metrics dataframe
2023-04-11 20:16:13,863:INFO:Uploading results into container
2023-04-11 20:16:13,864:INFO:Uploading model into container now
2023-04-11 20:16:13,864:INFO:_master_model_container: 15
2023-04-11 20:16:13,864:INFO:_display_container: 2
2023-04-11 20:16:13,865:INFO:DummyClassifier(constant=None, random_state=7838, strategy='prior')
2023-04-11 20:16:13,865:INFO:create_model() successfully completed......................................
2023-04-11 20:16:13,929:INFO:SubProcess create_model() end ==================================
2023-04-11 20:16:13,929:INFO:Creating metrics dataframe
2023-04-11 20:16:13,947:INFO:Initializing create_model()
2023-04-11 20:16:13,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:16:13,947:INFO:Checking exceptions
2023-04-11 20:16:13,949:INFO:Importing libraries
2023-04-11 20:16:13,949:INFO:Copying training dataset
2023-04-11 20:16:13,955:INFO:Defining folds
2023-04-11 20:16:13,955:INFO:Declaring metric variables
2023-04-11 20:16:13,955:INFO:Importing untrained model
2023-04-11 20:16:13,955:INFO:Declaring custom model
2023-04-11 20:16:13,956:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:16:13,958:INFO:Cross validation set to False
2023-04-11 20:16:13,958:INFO:Fitting Model
2023-04-11 20:16:14,839:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:16:14,839:INFO:create_model() successfully completed......................................
2023-04-11 20:16:14,959:INFO:_master_model_container: 15
2023-04-11 20:16:14,959:INFO:_display_container: 2
2023-04-11 20:16:14,960:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:16:14,961:INFO:compare_models() successfully completed......................................
2023-04-11 20:16:15,102:INFO:Initializing create_model()
2023-04-11 20:16:15,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:16:15,102:INFO:Checking exceptions
2023-04-11 20:16:15,128:INFO:Importing libraries
2023-04-11 20:16:15,130:INFO:Copying training dataset
2023-04-11 20:16:15,152:INFO:Defining folds
2023-04-11 20:16:15,152:INFO:Declaring metric variables
2023-04-11 20:16:15,163:INFO:Importing untrained model
2023-04-11 20:16:15,176:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:16:15,189:INFO:Starting cross validation
2023-04-11 20:16:15,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:16:16,581:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,648:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,656:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,732:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,742:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,750:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,750:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,757:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,758:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,764:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,765:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:16,769:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,100:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,107:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,113:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,205:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,209:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,214:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,351:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,355:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,457:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,458:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,460:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,463:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:16:17,490:INFO:Calculating mean and std
2023-04-11 20:16:17,491:INFO:Creating metrics dataframe
2023-04-11 20:16:17,496:INFO:Finalizing model
2023-04-11 20:16:18,070:INFO:Uploading results into container
2023-04-11 20:16:18,071:INFO:Uploading model into container now
2023-04-11 20:16:18,080:INFO:_master_model_container: 16
2023-04-11 20:16:18,081:INFO:_display_container: 3
2023-04-11 20:16:18,081:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:16:18,081:INFO:create_model() successfully completed......................................
2023-04-11 20:16:18,220:INFO:Initializing interpret_model()
2023-04-11 20:16:18,220:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>)
2023-04-11 20:16:18,220:INFO:Checking exceptions
2023-04-11 20:16:18,220:INFO:Soft dependency imported: shap: 0.41.0
2023-04-11 20:16:20,109:INFO:plot type: summary
2023-04-11 20:16:20,109:INFO:Creating TreeExplainer
2023-04-11 20:16:20,116:INFO:Compiling shap values
2023-04-11 20:16:51,480:INFO:Visual Rendered Successfully
2023-04-11 20:16:51,481:INFO:interpret_model() successfully completed......................................
2023-04-11 20:18:51,494:INFO:Initializing create_model()
2023-04-11 20:18:51,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:18:51,494:INFO:Checking exceptions
2023-04-11 20:18:51,515:INFO:Importing libraries
2023-04-11 20:18:51,515:INFO:Copying training dataset
2023-04-11 20:18:51,529:INFO:Defining folds
2023-04-11 20:18:51,529:INFO:Declaring metric variables
2023-04-11 20:18:51,534:INFO:Importing untrained model
2023-04-11 20:18:51,538:INFO:Logistic Regression Imported successfully
2023-04-11 20:18:51,547:INFO:Starting cross validation
2023-04-11 20:18:51,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:18:52,806:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:52,812:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:52,814:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:52,817:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:52,818:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:52,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,039:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,046:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,052:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,070:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,081:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,085:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,086:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,094:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,101:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,108:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,119:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,125:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,130:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,172:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,188:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,192:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,200:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,203:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:18:53,272:INFO:Calculating mean and std
2023-04-11 20:18:53,273:INFO:Creating metrics dataframe
2023-04-11 20:18:53,278:INFO:Finalizing model
2023-04-11 20:18:56,700:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2023-04-11 20:18:56,818:INFO:Uploading results into container
2023-04-11 20:18:56,819:INFO:Uploading model into container now
2023-04-11 20:18:56,831:INFO:_master_model_container: 17
2023-04-11 20:18:56,831:INFO:_display_container: 4
2023-04-11 20:18:56,831:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7838, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 20:18:56,831:INFO:create_model() successfully completed......................................
2023-04-11 20:19:31,426:INFO:Initializing interpret_model()
2023-04-11 20:19:31,426:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7838, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>)
2023-04-11 20:19:31,426:INFO:Checking exceptions
2023-04-11 20:19:31,426:INFO:Soft dependency imported: shap: 0.41.0
2023-04-11 20:19:52,495:INFO:Initializing create_model()
2023-04-11 20:19:52,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:19:52,495:INFO:Checking exceptions
2023-04-11 20:19:52,515:INFO:Importing libraries
2023-04-11 20:19:52,515:INFO:Copying training dataset
2023-04-11 20:19:52,528:INFO:Defining folds
2023-04-11 20:19:52,528:INFO:Declaring metric variables
2023-04-11 20:19:52,532:INFO:Importing untrained model
2023-04-11 20:19:52,537:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 20:19:52,546:INFO:Starting cross validation
2023-04-11 20:19:52,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:19:53,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,379:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,385:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,435:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,440:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,445:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,506:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,574:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,580:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,587:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,624:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,630:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,633:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,633:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,637:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,639:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,640:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,645:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,647:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,661:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,706:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,711:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,717:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,932:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,935:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,937:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:19:53,942:INFO:Calculating mean and std
2023-04-11 20:19:53,943:INFO:Creating metrics dataframe
2023-04-11 20:19:53,951:INFO:Finalizing model
2023-04-11 20:19:54,874:INFO:Uploading results into container
2023-04-11 20:19:54,875:INFO:Uploading model into container now
2023-04-11 20:19:54,885:INFO:_master_model_container: 18
2023-04-11 20:19:54,886:INFO:_display_container: 5
2023-04-11 20:19:54,886:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7838, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 20:19:54,886:INFO:create_model() successfully completed......................................
2023-04-11 20:19:56,640:INFO:Initializing interpret_model()
2023-04-11 20:19:56,640:INFO:interpret_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7838, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>)
2023-04-11 20:19:56,641:INFO:Checking exceptions
2023-04-11 20:19:56,641:INFO:Soft dependency imported: shap: 0.41.0
2023-04-11 20:19:56,679:INFO:plot type: summary
2023-04-11 20:19:56,679:INFO:Creating TreeExplainer
2023-04-11 20:19:56,853:INFO:Compiling shap values
2023-04-11 20:19:58,202:INFO:Visual Rendered Successfully
2023-04-11 20:19:58,202:INFO:interpret_model() successfully completed......................................
2023-04-11 20:22:31,330:INFO:Initializing compare_models()
2023-04-11 20:22:31,331:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 20:22:31,331:INFO:Checking exceptions
2023-04-11 20:22:31,335:INFO:Preparing display monitor
2023-04-11 20:22:31,368:INFO:Initializing Logistic Regression
2023-04-11 20:22:31,368:INFO:Total runtime is 4.239877065022787e-06 minutes
2023-04-11 20:22:31,372:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:31,373:INFO:Initializing create_model()
2023-04-11 20:22:31,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:31,373:INFO:Checking exceptions
2023-04-11 20:22:31,373:INFO:Importing libraries
2023-04-11 20:22:31,373:INFO:Copying training dataset
2023-04-11 20:22:31,381:INFO:Defining folds
2023-04-11 20:22:31,382:INFO:Declaring metric variables
2023-04-11 20:22:31,384:INFO:Importing untrained model
2023-04-11 20:22:31,387:INFO:Logistic Regression Imported successfully
2023-04-11 20:22:31,396:INFO:Starting cross validation
2023-04-11 20:22:31,399:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:31,865:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:31,869:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:31,872:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:31,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:31,997:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,004:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,009:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,015:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,032:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,038:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,043:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,090:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,096:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,098:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,101:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,103:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,109:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,120:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,123:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,128:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,129:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,135:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,136:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,139:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,140:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,144:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,179:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,183:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:32,238:INFO:Calculating mean and std
2023-04-11 20:22:32,238:INFO:Creating metrics dataframe
2023-04-11 20:22:32,305:INFO:Uploading results into container
2023-04-11 20:22:32,306:INFO:Uploading model into container now
2023-04-11 20:22:32,306:INFO:_master_model_container: 19
2023-04-11 20:22:32,306:INFO:_display_container: 6
2023-04-11 20:22:32,307:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7838, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 20:22:32,307:INFO:create_model() successfully completed......................................
2023-04-11 20:22:32,453:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:32,453:INFO:Creating metrics dataframe
2023-04-11 20:22:32,460:INFO:Initializing K Neighbors Classifier
2023-04-11 20:22:32,460:INFO:Total runtime is 0.01820925076802572 minutes
2023-04-11 20:22:32,463:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:32,463:INFO:Initializing create_model()
2023-04-11 20:22:32,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:32,463:INFO:Checking exceptions
2023-04-11 20:22:32,463:INFO:Importing libraries
2023-04-11 20:22:32,464:INFO:Copying training dataset
2023-04-11 20:22:32,470:INFO:Defining folds
2023-04-11 20:22:32,470:INFO:Declaring metric variables
2023-04-11 20:22:32,472:INFO:Importing untrained model
2023-04-11 20:22:32,475:INFO:K Neighbors Classifier Imported successfully
2023-04-11 20:22:32,481:INFO:Starting cross validation
2023-04-11 20:22:32,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:33,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,171:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,177:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,309:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,315:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,321:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,365:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,371:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,376:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,502:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,505:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,521:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,524:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,528:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,608:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,612:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,614:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,616:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,617:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,618:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,659:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,672:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,675:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,731:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,736:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:33,742:INFO:Calculating mean and std
2023-04-11 20:22:33,744:INFO:Creating metrics dataframe
2023-04-11 20:22:33,810:INFO:Uploading results into container
2023-04-11 20:22:33,811:INFO:Uploading model into container now
2023-04-11 20:22:33,811:INFO:_master_model_container: 20
2023-04-11 20:22:33,811:INFO:_display_container: 6
2023-04-11 20:22:33,811:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 20:22:33,812:INFO:create_model() successfully completed......................................
2023-04-11 20:22:33,948:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:33,949:INFO:Creating metrics dataframe
2023-04-11 20:22:33,956:INFO:Initializing Naive Bayes
2023-04-11 20:22:33,956:INFO:Total runtime is 0.043130556742350265 minutes
2023-04-11 20:22:33,958:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:33,959:INFO:Initializing create_model()
2023-04-11 20:22:33,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:33,959:INFO:Checking exceptions
2023-04-11 20:22:33,959:INFO:Importing libraries
2023-04-11 20:22:33,959:INFO:Copying training dataset
2023-04-11 20:22:33,966:INFO:Defining folds
2023-04-11 20:22:33,967:INFO:Declaring metric variables
2023-04-11 20:22:33,969:INFO:Importing untrained model
2023-04-11 20:22:33,972:INFO:Naive Bayes Imported successfully
2023-04-11 20:22:33,977:INFO:Starting cross validation
2023-04-11 20:22:33,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:34,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,743:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,747:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,754:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,766:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,774:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,803:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,810:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,813:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,924:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,928:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,930:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,981:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,985:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:34,988:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,023:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,027:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,030:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,050:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,051:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,053:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,053:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,056:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,057:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,099:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,101:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,104:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,113:INFO:Calculating mean and std
2023-04-11 20:22:35,115:INFO:Creating metrics dataframe
2023-04-11 20:22:35,183:INFO:Uploading results into container
2023-04-11 20:22:35,183:INFO:Uploading model into container now
2023-04-11 20:22:35,184:INFO:_master_model_container: 21
2023-04-11 20:22:35,184:INFO:_display_container: 6
2023-04-11 20:22:35,184:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 20:22:35,184:INFO:create_model() successfully completed......................................
2023-04-11 20:22:35,321:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:35,321:INFO:Creating metrics dataframe
2023-04-11 20:22:35,329:INFO:Initializing Decision Tree Classifier
2023-04-11 20:22:35,330:INFO:Total runtime is 0.06602702538172404 minutes
2023-04-11 20:22:35,332:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:35,332:INFO:Initializing create_model()
2023-04-11 20:22:35,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:35,332:INFO:Checking exceptions
2023-04-11 20:22:35,332:INFO:Importing libraries
2023-04-11 20:22:35,332:INFO:Copying training dataset
2023-04-11 20:22:35,339:INFO:Defining folds
2023-04-11 20:22:35,339:INFO:Declaring metric variables
2023-04-11 20:22:35,342:INFO:Importing untrained model
2023-04-11 20:22:35,346:INFO:Decision Tree Classifier Imported successfully
2023-04-11 20:22:35,351:INFO:Starting cross validation
2023-04-11 20:22:35,353:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:35,933:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,937:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:35,940:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,099:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,110:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,155:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,161:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,172:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,180:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,356:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,362:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,367:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,454:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,456:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,459:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,475:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,479:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,482:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,494:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,497:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,528:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,534:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,534:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,536:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:36,565:INFO:Calculating mean and std
2023-04-11 20:22:36,566:INFO:Creating metrics dataframe
2023-04-11 20:22:36,635:INFO:Uploading results into container
2023-04-11 20:22:36,636:INFO:Uploading model into container now
2023-04-11 20:22:36,636:INFO:_master_model_container: 22
2023-04-11 20:22:36,636:INFO:_display_container: 6
2023-04-11 20:22:36,637:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7838, splitter='best')
2023-04-11 20:22:36,637:INFO:create_model() successfully completed......................................
2023-04-11 20:22:36,780:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:36,780:INFO:Creating metrics dataframe
2023-04-11 20:22:36,788:INFO:Initializing SVM - Linear Kernel
2023-04-11 20:22:36,788:INFO:Total runtime is 0.09033611218134563 minutes
2023-04-11 20:22:36,791:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:36,791:INFO:Initializing create_model()
2023-04-11 20:22:36,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:36,791:INFO:Checking exceptions
2023-04-11 20:22:36,792:INFO:Importing libraries
2023-04-11 20:22:36,792:INFO:Copying training dataset
2023-04-11 20:22:36,801:INFO:Defining folds
2023-04-11 20:22:36,801:INFO:Declaring metric variables
2023-04-11 20:22:36,805:INFO:Importing untrained model
2023-04-11 20:22:36,808:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 20:22:36,815:INFO:Starting cross validation
2023-04-11 20:22:36,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:37,444:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,457:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,494:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,496:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,502:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,505:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,508:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,510:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,513:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,537:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,540:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,703:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,704:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,706:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,709:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,718:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,719:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,724:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,725:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,784:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,785:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,788:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,789:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,791:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,818:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,819:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,822:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,824:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,863:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,865:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,867:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,869:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,870:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,873:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 20:22:37,874:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,877:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,879:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:37,880:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:37,899:INFO:Calculating mean and std
2023-04-11 20:22:37,900:INFO:Creating metrics dataframe
2023-04-11 20:22:37,968:INFO:Uploading results into container
2023-04-11 20:22:37,969:INFO:Uploading model into container now
2023-04-11 20:22:37,969:INFO:_master_model_container: 23
2023-04-11 20:22:37,969:INFO:_display_container: 6
2023-04-11 20:22:37,970:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7838, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-11 20:22:37,970:INFO:create_model() successfully completed......................................
2023-04-11 20:22:38,108:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:38,108:INFO:Creating metrics dataframe
2023-04-11 20:22:38,117:INFO:Initializing Ridge Classifier
2023-04-11 20:22:38,117:INFO:Total runtime is 0.11248170137405396 minutes
2023-04-11 20:22:38,119:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:38,119:INFO:Initializing create_model()
2023-04-11 20:22:38,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:38,120:INFO:Checking exceptions
2023-04-11 20:22:38,120:INFO:Importing libraries
2023-04-11 20:22:38,120:INFO:Copying training dataset
2023-04-11 20:22:38,127:INFO:Defining folds
2023-04-11 20:22:38,127:INFO:Declaring metric variables
2023-04-11 20:22:38,130:INFO:Importing untrained model
2023-04-11 20:22:38,134:INFO:Ridge Classifier Imported successfully
2023-04-11 20:22:38,139:INFO:Starting cross validation
2023-04-11 20:22:38,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:38,824:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:38,827:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,831:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:38,833:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,834:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,836:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:38,836:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:38,839:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,839:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,839:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,842:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:38,844:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,845:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,848:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:38,851:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,878:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:38,881:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,888:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,891:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:38,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,903:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:38,906:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,914:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:38,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,945:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:38,948:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,954:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:38,957:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:38,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,011:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:39,012:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,015:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,017:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:39,018:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,141:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:39,142:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,147:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,148:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:39,149:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,171:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:39,172:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:39,178:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 20:22:39,195:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,198:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,199:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:39,201:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:39,207:INFO:Calculating mean and std
2023-04-11 20:22:39,207:INFO:Creating metrics dataframe
2023-04-11 20:22:39,284:INFO:Uploading results into container
2023-04-11 20:22:39,285:INFO:Uploading model into container now
2023-04-11 20:22:39,285:INFO:_master_model_container: 24
2023-04-11 20:22:39,285:INFO:_display_container: 6
2023-04-11 20:22:39,285:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7838, solver='auto',
                tol=0.0001)
2023-04-11 20:22:39,285:INFO:create_model() successfully completed......................................
2023-04-11 20:22:39,423:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:39,423:INFO:Creating metrics dataframe
2023-04-11 20:22:39,432:INFO:Initializing Random Forest Classifier
2023-04-11 20:22:39,432:INFO:Total runtime is 0.13440301815668743 minutes
2023-04-11 20:22:39,435:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:39,435:INFO:Initializing create_model()
2023-04-11 20:22:39,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:39,436:INFO:Checking exceptions
2023-04-11 20:22:39,436:INFO:Importing libraries
2023-04-11 20:22:39,436:INFO:Copying training dataset
2023-04-11 20:22:39,443:INFO:Defining folds
2023-04-11 20:22:39,443:INFO:Declaring metric variables
2023-04-11 20:22:39,448:INFO:Importing untrained model
2023-04-11 20:22:39,451:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:22:39,456:INFO:Starting cross validation
2023-04-11 20:22:39,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:40,353:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,359:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,365:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,371:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,377:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,379:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,381:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,385:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,386:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,390:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,402:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,408:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,413:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,414:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,419:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,425:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,441:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,483:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,488:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,493:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,494:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,503:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,504:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,508:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:40,664:INFO:Calculating mean and std
2023-04-11 20:22:40,664:INFO:Creating metrics dataframe
2023-04-11 20:22:40,755:INFO:Uploading results into container
2023-04-11 20:22:40,756:INFO:Uploading model into container now
2023-04-11 20:22:40,756:INFO:_master_model_container: 25
2023-04-11 20:22:40,756:INFO:_display_container: 6
2023-04-11 20:22:40,756:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:22:40,756:INFO:create_model() successfully completed......................................
2023-04-11 20:22:40,893:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:40,893:INFO:Creating metrics dataframe
2023-04-11 20:22:40,902:INFO:Initializing Quadratic Discriminant Analysis
2023-04-11 20:22:40,902:INFO:Total runtime is 0.15889945427576702 minutes
2023-04-11 20:22:40,905:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:40,906:INFO:Initializing create_model()
2023-04-11 20:22:40,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:40,906:INFO:Checking exceptions
2023-04-11 20:22:40,906:INFO:Importing libraries
2023-04-11 20:22:40,906:INFO:Copying training dataset
2023-04-11 20:22:40,915:INFO:Defining folds
2023-04-11 20:22:40,915:INFO:Declaring metric variables
2023-04-11 20:22:40,919:INFO:Importing untrained model
2023-04-11 20:22:40,925:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-11 20:22:40,932:INFO:Starting cross validation
2023-04-11 20:22:40,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:41,330:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,373:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,410:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,463:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,569:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,592:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,606:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 20:22:41,761:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,767:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,772:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,776:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,785:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,786:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,787:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,791:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,792:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,797:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,883:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,886:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,889:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,965:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,968:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,970:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:41,997:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,047:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,050:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,053:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,094:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,099:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,102:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,164:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,167:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,169:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:42,175:INFO:Calculating mean and std
2023-04-11 20:22:42,176:INFO:Creating metrics dataframe
2023-04-11 20:22:42,244:INFO:Uploading results into container
2023-04-11 20:22:42,245:INFO:Uploading model into container now
2023-04-11 20:22:42,245:INFO:_master_model_container: 26
2023-04-11 20:22:42,245:INFO:_display_container: 6
2023-04-11 20:22:42,246:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-11 20:22:42,246:INFO:create_model() successfully completed......................................
2023-04-11 20:22:42,385:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:42,385:INFO:Creating metrics dataframe
2023-04-11 20:22:42,394:INFO:Initializing Ada Boost Classifier
2023-04-11 20:22:42,394:INFO:Total runtime is 0.18376306692759198 minutes
2023-04-11 20:22:42,397:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:42,398:INFO:Initializing create_model()
2023-04-11 20:22:42,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:42,398:INFO:Checking exceptions
2023-04-11 20:22:42,398:INFO:Importing libraries
2023-04-11 20:22:42,398:INFO:Copying training dataset
2023-04-11 20:22:42,405:INFO:Defining folds
2023-04-11 20:22:42,405:INFO:Declaring metric variables
2023-04-11 20:22:42,408:INFO:Importing untrained model
2023-04-11 20:22:42,411:INFO:Ada Boost Classifier Imported successfully
2023-04-11 20:22:42,417:INFO:Starting cross validation
2023-04-11 20:22:42,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:43,116:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,120:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,123:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,261:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,271:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,278:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,284:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,293:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,302:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,304:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,307:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,312:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,399:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,402:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,573:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,574:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,576:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,577:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,580:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,643:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,647:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,650:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,651:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,654:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,656:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:43,680:INFO:Calculating mean and std
2023-04-11 20:22:43,682:INFO:Creating metrics dataframe
2023-04-11 20:22:43,752:INFO:Uploading results into container
2023-04-11 20:22:43,752:INFO:Uploading model into container now
2023-04-11 20:22:43,753:INFO:_master_model_container: 27
2023-04-11 20:22:43,753:INFO:_display_container: 6
2023-04-11 20:22:43,753:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7838)
2023-04-11 20:22:43,753:INFO:create_model() successfully completed......................................
2023-04-11 20:22:43,899:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:43,899:INFO:Creating metrics dataframe
2023-04-11 20:22:43,908:INFO:Initializing Gradient Boosting Classifier
2023-04-11 20:22:43,908:INFO:Total runtime is 0.2090008815129598 minutes
2023-04-11 20:22:43,910:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:43,911:INFO:Initializing create_model()
2023-04-11 20:22:43,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:43,911:INFO:Checking exceptions
2023-04-11 20:22:43,911:INFO:Importing libraries
2023-04-11 20:22:43,911:INFO:Copying training dataset
2023-04-11 20:22:43,924:INFO:Defining folds
2023-04-11 20:22:43,924:INFO:Declaring metric variables
2023-04-11 20:22:43,928:INFO:Importing untrained model
2023-04-11 20:22:43,933:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 20:22:43,939:INFO:Starting cross validation
2023-04-11 20:22:43,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:45,276:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,281:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,285:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,306:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,312:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,318:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,519:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,522:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,649:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,654:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,659:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,672:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,678:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,684:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,696:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,696:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,700:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,701:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,702:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,703:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,706:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,706:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,708:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,739:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,744:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:45,844:INFO:Calculating mean and std
2023-04-11 20:22:45,845:INFO:Creating metrics dataframe
2023-04-11 20:22:45,915:INFO:Uploading results into container
2023-04-11 20:22:45,916:INFO:Uploading model into container now
2023-04-11 20:22:45,916:INFO:_master_model_container: 28
2023-04-11 20:22:45,916:INFO:_display_container: 6
2023-04-11 20:22:45,917:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7838, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 20:22:45,917:INFO:create_model() successfully completed......................................
2023-04-11 20:22:46,057:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:46,057:INFO:Creating metrics dataframe
2023-04-11 20:22:46,066:INFO:Initializing Linear Discriminant Analysis
2023-04-11 20:22:46,066:INFO:Total runtime is 0.2449702302614848 minutes
2023-04-11 20:22:46,069:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:46,069:INFO:Initializing create_model()
2023-04-11 20:22:46,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:46,069:INFO:Checking exceptions
2023-04-11 20:22:46,069:INFO:Importing libraries
2023-04-11 20:22:46,069:INFO:Copying training dataset
2023-04-11 20:22:46,075:INFO:Defining folds
2023-04-11 20:22:46,075:INFO:Declaring metric variables
2023-04-11 20:22:46,077:INFO:Importing untrained model
2023-04-11 20:22:46,081:INFO:Linear Discriminant Analysis Imported successfully
2023-04-11 20:22:46,087:INFO:Starting cross validation
2023-04-11 20:22:46,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:46,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,673:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,801:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,806:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,810:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,826:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,831:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,837:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,852:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,862:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,917:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:46,922:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,024:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,026:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,029:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,104:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,106:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,109:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,148:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,151:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,157:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,163:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,163:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,169:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:47,206:INFO:Calculating mean and std
2023-04-11 20:22:47,207:INFO:Creating metrics dataframe
2023-04-11 20:22:47,274:INFO:Uploading results into container
2023-04-11 20:22:47,275:INFO:Uploading model into container now
2023-04-11 20:22:47,275:INFO:_master_model_container: 29
2023-04-11 20:22:47,275:INFO:_display_container: 6
2023-04-11 20:22:47,276:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-11 20:22:47,276:INFO:create_model() successfully completed......................................
2023-04-11 20:22:47,412:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:47,412:INFO:Creating metrics dataframe
2023-04-11 20:22:47,422:INFO:Initializing Extra Trees Classifier
2023-04-11 20:22:47,422:INFO:Total runtime is 0.2675676425298055 minutes
2023-04-11 20:22:47,424:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:47,425:INFO:Initializing create_model()
2023-04-11 20:22:47,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:47,425:INFO:Checking exceptions
2023-04-11 20:22:47,425:INFO:Importing libraries
2023-04-11 20:22:47,425:INFO:Copying training dataset
2023-04-11 20:22:47,431:INFO:Defining folds
2023-04-11 20:22:47,432:INFO:Declaring metric variables
2023-04-11 20:22:47,435:INFO:Importing untrained model
2023-04-11 20:22:47,438:INFO:Extra Trees Classifier Imported successfully
2023-04-11 20:22:47,443:INFO:Starting cross validation
2023-04-11 20:22:47,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:48,209:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,214:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,220:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,292:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,297:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,303:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,386:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,391:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,396:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,449:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,461:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,479:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,484:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,487:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,530:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,536:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,537:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,544:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,818:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,828:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,878:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,882:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,882:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,885:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,885:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,887:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:48,916:INFO:Calculating mean and std
2023-04-11 20:22:48,918:INFO:Creating metrics dataframe
2023-04-11 20:22:48,986:INFO:Uploading results into container
2023-04-11 20:22:48,987:INFO:Uploading model into container now
2023-04-11 20:22:48,987:INFO:_master_model_container: 30
2023-04-11 20:22:48,987:INFO:_display_container: 6
2023-04-11 20:22:48,987:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:22:48,987:INFO:create_model() successfully completed......................................
2023-04-11 20:22:49,127:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:49,127:INFO:Creating metrics dataframe
2023-04-11 20:22:49,139:INFO:Initializing Extreme Gradient Boosting
2023-04-11 20:22:49,139:INFO:Total runtime is 0.2961800575256348 minutes
2023-04-11 20:22:49,141:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:49,142:INFO:Initializing create_model()
2023-04-11 20:22:49,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:49,142:INFO:Checking exceptions
2023-04-11 20:22:49,142:INFO:Importing libraries
2023-04-11 20:22:49,142:INFO:Copying training dataset
2023-04-11 20:22:49,154:INFO:Defining folds
2023-04-11 20:22:49,155:INFO:Declaring metric variables
2023-04-11 20:22:49,159:INFO:Importing untrained model
2023-04-11 20:22:49,163:INFO:Extreme Gradient Boosting Imported successfully
2023-04-11 20:22:49,169:INFO:Starting cross validation
2023-04-11 20:22:49,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:49,744:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,748:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,789:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,792:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,795:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,937:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,942:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,945:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,946:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,948:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,950:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,953:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,955:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,958:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,964:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,967:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:49,971:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,012:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,017:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,021:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,028:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,033:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,035:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,038:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,039:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,041:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,255:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:50,261:INFO:Calculating mean and std
2023-04-11 20:22:50,262:INFO:Creating metrics dataframe
2023-04-11 20:22:50,335:INFO:Uploading results into container
2023-04-11 20:22:50,336:INFO:Uploading model into container now
2023-04-11 20:22:50,336:INFO:_master_model_container: 31
2023-04-11 20:22:50,336:INFO:_display_container: 6
2023-04-11 20:22:50,337:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-11 20:22:50,337:INFO:create_model() successfully completed......................................
2023-04-11 20:22:50,475:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:50,475:INFO:Creating metrics dataframe
2023-04-11 20:22:50,484:INFO:Initializing Light Gradient Boosting Machine
2023-04-11 20:22:50,485:INFO:Total runtime is 0.3186114112536113 minutes
2023-04-11 20:22:50,487:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:50,487:INFO:Initializing create_model()
2023-04-11 20:22:50,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:50,487:INFO:Checking exceptions
2023-04-11 20:22:50,487:INFO:Importing libraries
2023-04-11 20:22:50,488:INFO:Copying training dataset
2023-04-11 20:22:50,494:INFO:Defining folds
2023-04-11 20:22:50,494:INFO:Declaring metric variables
2023-04-11 20:22:50,497:INFO:Importing untrained model
2023-04-11 20:22:50,501:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 20:22:50,506:INFO:Starting cross validation
2023-04-11 20:22:50,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:51,164:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,168:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,172:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,179:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,183:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,256:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,261:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,263:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,265:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,268:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,271:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,276:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,281:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,321:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,324:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,324:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,327:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,330:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,334:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,346:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,351:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,354:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,355:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,357:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,360:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,382:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,385:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,388:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:51,452:INFO:Calculating mean and std
2023-04-11 20:22:51,453:INFO:Creating metrics dataframe
2023-04-11 20:22:51,524:INFO:Uploading results into container
2023-04-11 20:22:51,525:INFO:Uploading model into container now
2023-04-11 20:22:51,525:INFO:_master_model_container: 32
2023-04-11 20:22:51,525:INFO:_display_container: 6
2023-04-11 20:22:51,525:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7838, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 20:22:51,525:INFO:create_model() successfully completed......................................
2023-04-11 20:22:51,662:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:51,662:INFO:Creating metrics dataframe
2023-04-11 20:22:51,680:INFO:Initializing Dummy Classifier
2023-04-11 20:22:51,680:INFO:Total runtime is 0.33852973779042567 minutes
2023-04-11 20:22:51,683:INFO:SubProcess create_model() called ==================================
2023-04-11 20:22:51,683:INFO:Initializing create_model()
2023-04-11 20:22:51,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff4ba11a710>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:51,683:INFO:Checking exceptions
2023-04-11 20:22:51,683:INFO:Importing libraries
2023-04-11 20:22:51,683:INFO:Copying training dataset
2023-04-11 20:22:51,690:INFO:Defining folds
2023-04-11 20:22:51,690:INFO:Declaring metric variables
2023-04-11 20:22:51,692:INFO:Importing untrained model
2023-04-11 20:22:51,696:INFO:Dummy Classifier Imported successfully
2023-04-11 20:22:51,702:INFO:Starting cross validation
2023-04-11 20:22:51,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:22:52,191:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,196:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,198:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,299:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,304:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,307:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,309:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,332:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,335:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,337:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,339:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,340:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,341:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,345:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,348:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,352:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,354:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,390:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,395:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,396:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,397:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,400:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,401:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,406:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,412:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,417:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,420:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,422:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,434:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,440:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,445:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,450:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 20:22:52,453:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:22:52,535:INFO:Calculating mean and std
2023-04-11 20:22:52,536:INFO:Creating metrics dataframe
2023-04-11 20:22:52,606:INFO:Uploading results into container
2023-04-11 20:22:52,607:INFO:Uploading model into container now
2023-04-11 20:22:52,607:INFO:_master_model_container: 33
2023-04-11 20:22:52,607:INFO:_display_container: 6
2023-04-11 20:22:52,607:INFO:DummyClassifier(constant=None, random_state=7838, strategy='prior')
2023-04-11 20:22:52,607:INFO:create_model() successfully completed......................................
2023-04-11 20:22:52,745:INFO:SubProcess create_model() end ==================================
2023-04-11 20:22:52,746:INFO:Creating metrics dataframe
2023-04-11 20:22:52,764:INFO:Initializing create_model()
2023-04-11 20:22:52,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:22:52,764:INFO:Checking exceptions
2023-04-11 20:22:52,767:INFO:Importing libraries
2023-04-11 20:22:52,767:INFO:Copying training dataset
2023-04-11 20:22:52,772:INFO:Defining folds
2023-04-11 20:22:52,772:INFO:Declaring metric variables
2023-04-11 20:22:52,772:INFO:Importing untrained model
2023-04-11 20:22:52,772:INFO:Declaring custom model
2023-04-11 20:22:52,773:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:22:52,775:INFO:Cross validation set to False
2023-04-11 20:22:52,775:INFO:Fitting Model
2023-04-11 20:22:53,186:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:22:53,186:INFO:create_model() successfully completed......................................
2023-04-11 20:22:53,351:INFO:_master_model_container: 33
2023-04-11 20:22:53,351:INFO:_display_container: 6
2023-04-11 20:22:53,352:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:22:53,352:INFO:compare_models() successfully completed......................................
2023-04-11 20:41:30,781:INFO:Initializing create_model()
2023-04-11 20:41:30,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:41:30,782:INFO:Checking exceptions
2023-04-11 20:41:30,800:INFO:Importing libraries
2023-04-11 20:41:30,801:INFO:Copying training dataset
2023-04-11 20:41:30,811:INFO:Defining folds
2023-04-11 20:41:30,811:INFO:Declaring metric variables
2023-04-11 20:41:30,814:INFO:Importing untrained model
2023-04-11 20:41:30,816:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:41:30,822:INFO:Starting cross validation
2023-04-11 20:41:30,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:41:33,994:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:33,997:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,001:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,062:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,075:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,262:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,270:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,334:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,349:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,385:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,391:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,397:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,436:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,489:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,495:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,495:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,506:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,516:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,519:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,519:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,526:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:41:34,600:INFO:Calculating mean and std
2023-04-11 20:41:34,602:INFO:Creating metrics dataframe
2023-04-11 20:41:34,612:INFO:Finalizing model
2023-04-11 20:41:35,097:INFO:Uploading results into container
2023-04-11 20:41:35,098:INFO:Uploading model into container now
2023-04-11 20:41:35,112:INFO:_master_model_container: 34
2023-04-11 20:41:35,112:INFO:_display_container: 7
2023-04-11 20:41:35,113:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:41:35,113:INFO:create_model() successfully completed......................................
2023-04-11 20:43:10,973:INFO:Initializing interpret_model()
2023-04-11 20:43:10,974:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>)
2023-04-11 20:43:10,974:INFO:Checking exceptions
2023-04-11 20:43:10,975:INFO:Soft dependency imported: shap: 0.41.0
2023-04-11 20:43:11,025:INFO:plot type: summary
2023-04-11 20:43:11,025:INFO:Creating TreeExplainer
2023-04-11 20:43:11,031:INFO:Compiling shap values
2023-04-11 20:43:41,907:INFO:Visual Rendered Successfully
2023-04-11 20:43:41,907:INFO:interpret_model() successfully completed......................................
2023-04-11 20:48:32,782:INFO:Initializing save_model()
2023-04-11 20:48:32,782:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7838,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-11 20:48:32,782:INFO:Adding model into prep_pipe
2023-04-11 20:48:32,862:INFO:best_model.pkl saved in current working directory
2023-04-11 20:48:32,980:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=7838,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-04-11 20:48:32,980:INFO:save_model() successfully completed......................................
2023-04-11 20:52:04,071:INFO:Initializing create_model()
2023-04-11 20:52:04,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff628667700>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 20:52:04,080:INFO:Checking exceptions
2023-04-11 20:52:04,110:INFO:Importing libraries
2023-04-11 20:52:04,111:INFO:Copying training dataset
2023-04-11 20:52:04,127:INFO:Defining folds
2023-04-11 20:52:04,127:INFO:Declaring metric variables
2023-04-11 20:52:04,134:INFO:Importing untrained model
2023-04-11 20:52:04,142:INFO:Random Forest Classifier Imported successfully
2023-04-11 20:52:04,153:INFO:Starting cross validation
2023-04-11 20:52:04,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 20:52:07,952:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:07,958:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:07,965:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,206:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,218:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,397:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,405:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,413:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,510:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,520:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,529:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,649:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,650:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,653:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,706:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,716:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,751:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,759:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,767:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,771:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,779:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,787:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,815:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,832:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 20:52:08,912:INFO:Calculating mean and std
2023-04-11 20:52:08,915:INFO:Creating metrics dataframe
2023-04-11 20:52:08,930:INFO:Finalizing model
2023-04-11 20:52:09,544:INFO:Uploading results into container
2023-04-11 20:52:09,546:INFO:Uploading model into container now
2023-04-11 20:52:09,556:INFO:_master_model_container: 35
2023-04-11 20:52:09,556:INFO:_display_container: 8
2023-04-11 20:52:09,557:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False)
2023-04-11 20:52:09,557:INFO:create_model() successfully completed......................................
2023-04-11 20:52:09,918:INFO:Initializing save_model()
2023-04-11 20:52:09,918:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7838, verbose=0, warm_start=False), model_name=rf_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7838,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-11 20:52:09,918:INFO:Adding model into prep_pipe
2023-04-11 20:52:10,006:INFO:rf_model.pkl saved in current working directory
2023-04-11 20:52:10,128:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=7838,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-04-11 20:52:10,128:INFO:save_model() successfully completed......................................
2023-04-11 21:31:11,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:31:11,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:31:11,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:31:11,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:31:12,168:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-11 21:31:12,335:INFO:PyCaret ClassificationExperiment
2023-04-11 21:31:12,335:INFO:Logging name: clf-default-name
2023-04-11 21:31:12,336:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 21:31:12,336:INFO:version 3.0.0
2023-04-11 21:31:12,336:INFO:Initializing setup()
2023-04-11 21:31:12,336:INFO:self.USI: 8a75
2023-04-11 21:31:12,336:INFO:self._variable_keys: {'X_train', 'fold_generator', '_available_plots', 'target_param', 'X_test', '_ml_usecase', 'gpu_n_jobs_param', 'logging_param', 'n_jobs_param', 'X', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'memory', 'y', 'idx', 'html_param', 'pipeline', 'y_train', 'y_test', 'fold_shuffle_param', 'seed', 'log_plots_param', 'gpu_param', 'exp_id', 'fix_imbalance', 'data', 'USI'}
2023-04-11 21:31:12,336:INFO:Checking environment
2023-04-11 21:31:12,336:INFO:python_version: 3.10.9
2023-04-11 21:31:12,336:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 21:31:12,336:INFO:machine: x86_64
2023-04-11 21:31:12,336:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:31:12,337:INFO:Memory: svmem(total=16570302464, available=9928888320, percent=40.1, used=5012291584, free=3294760960, active=5818036224, inactive=5759692800, buffers=1063124992, cached=7200124928, shared=1277353984, slab=686669824)
2023-04-11 21:31:12,338:INFO:Physical Core: 6
2023-04-11 21:31:12,338:INFO:Logical Core: 12
2023-04-11 21:31:12,338:INFO:Checking libraries
2023-04-11 21:31:12,338:INFO:System:
2023-04-11 21:31:12,338:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 21:31:12,338:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 21:31:12,338:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:31:12,339:INFO:PyCaret required dependencies:
2023-04-11 21:31:12,339:INFO:                 pip: 22.3.1
2023-04-11 21:31:12,339:INFO:          setuptools: 65.6.3
2023-04-11 21:31:12,339:INFO:             pycaret: 3.0.0
2023-04-11 21:31:12,339:INFO:             IPython: 8.12.0
2023-04-11 21:31:12,339:INFO:          ipywidgets: 8.0.4
2023-04-11 21:31:12,339:INFO:                tqdm: 4.64.1
2023-04-11 21:31:12,339:INFO:               numpy: 1.23.5
2023-04-11 21:31:12,339:INFO:              pandas: 1.5.3
2023-04-11 21:31:12,339:INFO:              jinja2: 3.1.2
2023-04-11 21:31:12,339:INFO:               scipy: 1.10.1
2023-04-11 21:31:12,339:INFO:              joblib: 1.2.0
2023-04-11 21:31:12,339:INFO:             sklearn: 1.2.2
2023-04-11 21:31:12,339:INFO:                pyod: 1.0.9
2023-04-11 21:31:12,339:INFO:            imblearn: 0.10.1
2023-04-11 21:31:12,339:INFO:   category_encoders: 2.6.0
2023-04-11 21:31:12,339:INFO:            lightgbm: 3.3.5
2023-04-11 21:31:12,339:INFO:               numba: 0.56.4
2023-04-11 21:31:12,340:INFO:            requests: 2.28.1
2023-04-11 21:31:12,340:INFO:          matplotlib: 3.7.1
2023-04-11 21:31:12,340:INFO:          scikitplot: 0.3.7
2023-04-11 21:31:12,340:INFO:         yellowbrick: 1.5
2023-04-11 21:31:12,340:INFO:              plotly: 5.14.1
2023-04-11 21:31:12,340:INFO:             kaleido: 0.2.1
2023-04-11 21:31:12,340:INFO:         statsmodels: 0.13.5
2023-04-11 21:31:12,340:INFO:              sktime: 0.17.1
2023-04-11 21:31:12,340:INFO:               tbats: 1.1.2
2023-04-11 21:31:12,340:INFO:            pmdarima: 2.0.3
2023-04-11 21:31:12,340:INFO:              psutil: 5.9.4
2023-04-11 21:31:12,340:INFO:PyCaret optional dependencies:
2023-04-11 21:31:12,360:INFO:                shap: 0.41.0
2023-04-11 21:31:12,360:INFO:           interpret: Not installed
2023-04-11 21:31:12,360:INFO:                umap: Not installed
2023-04-11 21:31:12,360:INFO:    pandas_profiling: Not installed
2023-04-11 21:31:12,360:INFO:  explainerdashboard: Not installed
2023-04-11 21:31:12,360:INFO:             autoviz: Not installed
2023-04-11 21:31:12,360:INFO:           fairlearn: Not installed
2023-04-11 21:31:12,360:INFO:             xgboost: 1.7.5
2023-04-11 21:31:12,361:INFO:            catboost: Not installed
2023-04-11 21:31:12,361:INFO:              kmodes: Not installed
2023-04-11 21:31:12,361:INFO:             mlxtend: Not installed
2023-04-11 21:31:12,361:INFO:       statsforecast: Not installed
2023-04-11 21:31:12,361:INFO:        tune_sklearn: Not installed
2023-04-11 21:31:12,361:INFO:                 ray: Not installed
2023-04-11 21:31:12,361:INFO:            hyperopt: Not installed
2023-04-11 21:31:12,361:INFO:              optuna: Not installed
2023-04-11 21:31:12,361:INFO:               skopt: Not installed
2023-04-11 21:31:12,361:INFO:              mlflow: Not installed
2023-04-11 21:31:12,361:INFO:              gradio: Not installed
2023-04-11 21:31:12,361:INFO:             fastapi: Not installed
2023-04-11 21:31:12,361:INFO:             uvicorn: Not installed
2023-04-11 21:31:12,361:INFO:              m2cgen: Not installed
2023-04-11 21:31:12,361:INFO:           evidently: Not installed
2023-04-11 21:31:12,361:INFO:               fugue: Not installed
2023-04-11 21:31:12,361:INFO:           streamlit: 1.21.0
2023-04-11 21:31:12,361:INFO:             prophet: Not installed
2023-04-11 21:31:12,361:INFO:None
2023-04-11 21:31:12,361:INFO:Set up data.
2023-04-11 21:31:12,399:INFO:Set up train/test split.
2023-04-11 21:31:12,418:INFO:Set up index.
2023-04-11 21:31:12,418:INFO:Set up folding strategy.
2023-04-11 21:31:12,418:INFO:Assigning column types.
2023-04-11 21:31:12,423:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-11 21:31:12,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:31:12,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:31:12,515:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:12,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:12,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:31:12,598:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:31:12,623:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:12,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:12,627:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-11 21:31:12,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:31:12,702:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:12,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:12,749:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:31:12,772:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:12,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:12,777:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-11 21:31:12,840:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:12,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:12,914:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:12,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:12,921:INFO:Preparing preprocessing pipeline...
2023-04-11 21:31:12,922:INFO:Set up label encoding.
2023-04-11 21:31:12,922:INFO:Set up simple imputation.
2023-04-11 21:31:12,934:INFO:Set up encoding of ordinal features.
2023-04-11 21:31:12,961:INFO:Set up encoding of categorical features.
2023-04-11 21:31:12,963:INFO:Set up column name cleaning.
2023-04-11 21:31:13,702:INFO:Finished creating preprocessing pipeline.
2023-04-11 21:31:13,820:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=5598,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-11 21:31:13,820:INFO:Creating final display dataframe.
2023-04-11 21:31:14,782:INFO:Setup _display_container:                     Description                             Value
0                    Session id                              5598
1                        Target                   Customer Status
2                   Target type                        Multiclass
3                Target mapping  Churned: 0, Joined: 1, Stayed: 2
4           Original data shape                        (7043, 38)
5        Transformed data shape                        (7043, 72)
6   Transformed train set shape                        (4930, 72)
7    Transformed test set shape                        (2113, 72)
8              Ordinal features                                14
9              Numeric features                                15
10         Categorical features                                22
11     Rows with missing values                             77.5%
12                   Preprocess                              True
13              Imputation type                            simple
14           Numeric imputation                              mean
15       Categorical imputation                              mode
16     Maximum one-hot encoding                                25
17              Encoding method                              None
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              8a75
2023-04-11 21:31:14,863:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:14,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:14,935:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:31:14,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:31:14,938:INFO:setup() successfully completed in 2.64s...............
2023-04-11 21:31:14,938:INFO:Initializing compare_models()
2023-04-11 21:31:14,938:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 21:31:14,938:INFO:Checking exceptions
2023-04-11 21:31:14,943:INFO:Preparing display monitor
2023-04-11 21:31:14,977:INFO:Initializing Logistic Regression
2023-04-11 21:31:14,978:INFO:Total runtime is 7.025400797526041e-06 minutes
2023-04-11 21:31:14,982:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:14,983:INFO:Initializing create_model()
2023-04-11 21:31:14,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:14,983:INFO:Checking exceptions
2023-04-11 21:31:14,983:INFO:Importing libraries
2023-04-11 21:31:14,983:INFO:Copying training dataset
2023-04-11 21:31:14,992:INFO:Defining folds
2023-04-11 21:31:14,993:INFO:Declaring metric variables
2023-04-11 21:31:14,997:INFO:Importing untrained model
2023-04-11 21:31:15,002:INFO:Logistic Regression Imported successfully
2023-04-11 21:31:15,013:INFO:Starting cross validation
2023-04-11 21:31:15,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:21,926:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:21,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:21,943:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:23,328:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:23,364:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:23,527:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:23,942:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:24,107:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:24,140:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,145:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,151:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,183:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:24,193:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,201:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,212:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:24,312:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:24,397:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:31:24,535:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,705:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:24,709:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,014:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,019:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,023:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,032:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,037:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,037:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,041:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,041:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,046:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,087:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,092:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,096:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,303:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,306:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,309:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:25,319:INFO:Calculating mean and std
2023-04-11 21:31:25,321:INFO:Creating metrics dataframe
2023-04-11 21:31:25,434:INFO:Uploading results into container
2023-04-11 21:31:25,435:INFO:Uploading model into container now
2023-04-11 21:31:25,436:INFO:_master_model_container: 1
2023-04-11 21:31:25,436:INFO:_display_container: 2
2023-04-11 21:31:25,437:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 21:31:25,437:INFO:create_model() successfully completed......................................
2023-04-11 21:31:25,543:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:25,543:INFO:Creating metrics dataframe
2023-04-11 21:31:25,554:INFO:Initializing K Neighbors Classifier
2023-04-11 21:31:25,555:INFO:Total runtime is 0.17629024187723796 minutes
2023-04-11 21:31:25,559:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:25,559:INFO:Initializing create_model()
2023-04-11 21:31:25,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:25,559:INFO:Checking exceptions
2023-04-11 21:31:25,560:INFO:Importing libraries
2023-04-11 21:31:25,560:INFO:Copying training dataset
2023-04-11 21:31:25,571:INFO:Defining folds
2023-04-11 21:31:25,572:INFO:Declaring metric variables
2023-04-11 21:31:25,576:INFO:Importing untrained model
2023-04-11 21:31:25,582:INFO:K Neighbors Classifier Imported successfully
2023-04-11 21:31:25,591:INFO:Starting cross validation
2023-04-11 21:31:25,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:27,167:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,184:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,192:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,200:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,208:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,675:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,682:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,770:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,777:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,785:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,822:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,829:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,838:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,852:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,861:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,938:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,942:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:27,996:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,004:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,705:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,709:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,712:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,868:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,871:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,874:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:28,881:INFO:Calculating mean and std
2023-04-11 21:31:28,882:INFO:Creating metrics dataframe
2023-04-11 21:31:28,998:INFO:Uploading results into container
2023-04-11 21:31:28,999:INFO:Uploading model into container now
2023-04-11 21:31:29,000:INFO:_master_model_container: 2
2023-04-11 21:31:29,000:INFO:_display_container: 2
2023-04-11 21:31:29,001:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 21:31:29,001:INFO:create_model() successfully completed......................................
2023-04-11 21:31:29,077:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:29,077:INFO:Creating metrics dataframe
2023-04-11 21:31:29,092:INFO:Initializing Naive Bayes
2023-04-11 21:31:29,092:INFO:Total runtime is 0.23525122006734211 minutes
2023-04-11 21:31:29,098:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:29,099:INFO:Initializing create_model()
2023-04-11 21:31:29,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:29,099:INFO:Checking exceptions
2023-04-11 21:31:29,100:INFO:Importing libraries
2023-04-11 21:31:29,100:INFO:Copying training dataset
2023-04-11 21:31:29,110:INFO:Defining folds
2023-04-11 21:31:29,111:INFO:Declaring metric variables
2023-04-11 21:31:29,115:INFO:Importing untrained model
2023-04-11 21:31:29,120:INFO:Naive Bayes Imported successfully
2023-04-11 21:31:29,127:INFO:Starting cross validation
2023-04-11 21:31:29,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:30,480:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,488:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,493:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,585:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,742:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,747:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,813:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,821:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,828:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,882:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,889:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,895:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,940:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,947:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,949:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,955:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,955:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:30,959:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,058:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,062:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,127:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,131:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,135:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,155:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,159:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,162:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:31,180:INFO:Calculating mean and std
2023-04-11 21:31:31,182:INFO:Creating metrics dataframe
2023-04-11 21:31:31,296:INFO:Uploading results into container
2023-04-11 21:31:31,297:INFO:Uploading model into container now
2023-04-11 21:31:31,298:INFO:_master_model_container: 3
2023-04-11 21:31:31,298:INFO:_display_container: 2
2023-04-11 21:31:31,298:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 21:31:31,299:INFO:create_model() successfully completed......................................
2023-04-11 21:31:31,376:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:31,376:INFO:Creating metrics dataframe
2023-04-11 21:31:31,388:INFO:Initializing Decision Tree Classifier
2023-04-11 21:31:31,389:INFO:Total runtime is 0.27352403799692787 minutes
2023-04-11 21:31:31,393:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:31,393:INFO:Initializing create_model()
2023-04-11 21:31:31,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:31,393:INFO:Checking exceptions
2023-04-11 21:31:31,393:INFO:Importing libraries
2023-04-11 21:31:31,393:INFO:Copying training dataset
2023-04-11 21:31:31,404:INFO:Defining folds
2023-04-11 21:31:31,405:INFO:Declaring metric variables
2023-04-11 21:31:31,409:INFO:Importing untrained model
2023-04-11 21:31:31,416:INFO:Decision Tree Classifier Imported successfully
2023-04-11 21:31:31,424:INFO:Starting cross validation
2023-04-11 21:31:31,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:32,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:32,828:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:32,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:32,984:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:32,989:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:32,994:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,030:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,036:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,041:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,070:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,084:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,086:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,093:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,193:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,198:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,212:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,221:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,227:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,248:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,265:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,271:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,275:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,277:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,281:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:33,390:INFO:Calculating mean and std
2023-04-11 21:31:33,391:INFO:Creating metrics dataframe
2023-04-11 21:31:33,515:INFO:Uploading results into container
2023-04-11 21:31:33,517:INFO:Uploading model into container now
2023-04-11 21:31:33,518:INFO:_master_model_container: 4
2023-04-11 21:31:33,518:INFO:_display_container: 2
2023-04-11 21:31:33,518:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5598, splitter='best')
2023-04-11 21:31:33,518:INFO:create_model() successfully completed......................................
2023-04-11 21:31:33,592:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:33,592:INFO:Creating metrics dataframe
2023-04-11 21:31:33,609:INFO:Initializing SVM - Linear Kernel
2023-04-11 21:31:33,610:INFO:Total runtime is 0.3105403025945027 minutes
2023-04-11 21:31:33,613:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:33,614:INFO:Initializing create_model()
2023-04-11 21:31:33,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:33,614:INFO:Checking exceptions
2023-04-11 21:31:33,614:INFO:Importing libraries
2023-04-11 21:31:33,614:INFO:Copying training dataset
2023-04-11 21:31:33,625:INFO:Defining folds
2023-04-11 21:31:33,625:INFO:Declaring metric variables
2023-04-11 21:31:33,628:INFO:Importing untrained model
2023-04-11 21:31:33,632:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 21:31:33,643:INFO:Starting cross validation
2023-04-11 21:31:33,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:35,709:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:35,713:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,728:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:35,730:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,731:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,737:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:35,744:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,819:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:35,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,830:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:35,839:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,885:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:35,887:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,891:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:35,896:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,902:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:35,906:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,914:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,919:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:35,923:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,978:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:35,981:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,989:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:35,995:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,110:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:36,113:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,119:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,121:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:36,124:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,125:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:36,127:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,130:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,133:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:36,134:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:36,136:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,137:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,141:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,143:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:36,145:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,152:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:31:36,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,158:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,163:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:36,251:INFO:Calculating mean and std
2023-04-11 21:31:36,253:INFO:Creating metrics dataframe
2023-04-11 21:31:36,369:INFO:Uploading results into container
2023-04-11 21:31:36,371:INFO:Uploading model into container now
2023-04-11 21:31:36,371:INFO:_master_model_container: 5
2023-04-11 21:31:36,371:INFO:_display_container: 2
2023-04-11 21:31:36,372:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5598, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-11 21:31:36,372:INFO:create_model() successfully completed......................................
2023-04-11 21:31:36,444:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:36,445:INFO:Creating metrics dataframe
2023-04-11 21:31:36,461:INFO:Initializing Ridge Classifier
2023-04-11 21:31:36,461:INFO:Total runtime is 0.3580673774083455 minutes
2023-04-11 21:31:36,465:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:36,465:INFO:Initializing create_model()
2023-04-11 21:31:36,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:36,466:INFO:Checking exceptions
2023-04-11 21:31:36,466:INFO:Importing libraries
2023-04-11 21:31:36,466:INFO:Copying training dataset
2023-04-11 21:31:36,477:INFO:Defining folds
2023-04-11 21:31:36,478:INFO:Declaring metric variables
2023-04-11 21:31:36,482:INFO:Importing untrained model
2023-04-11 21:31:36,486:INFO:Ridge Classifier Imported successfully
2023-04-11 21:31:36,494:INFO:Starting cross validation
2023-04-11 21:31:36,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:37,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:37,897:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:37,902:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:37,906:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:37,908:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:37,956:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:37,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:37,968:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:37,975:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:37,979:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,000:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,008:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,011:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,013:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,115:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,118:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,122:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,124:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,125:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,127:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,127:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,134:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,139:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,142:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,178:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,189:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,192:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,196:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,200:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,204:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,206:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,210:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,210:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,214:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,214:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,223:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,223:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,226:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,227:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,231:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,278:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:31:38,279:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,283:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,285:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:31:38,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:38,430:INFO:Calculating mean and std
2023-04-11 21:31:38,431:INFO:Creating metrics dataframe
2023-04-11 21:31:38,541:INFO:Uploading results into container
2023-04-11 21:31:38,542:INFO:Uploading model into container now
2023-04-11 21:31:38,542:INFO:_master_model_container: 6
2023-04-11 21:31:38,542:INFO:_display_container: 2
2023-04-11 21:31:38,543:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5598, solver='auto',
                tol=0.0001)
2023-04-11 21:31:38,543:INFO:create_model() successfully completed......................................
2023-04-11 21:31:38,619:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:38,620:INFO:Creating metrics dataframe
2023-04-11 21:31:38,631:INFO:Initializing Random Forest Classifier
2023-04-11 21:31:38,631:INFO:Total runtime is 0.39423098961512243 minutes
2023-04-11 21:31:38,635:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:38,635:INFO:Initializing create_model()
2023-04-11 21:31:38,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:38,635:INFO:Checking exceptions
2023-04-11 21:31:38,636:INFO:Importing libraries
2023-04-11 21:31:38,636:INFO:Copying training dataset
2023-04-11 21:31:38,645:INFO:Defining folds
2023-04-11 21:31:38,646:INFO:Declaring metric variables
2023-04-11 21:31:38,649:INFO:Importing untrained model
2023-04-11 21:31:38,655:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:31:38,663:INFO:Starting cross validation
2023-04-11 21:31:38,666:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:41,842:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:41,927:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:41,935:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:41,937:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:41,944:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:41,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:41,963:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:41,973:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:41,980:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,029:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:42,036:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:42,052:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,060:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,121:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:42,161:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,168:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,181:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:42,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,240:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,249:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,290:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,294:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,301:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,340:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,351:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,354:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,360:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,430:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,432:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,435:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,438:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,440:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,442:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:42,595:INFO:Calculating mean and std
2023-04-11 21:31:42,596:INFO:Creating metrics dataframe
2023-04-11 21:31:42,718:INFO:Uploading results into container
2023-04-11 21:31:42,720:INFO:Uploading model into container now
2023-04-11 21:31:42,721:INFO:_master_model_container: 7
2023-04-11 21:31:42,721:INFO:_display_container: 2
2023-04-11 21:31:42,722:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:31:42,722:INFO:create_model() successfully completed......................................
2023-04-11 21:31:42,797:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:42,798:INFO:Creating metrics dataframe
2023-04-11 21:31:42,811:INFO:Initializing Quadratic Discriminant Analysis
2023-04-11 21:31:42,812:INFO:Total runtime is 0.4639073292414347 minutes
2023-04-11 21:31:42,815:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:42,815:INFO:Initializing create_model()
2023-04-11 21:31:42,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:42,815:INFO:Checking exceptions
2023-04-11 21:31:42,816:INFO:Importing libraries
2023-04-11 21:31:42,816:INFO:Copying training dataset
2023-04-11 21:31:42,826:INFO:Defining folds
2023-04-11 21:31:42,826:INFO:Declaring metric variables
2023-04-11 21:31:42,829:INFO:Importing untrained model
2023-04-11 21:31:42,833:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-11 21:31:42,842:INFO:Starting cross validation
2023-04-11 21:31:42,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:43,508:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,605:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,628:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,644:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,651:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,977:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:43,985:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:31:44,229:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,239:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,245:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,511:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,516:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,522:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,552:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,557:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,561:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,627:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,634:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,640:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,641:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,647:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,653:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,667:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,675:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,681:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,682:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,687:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,688:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,694:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,701:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,871:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,876:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,876:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,879:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,880:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:44,883:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:45,015:INFO:Calculating mean and std
2023-04-11 21:31:45,016:INFO:Creating metrics dataframe
2023-04-11 21:31:45,139:INFO:Uploading results into container
2023-04-11 21:31:45,140:INFO:Uploading model into container now
2023-04-11 21:31:45,140:INFO:_master_model_container: 8
2023-04-11 21:31:45,140:INFO:_display_container: 2
2023-04-11 21:31:45,141:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-11 21:31:45,141:INFO:create_model() successfully completed......................................
2023-04-11 21:31:45,214:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:45,214:INFO:Creating metrics dataframe
2023-04-11 21:31:45,229:INFO:Initializing Ada Boost Classifier
2023-04-11 21:31:45,230:INFO:Total runtime is 0.5042083183924356 minutes
2023-04-11 21:31:45,234:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:45,234:INFO:Initializing create_model()
2023-04-11 21:31:45,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:45,234:INFO:Checking exceptions
2023-04-11 21:31:45,235:INFO:Importing libraries
2023-04-11 21:31:45,235:INFO:Copying training dataset
2023-04-11 21:31:45,248:INFO:Defining folds
2023-04-11 21:31:45,248:INFO:Declaring metric variables
2023-04-11 21:31:45,252:INFO:Importing untrained model
2023-04-11 21:31:45,257:INFO:Ada Boost Classifier Imported successfully
2023-04-11 21:31:45,265:INFO:Starting cross validation
2023-04-11 21:31:45,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:47,700:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:47,746:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:47,918:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:47,926:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:47,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:47,975:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:47,990:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:47,998:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,044:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,184:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,270:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,279:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,348:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,357:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,363:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,365:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,366:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,371:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,379:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,391:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,399:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,408:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,443:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:48,486:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,494:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,502:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,585:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,586:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,594:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,594:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,602:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,629:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,633:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,637:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:48,819:INFO:Calculating mean and std
2023-04-11 21:31:48,821:INFO:Creating metrics dataframe
2023-04-11 21:31:48,970:INFO:Uploading results into container
2023-04-11 21:31:48,971:INFO:Uploading model into container now
2023-04-11 21:31:48,972:INFO:_master_model_container: 9
2023-04-11 21:31:48,972:INFO:_display_container: 2
2023-04-11 21:31:48,973:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5598)
2023-04-11 21:31:48,974:INFO:create_model() successfully completed......................................
2023-04-11 21:31:49,063:INFO:SubProcess create_model() end ==================================
2023-04-11 21:31:49,063:INFO:Creating metrics dataframe
2023-04-11 21:31:49,077:INFO:Initializing Gradient Boosting Classifier
2023-04-11 21:31:49,077:INFO:Total runtime is 0.5683269421259561 minutes
2023-04-11 21:31:49,081:INFO:SubProcess create_model() called ==================================
2023-04-11 21:31:49,082:INFO:Initializing create_model()
2023-04-11 21:31:49,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:31:49,082:INFO:Checking exceptions
2023-04-11 21:31:49,083:INFO:Importing libraries
2023-04-11 21:31:49,083:INFO:Copying training dataset
2023-04-11 21:31:49,093:INFO:Defining folds
2023-04-11 21:31:49,094:INFO:Declaring metric variables
2023-04-11 21:31:49,099:INFO:Importing untrained model
2023-04-11 21:31:49,105:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 21:31:49,118:INFO:Starting cross validation
2023-04-11 21:31:49,124:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:31:59,152:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:59,158:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:59,162:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:59,204:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:31:59,490:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:59,495:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:31:59,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,414:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:00,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,573:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,581:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,601:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:00,725:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,743:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,876:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:00,918:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,922:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,927:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,957:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,962:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:00,967:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,071:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:01,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,086:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,090:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,141:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:01,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,313:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,316:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,320:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:01,328:INFO:Calculating mean and std
2023-04-11 21:32:01,329:INFO:Creating metrics dataframe
2023-04-11 21:32:01,455:INFO:Uploading results into container
2023-04-11 21:32:01,456:INFO:Uploading model into container now
2023-04-11 21:32:01,457:INFO:_master_model_container: 10
2023-04-11 21:32:01,457:INFO:_display_container: 2
2023-04-11 21:32:01,457:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5598, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 21:32:01,457:INFO:create_model() successfully completed......................................
2023-04-11 21:32:01,533:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:01,534:INFO:Creating metrics dataframe
2023-04-11 21:32:01,546:INFO:Initializing Linear Discriminant Analysis
2023-04-11 21:32:01,547:INFO:Total runtime is 0.7761601050694783 minutes
2023-04-11 21:32:01,552:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:01,553:INFO:Initializing create_model()
2023-04-11 21:32:01,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:01,553:INFO:Checking exceptions
2023-04-11 21:32:01,553:INFO:Importing libraries
2023-04-11 21:32:01,554:INFO:Copying training dataset
2023-04-11 21:32:01,565:INFO:Defining folds
2023-04-11 21:32:01,566:INFO:Declaring metric variables
2023-04-11 21:32:01,570:INFO:Importing untrained model
2023-04-11 21:32:01,574:INFO:Linear Discriminant Analysis Imported successfully
2023-04-11 21:32:01,583:INFO:Starting cross validation
2023-04-11 21:32:01,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:03,002:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,007:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,014:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,159:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,506:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,511:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,605:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,609:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,617:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,666:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,674:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,674:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,680:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,682:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,682:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,688:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,689:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,697:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,729:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,731:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,738:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,738:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,747:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:03,951:INFO:Calculating mean and std
2023-04-11 21:32:03,952:INFO:Creating metrics dataframe
2023-04-11 21:32:04,081:INFO:Uploading results into container
2023-04-11 21:32:04,082:INFO:Uploading model into container now
2023-04-11 21:32:04,083:INFO:_master_model_container: 11
2023-04-11 21:32:04,083:INFO:_display_container: 2
2023-04-11 21:32:04,084:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-11 21:32:04,084:INFO:create_model() successfully completed......................................
2023-04-11 21:32:04,165:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:04,165:INFO:Creating metrics dataframe
2023-04-11 21:32:04,176:INFO:Initializing Extra Trees Classifier
2023-04-11 21:32:04,177:INFO:Total runtime is 0.819990877310435 minutes
2023-04-11 21:32:04,181:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:04,182:INFO:Initializing create_model()
2023-04-11 21:32:04,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:04,182:INFO:Checking exceptions
2023-04-11 21:32:04,182:INFO:Importing libraries
2023-04-11 21:32:04,182:INFO:Copying training dataset
2023-04-11 21:32:04,191:INFO:Defining folds
2023-04-11 21:32:04,191:INFO:Declaring metric variables
2023-04-11 21:32:04,195:INFO:Importing untrained model
2023-04-11 21:32:04,201:INFO:Extra Trees Classifier Imported successfully
2023-04-11 21:32:04,209:INFO:Starting cross validation
2023-04-11 21:32:04,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:07,119:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,430:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,491:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,492:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,498:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,502:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,511:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,558:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,561:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,572:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,576:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,580:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,585:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,589:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,609:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,816:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,825:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,944:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,953:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,962:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,966:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,974:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,976:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,976:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:07,983:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,987:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:07,997:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,016:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,025:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,030:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,035:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,041:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,051:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,234:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,238:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:08,360:INFO:Calculating mean and std
2023-04-11 21:32:08,361:INFO:Creating metrics dataframe
2023-04-11 21:32:08,533:INFO:Uploading results into container
2023-04-11 21:32:08,534:INFO:Uploading model into container now
2023-04-11 21:32:08,535:INFO:_master_model_container: 12
2023-04-11 21:32:08,535:INFO:_display_container: 2
2023-04-11 21:32:08,535:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:32:08,535:INFO:create_model() successfully completed......................................
2023-04-11 21:32:08,609:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:08,609:INFO:Creating metrics dataframe
2023-04-11 21:32:08,624:INFO:Initializing Extreme Gradient Boosting
2023-04-11 21:32:08,624:INFO:Total runtime is 0.8941151181856791 minutes
2023-04-11 21:32:08,628:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:08,628:INFO:Initializing create_model()
2023-04-11 21:32:08,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:08,629:INFO:Checking exceptions
2023-04-11 21:32:08,629:INFO:Importing libraries
2023-04-11 21:32:08,629:INFO:Copying training dataset
2023-04-11 21:32:08,639:INFO:Defining folds
2023-04-11 21:32:08,639:INFO:Declaring metric variables
2023-04-11 21:32:08,644:INFO:Importing untrained model
2023-04-11 21:32:08,650:INFO:Extreme Gradient Boosting Imported successfully
2023-04-11 21:32:08,659:INFO:Starting cross validation
2023-04-11 21:32:08,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:19,450:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:19,459:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:19,464:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:20,075:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:20,079:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:20,084:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:20,977:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:20,982:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:20,987:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,182:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,187:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,192:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,369:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,374:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,378:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,385:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,390:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,395:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,540:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,544:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,638:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,642:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,646:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,687:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,692:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,714:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,718:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:21,760:INFO:Calculating mean and std
2023-04-11 21:32:21,762:INFO:Creating metrics dataframe
2023-04-11 21:32:21,908:INFO:Uploading results into container
2023-04-11 21:32:21,909:INFO:Uploading model into container now
2023-04-11 21:32:21,909:INFO:_master_model_container: 13
2023-04-11 21:32:21,909:INFO:_display_container: 2
2023-04-11 21:32:21,910:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-11 21:32:21,910:INFO:create_model() successfully completed......................................
2023-04-11 21:32:21,990:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:21,990:INFO:Creating metrics dataframe
2023-04-11 21:32:22,005:INFO:Initializing Light Gradient Boosting Machine
2023-04-11 21:32:22,006:INFO:Total runtime is 1.117139418919881 minutes
2023-04-11 21:32:22,010:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:22,011:INFO:Initializing create_model()
2023-04-11 21:32:22,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:22,011:INFO:Checking exceptions
2023-04-11 21:32:22,012:INFO:Importing libraries
2023-04-11 21:32:22,012:INFO:Copying training dataset
2023-04-11 21:32:22,020:INFO:Defining folds
2023-04-11 21:32:22,021:INFO:Declaring metric variables
2023-04-11 21:32:22,025:INFO:Importing untrained model
2023-04-11 21:32:22,029:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 21:32:22,038:INFO:Starting cross validation
2023-04-11 21:32:22,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:25,120:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,170:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,319:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,340:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,349:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,359:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,384:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,399:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,408:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,417:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,420:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,451:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,460:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,470:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,481:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,542:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,553:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,562:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,567:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,606:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,615:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,623:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,636:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,640:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,645:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,645:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,650:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,730:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:25,848:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,851:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:25,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:26,028:INFO:Calculating mean and std
2023-04-11 21:32:26,029:INFO:Creating metrics dataframe
2023-04-11 21:32:26,170:INFO:Uploading results into container
2023-04-11 21:32:26,171:INFO:Uploading model into container now
2023-04-11 21:32:26,172:INFO:_master_model_container: 14
2023-04-11 21:32:26,172:INFO:_display_container: 2
2023-04-11 21:32:26,173:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5598, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 21:32:26,173:INFO:create_model() successfully completed......................................
2023-04-11 21:32:26,250:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:26,250:INFO:Creating metrics dataframe
2023-04-11 21:32:26,266:INFO:Initializing Dummy Classifier
2023-04-11 21:32:26,266:INFO:Total runtime is 1.1881469090779622 minutes
2023-04-11 21:32:26,270:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:26,271:INFO:Initializing create_model()
2023-04-11 21:32:26,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eec362a10>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:26,271:INFO:Checking exceptions
2023-04-11 21:32:26,272:INFO:Importing libraries
2023-04-11 21:32:26,272:INFO:Copying training dataset
2023-04-11 21:32:26,280:INFO:Defining folds
2023-04-11 21:32:26,280:INFO:Declaring metric variables
2023-04-11 21:32:26,283:INFO:Importing untrained model
2023-04-11 21:32:26,288:INFO:Dummy Classifier Imported successfully
2023-04-11 21:32:26,296:INFO:Starting cross validation
2023-04-11 21:32:26,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:27,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:27,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:27,673:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:27,676:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:27,806:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:27,814:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:27,819:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:27,824:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,019:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,024:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,025:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,027:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,030:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,030:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,033:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,035:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,065:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,073:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,128:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,135:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,135:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,140:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,144:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,145:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,146:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,153:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,157:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,161:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,191:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,199:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,203:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,295:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:28,300:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:28,500:INFO:Calculating mean and std
2023-04-11 21:32:28,501:INFO:Creating metrics dataframe
2023-04-11 21:32:28,650:INFO:Uploading results into container
2023-04-11 21:32:28,650:INFO:Uploading model into container now
2023-04-11 21:32:28,651:INFO:_master_model_container: 15
2023-04-11 21:32:28,651:INFO:_display_container: 2
2023-04-11 21:32:28,651:INFO:DummyClassifier(constant=None, random_state=5598, strategy='prior')
2023-04-11 21:32:28,652:INFO:create_model() successfully completed......................................
2023-04-11 21:32:28,731:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:28,731:INFO:Creating metrics dataframe
2023-04-11 21:32:28,753:INFO:Initializing create_model()
2023-04-11 21:32:28,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:28,754:INFO:Checking exceptions
2023-04-11 21:32:28,758:INFO:Importing libraries
2023-04-11 21:32:28,758:INFO:Copying training dataset
2023-04-11 21:32:28,765:INFO:Defining folds
2023-04-11 21:32:28,766:INFO:Declaring metric variables
2023-04-11 21:32:28,766:INFO:Importing untrained model
2023-04-11 21:32:28,766:INFO:Declaring custom model
2023-04-11 21:32:28,767:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:32:28,769:INFO:Cross validation set to False
2023-04-11 21:32:28,769:INFO:Fitting Model
2023-04-11 21:32:29,747:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:32:29,747:INFO:create_model() successfully completed......................................
2023-04-11 21:32:29,869:INFO:_master_model_container: 15
2023-04-11 21:32:29,869:INFO:_display_container: 2
2023-04-11 21:32:29,869:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:32:29,869:INFO:compare_models() successfully completed......................................
2023-04-11 21:32:30,036:INFO:Initializing compare_models()
2023-04-11 21:32:30,036:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 21:32:30,037:INFO:Checking exceptions
2023-04-11 21:32:30,043:INFO:Preparing display monitor
2023-04-11 21:32:30,089:INFO:Initializing Logistic Regression
2023-04-11 21:32:30,090:INFO:Total runtime is 1.0144710540771484e-05 minutes
2023-04-11 21:32:30,097:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:30,097:INFO:Initializing create_model()
2023-04-11 21:32:30,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:30,098:INFO:Checking exceptions
2023-04-11 21:32:30,098:INFO:Importing libraries
2023-04-11 21:32:30,098:INFO:Copying training dataset
2023-04-11 21:32:30,114:INFO:Defining folds
2023-04-11 21:32:30,114:INFO:Declaring metric variables
2023-04-11 21:32:30,118:INFO:Importing untrained model
2023-04-11 21:32:30,125:INFO:Logistic Regression Imported successfully
2023-04-11 21:32:30,135:INFO:Starting cross validation
2023-04-11 21:32:30,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:31,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,459:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,466:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,594:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,602:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,661:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,669:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,676:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,816:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,823:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,831:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,851:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,858:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,866:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,892:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,900:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,905:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,924:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,928:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,929:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,933:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,936:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,937:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,944:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,946:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:31,997:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:32,005:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:32,013:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:32,192:INFO:Calculating mean and std
2023-04-11 21:32:32,194:INFO:Creating metrics dataframe
2023-04-11 21:32:32,356:INFO:Uploading results into container
2023-04-11 21:32:32,357:INFO:Uploading model into container now
2023-04-11 21:32:32,358:INFO:_master_model_container: 16
2023-04-11 21:32:32,358:INFO:_display_container: 3
2023-04-11 21:32:32,359:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 21:32:32,359:INFO:create_model() successfully completed......................................
2023-04-11 21:32:32,438:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:32,439:INFO:Creating metrics dataframe
2023-04-11 21:32:32,451:INFO:Initializing K Neighbors Classifier
2023-04-11 21:32:32,451:INFO:Total runtime is 0.039362899462381994 minutes
2023-04-11 21:32:32,455:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:32,456:INFO:Initializing create_model()
2023-04-11 21:32:32,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:32,457:INFO:Checking exceptions
2023-04-11 21:32:32,457:INFO:Importing libraries
2023-04-11 21:32:32,457:INFO:Copying training dataset
2023-04-11 21:32:32,465:INFO:Defining folds
2023-04-11 21:32:32,466:INFO:Declaring metric variables
2023-04-11 21:32:32,469:INFO:Importing untrained model
2023-04-11 21:32:32,475:INFO:K Neighbors Classifier Imported successfully
2023-04-11 21:32:32,483:INFO:Starting cross validation
2023-04-11 21:32:32,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:33,677:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:33,686:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:33,694:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,164:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,168:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,182:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,186:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,192:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,297:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,305:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,313:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,354:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,361:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,379:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,383:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,387:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,392:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,400:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,409:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,449:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,463:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,483:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,491:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,504:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,509:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:34,671:INFO:Calculating mean and std
2023-04-11 21:32:34,672:INFO:Creating metrics dataframe
2023-04-11 21:32:34,819:INFO:Uploading results into container
2023-04-11 21:32:34,820:INFO:Uploading model into container now
2023-04-11 21:32:34,820:INFO:_master_model_container: 17
2023-04-11 21:32:34,820:INFO:_display_container: 3
2023-04-11 21:32:34,821:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 21:32:34,821:INFO:create_model() successfully completed......................................
2023-04-11 21:32:34,900:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:34,900:INFO:Creating metrics dataframe
2023-04-11 21:32:34,918:INFO:Initializing Naive Bayes
2023-04-11 21:32:34,918:INFO:Total runtime is 0.08048054377237955 minutes
2023-04-11 21:32:34,921:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:34,921:INFO:Initializing create_model()
2023-04-11 21:32:34,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:34,922:INFO:Checking exceptions
2023-04-11 21:32:34,922:INFO:Importing libraries
2023-04-11 21:32:34,922:INFO:Copying training dataset
2023-04-11 21:32:34,932:INFO:Defining folds
2023-04-11 21:32:34,932:INFO:Declaring metric variables
2023-04-11 21:32:34,936:INFO:Importing untrained model
2023-04-11 21:32:34,943:INFO:Naive Bayes Imported successfully
2023-04-11 21:32:34,950:INFO:Starting cross validation
2023-04-11 21:32:34,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:35,977:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:35,986:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:35,994:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,384:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,388:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,393:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,401:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,409:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,417:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,426:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,435:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,445:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,529:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,538:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,546:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,685:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,686:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,701:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,703:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,704:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,707:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,769:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,771:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,773:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,778:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:36,780:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:37,006:INFO:Calculating mean and std
2023-04-11 21:32:37,008:INFO:Creating metrics dataframe
2023-04-11 21:32:37,165:INFO:Uploading results into container
2023-04-11 21:32:37,167:INFO:Uploading model into container now
2023-04-11 21:32:37,167:INFO:_master_model_container: 18
2023-04-11 21:32:37,167:INFO:_display_container: 3
2023-04-11 21:32:37,168:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 21:32:37,168:INFO:create_model() successfully completed......................................
2023-04-11 21:32:37,245:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:37,245:INFO:Creating metrics dataframe
2023-04-11 21:32:37,255:INFO:Initializing Decision Tree Classifier
2023-04-11 21:32:37,255:INFO:Total runtime is 0.11942415634791057 minutes
2023-04-11 21:32:37,260:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:37,260:INFO:Initializing create_model()
2023-04-11 21:32:37,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:37,261:INFO:Checking exceptions
2023-04-11 21:32:37,261:INFO:Importing libraries
2023-04-11 21:32:37,261:INFO:Copying training dataset
2023-04-11 21:32:37,271:INFO:Defining folds
2023-04-11 21:32:37,271:INFO:Declaring metric variables
2023-04-11 21:32:37,276:INFO:Importing untrained model
2023-04-11 21:32:37,282:INFO:Decision Tree Classifier Imported successfully
2023-04-11 21:32:37,289:INFO:Starting cross validation
2023-04-11 21:32:37,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:38,344:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,352:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,360:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,691:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,703:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,782:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,788:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,926:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,943:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,972:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,982:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:38,992:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,164:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,167:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:39,169:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,173:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,178:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,209:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,219:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,229:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,271:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,276:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,281:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,282:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,292:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:39,510:INFO:Calculating mean and std
2023-04-11 21:32:39,511:INFO:Creating metrics dataframe
2023-04-11 21:32:39,659:INFO:Uploading results into container
2023-04-11 21:32:39,660:INFO:Uploading model into container now
2023-04-11 21:32:39,661:INFO:_master_model_container: 19
2023-04-11 21:32:39,661:INFO:_display_container: 3
2023-04-11 21:32:39,662:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5598, splitter='best')
2023-04-11 21:32:39,662:INFO:create_model() successfully completed......................................
2023-04-11 21:32:39,747:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:39,747:INFO:Creating metrics dataframe
2023-04-11 21:32:39,760:INFO:Initializing SVM - Linear Kernel
2023-04-11 21:32:39,760:INFO:Total runtime is 0.16118018627166747 minutes
2023-04-11 21:32:39,765:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:39,765:INFO:Initializing create_model()
2023-04-11 21:32:39,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:39,765:INFO:Checking exceptions
2023-04-11 21:32:39,765:INFO:Importing libraries
2023-04-11 21:32:39,766:INFO:Copying training dataset
2023-04-11 21:32:39,774:INFO:Defining folds
2023-04-11 21:32:39,774:INFO:Declaring metric variables
2023-04-11 21:32:39,780:INFO:Importing untrained model
2023-04-11 21:32:39,785:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 21:32:39,795:INFO:Starting cross validation
2023-04-11 21:32:39,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:40,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:40,675:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:40,683:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:40,688:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:40,692:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,083:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,085:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,090:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,095:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,148:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,155:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,157:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:41,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,198:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,201:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,209:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,214:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:41,218:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,357:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,360:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,372:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:41,376:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,393:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,395:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,401:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:41,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,406:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,407:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,415:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,423:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,437:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,440:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,449:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,454:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:41,458:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,466:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,468:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,473:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,478:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,484:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:32:41,488:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,496:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,499:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:41,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:41,697:INFO:Calculating mean and std
2023-04-11 21:32:41,698:INFO:Creating metrics dataframe
2023-04-11 21:32:41,842:INFO:Uploading results into container
2023-04-11 21:32:41,843:INFO:Uploading model into container now
2023-04-11 21:32:41,844:INFO:_master_model_container: 20
2023-04-11 21:32:41,845:INFO:_display_container: 3
2023-04-11 21:32:41,846:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5598, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-11 21:32:41,846:INFO:create_model() successfully completed......................................
2023-04-11 21:32:41,922:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:41,923:INFO:Creating metrics dataframe
2023-04-11 21:32:41,935:INFO:Initializing Ridge Classifier
2023-04-11 21:32:41,935:INFO:Total runtime is 0.1974253455797831 minutes
2023-04-11 21:32:41,940:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:41,940:INFO:Initializing create_model()
2023-04-11 21:32:41,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:41,941:INFO:Checking exceptions
2023-04-11 21:32:41,941:INFO:Importing libraries
2023-04-11 21:32:41,941:INFO:Copying training dataset
2023-04-11 21:32:41,950:INFO:Defining folds
2023-04-11 21:32:41,951:INFO:Declaring metric variables
2023-04-11 21:32:41,955:INFO:Importing untrained model
2023-04-11 21:32:41,960:INFO:Ridge Classifier Imported successfully
2023-04-11 21:32:41,969:INFO:Starting cross validation
2023-04-11 21:32:41,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:42,899:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:42,903:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:42,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:42,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:42,920:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,345:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,349:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,357:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,362:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,363:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,367:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,373:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,552:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,552:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,559:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,563:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,564:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,565:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,569:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,572:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,599:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,607:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,611:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,615:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,724:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,725:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:43,729:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,731:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,733:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,733:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,735:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,739:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,742:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,744:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:32:43,754:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,759:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,761:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:32:43,763:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:43,993:INFO:Calculating mean and std
2023-04-11 21:32:43,996:INFO:Creating metrics dataframe
2023-04-11 21:32:44,152:INFO:Uploading results into container
2023-04-11 21:32:44,153:INFO:Uploading model into container now
2023-04-11 21:32:44,153:INFO:_master_model_container: 21
2023-04-11 21:32:44,153:INFO:_display_container: 3
2023-04-11 21:32:44,154:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5598, solver='auto',
                tol=0.0001)
2023-04-11 21:32:44,154:INFO:create_model() successfully completed......................................
2023-04-11 21:32:44,229:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:44,230:INFO:Creating metrics dataframe
2023-04-11 21:32:44,242:INFO:Initializing Random Forest Classifier
2023-04-11 21:32:44,242:INFO:Total runtime is 0.2358795921007792 minutes
2023-04-11 21:32:44,247:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:44,248:INFO:Initializing create_model()
2023-04-11 21:32:44,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:44,248:INFO:Checking exceptions
2023-04-11 21:32:44,249:INFO:Importing libraries
2023-04-11 21:32:44,249:INFO:Copying training dataset
2023-04-11 21:32:44,257:INFO:Defining folds
2023-04-11 21:32:44,257:INFO:Declaring metric variables
2023-04-11 21:32:44,262:INFO:Importing untrained model
2023-04-11 21:32:44,267:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:32:44,274:INFO:Starting cross validation
2023-04-11 21:32:44,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:45,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:45,467:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:45,476:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:45,607:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:45,622:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:45,633:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:45,936:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,081:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,175:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,197:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,205:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,243:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,255:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,341:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:46,424:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,427:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,432:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,433:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,440:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,441:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,498:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,503:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,573:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,578:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,582:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,587:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,591:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,596:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,601:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,607:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,614:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,651:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,660:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:46,893:INFO:Calculating mean and std
2023-04-11 21:32:46,894:INFO:Creating metrics dataframe
2023-04-11 21:32:47,107:INFO:Uploading results into container
2023-04-11 21:32:47,107:INFO:Uploading model into container now
2023-04-11 21:32:47,108:INFO:_master_model_container: 22
2023-04-11 21:32:47,108:INFO:_display_container: 3
2023-04-11 21:32:47,109:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:32:47,109:INFO:create_model() successfully completed......................................
2023-04-11 21:32:47,185:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:47,186:INFO:Creating metrics dataframe
2023-04-11 21:32:47,198:INFO:Initializing Quadratic Discriminant Analysis
2023-04-11 21:32:47,198:INFO:Total runtime is 0.28514972925186155 minutes
2023-04-11 21:32:47,203:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:47,203:INFO:Initializing create_model()
2023-04-11 21:32:47,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:47,203:INFO:Checking exceptions
2023-04-11 21:32:47,203:INFO:Importing libraries
2023-04-11 21:32:47,203:INFO:Copying training dataset
2023-04-11 21:32:47,212:INFO:Defining folds
2023-04-11 21:32:47,213:INFO:Declaring metric variables
2023-04-11 21:32:47,218:INFO:Importing untrained model
2023-04-11 21:32:47,223:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-11 21:32:47,231:INFO:Starting cross validation
2023-04-11 21:32:47,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:47,816:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:47,857:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:47,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:47,920:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:47,953:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:47,962:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:47,987:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:48,015:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:48,026:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:48,027:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:32:48,215:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,223:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,261:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,268:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,269:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,276:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,278:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,761:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,767:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,773:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,778:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,783:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,824:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,829:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,834:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,866:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,874:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,877:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,881:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,885:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,893:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,930:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,938:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,945:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,986:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,994:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:48,998:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:49,164:INFO:Calculating mean and std
2023-04-11 21:32:49,166:INFO:Creating metrics dataframe
2023-04-11 21:32:49,324:INFO:Uploading results into container
2023-04-11 21:32:49,325:INFO:Uploading model into container now
2023-04-11 21:32:49,325:INFO:_master_model_container: 23
2023-04-11 21:32:49,326:INFO:_display_container: 3
2023-04-11 21:32:49,326:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-11 21:32:49,326:INFO:create_model() successfully completed......................................
2023-04-11 21:32:49,402:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:49,402:INFO:Creating metrics dataframe
2023-04-11 21:32:49,413:INFO:Initializing Ada Boost Classifier
2023-04-11 21:32:49,413:INFO:Total runtime is 0.3220672925313314 minutes
2023-04-11 21:32:49,420:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:49,420:INFO:Initializing create_model()
2023-04-11 21:32:49,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:49,420:INFO:Checking exceptions
2023-04-11 21:32:49,420:INFO:Importing libraries
2023-04-11 21:32:49,420:INFO:Copying training dataset
2023-04-11 21:32:49,432:INFO:Defining folds
2023-04-11 21:32:49,432:INFO:Declaring metric variables
2023-04-11 21:32:49,440:INFO:Importing untrained model
2023-04-11 21:32:49,444:INFO:Ada Boost Classifier Imported successfully
2023-04-11 21:32:49,455:INFO:Starting cross validation
2023-04-11 21:32:49,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:50,226:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,231:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,236:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,398:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,408:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,585:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,592:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,600:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,608:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,617:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,625:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,648:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:50,667:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,080:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,083:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,084:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,088:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,103:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,107:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,110:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,243:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,248:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,280:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,285:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,289:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:51,362:INFO:Calculating mean and std
2023-04-11 21:32:51,364:INFO:Creating metrics dataframe
2023-04-11 21:32:51,525:INFO:Uploading results into container
2023-04-11 21:32:51,526:INFO:Uploading model into container now
2023-04-11 21:32:51,526:INFO:_master_model_container: 24
2023-04-11 21:32:51,526:INFO:_display_container: 3
2023-04-11 21:32:51,527:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5598)
2023-04-11 21:32:51,527:INFO:create_model() successfully completed......................................
2023-04-11 21:32:51,608:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:51,609:INFO:Creating metrics dataframe
2023-04-11 21:32:51,624:INFO:Initializing Gradient Boosting Classifier
2023-04-11 21:32:51,625:INFO:Total runtime is 0.3589198231697083 minutes
2023-04-11 21:32:51,629:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:51,630:INFO:Initializing create_model()
2023-04-11 21:32:51,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:51,631:INFO:Checking exceptions
2023-04-11 21:32:51,631:INFO:Importing libraries
2023-04-11 21:32:51,631:INFO:Copying training dataset
2023-04-11 21:32:51,641:INFO:Defining folds
2023-04-11 21:32:51,641:INFO:Declaring metric variables
2023-04-11 21:32:51,644:INFO:Importing untrained model
2023-04-11 21:32:51,650:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 21:32:51,658:INFO:Starting cross validation
2023-04-11 21:32:51,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:53,277:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,308:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,646:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:53,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:53,656:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:53,661:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:53,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:53,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:53,727:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,806:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,833:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,860:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,884:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:53,931:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:54,001:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:54,032:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,037:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,042:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,116:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,125:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,134:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,171:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,203:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,211:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,241:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,249:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,258:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,261:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,268:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,271:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,277:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,286:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:54,602:INFO:Calculating mean and std
2023-04-11 21:32:54,603:INFO:Creating metrics dataframe
2023-04-11 21:32:54,756:INFO:Uploading results into container
2023-04-11 21:32:54,757:INFO:Uploading model into container now
2023-04-11 21:32:54,758:INFO:_master_model_container: 25
2023-04-11 21:32:54,758:INFO:_display_container: 3
2023-04-11 21:32:54,759:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5598, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 21:32:54,759:INFO:create_model() successfully completed......................................
2023-04-11 21:32:54,841:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:54,841:INFO:Creating metrics dataframe
2023-04-11 21:32:54,853:INFO:Initializing Linear Discriminant Analysis
2023-04-11 21:32:54,853:INFO:Total runtime is 0.4127233783404033 minutes
2023-04-11 21:32:54,856:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:54,857:INFO:Initializing create_model()
2023-04-11 21:32:54,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:54,857:INFO:Checking exceptions
2023-04-11 21:32:54,857:INFO:Importing libraries
2023-04-11 21:32:54,857:INFO:Copying training dataset
2023-04-11 21:32:54,867:INFO:Defining folds
2023-04-11 21:32:54,867:INFO:Declaring metric variables
2023-04-11 21:32:54,873:INFO:Importing untrained model
2023-04-11 21:32:54,877:INFO:Linear Discriminant Analysis Imported successfully
2023-04-11 21:32:54,885:INFO:Starting cross validation
2023-04-11 21:32:54,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:55,773:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,782:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,786:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,790:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,794:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,802:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,824:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,826:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,828:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,833:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,835:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,841:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,847:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,855:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,862:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,904:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,912:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:55,921:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,094:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,099:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,107:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,249:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,258:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,350:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,352:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,354:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,356:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,358:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:56,449:INFO:Calculating mean and std
2023-04-11 21:32:56,451:INFO:Creating metrics dataframe
2023-04-11 21:32:56,620:INFO:Uploading results into container
2023-04-11 21:32:56,621:INFO:Uploading model into container now
2023-04-11 21:32:56,622:INFO:_master_model_container: 26
2023-04-11 21:32:56,622:INFO:_display_container: 3
2023-04-11 21:32:56,622:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-11 21:32:56,622:INFO:create_model() successfully completed......................................
2023-04-11 21:32:56,704:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:56,704:INFO:Creating metrics dataframe
2023-04-11 21:32:56,720:INFO:Initializing Extra Trees Classifier
2023-04-11 21:32:56,720:INFO:Total runtime is 0.4438411990801494 minutes
2023-04-11 21:32:56,724:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:56,725:INFO:Initializing create_model()
2023-04-11 21:32:56,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:56,725:INFO:Checking exceptions
2023-04-11 21:32:56,725:INFO:Importing libraries
2023-04-11 21:32:56,725:INFO:Copying training dataset
2023-04-11 21:32:56,736:INFO:Defining folds
2023-04-11 21:32:56,736:INFO:Declaring metric variables
2023-04-11 21:32:56,740:INFO:Importing untrained model
2023-04-11 21:32:56,744:INFO:Extra Trees Classifier Imported successfully
2023-04-11 21:32:56,752:INFO:Starting cross validation
2023-04-11 21:32:56,757:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:32:58,006:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,016:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,027:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,100:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,110:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,126:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,186:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,196:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,223:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,224:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,235:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,245:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,296:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,306:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,314:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,316:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,329:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,339:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:58,721:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:58,740:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:32:58,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,919:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,931:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,935:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,940:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,994:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:58,998:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:59,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:32:59,085:INFO:Calculating mean and std
2023-04-11 21:32:59,087:INFO:Creating metrics dataframe
2023-04-11 21:32:59,254:INFO:Uploading results into container
2023-04-11 21:32:59,255:INFO:Uploading model into container now
2023-04-11 21:32:59,255:INFO:_master_model_container: 27
2023-04-11 21:32:59,256:INFO:_display_container: 3
2023-04-11 21:32:59,256:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:32:59,256:INFO:create_model() successfully completed......................................
2023-04-11 21:32:59,329:INFO:SubProcess create_model() end ==================================
2023-04-11 21:32:59,329:INFO:Creating metrics dataframe
2023-04-11 21:32:59,341:INFO:Initializing Extreme Gradient Boosting
2023-04-11 21:32:59,341:INFO:Total runtime is 0.48753054539362595 minutes
2023-04-11 21:32:59,344:INFO:SubProcess create_model() called ==================================
2023-04-11 21:32:59,345:INFO:Initializing create_model()
2023-04-11 21:32:59,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:32:59,345:INFO:Checking exceptions
2023-04-11 21:32:59,345:INFO:Importing libraries
2023-04-11 21:32:59,345:INFO:Copying training dataset
2023-04-11 21:32:59,356:INFO:Defining folds
2023-04-11 21:32:59,356:INFO:Declaring metric variables
2023-04-11 21:32:59,360:INFO:Importing untrained model
2023-04-11 21:32:59,365:INFO:Extreme Gradient Boosting Imported successfully
2023-04-11 21:32:59,373:INFO:Starting cross validation
2023-04-11 21:32:59,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:33:00,229:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,237:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,240:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,245:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,245:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,251:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,355:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,363:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,371:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,372:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,373:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,376:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,380:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,381:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,382:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,384:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,388:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,391:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,391:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,392:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,403:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,412:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,420:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,740:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,749:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,758:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:00,998:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:01,009:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:01,088:INFO:Calculating mean and std
2023-04-11 21:33:01,090:INFO:Creating metrics dataframe
2023-04-11 21:33:01,297:INFO:Uploading results into container
2023-04-11 21:33:01,298:INFO:Uploading model into container now
2023-04-11 21:33:01,299:INFO:_master_model_container: 28
2023-04-11 21:33:01,299:INFO:_display_container: 3
2023-04-11 21:33:01,300:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-11 21:33:01,301:INFO:create_model() successfully completed......................................
2023-04-11 21:33:01,383:INFO:SubProcess create_model() end ==================================
2023-04-11 21:33:01,384:INFO:Creating metrics dataframe
2023-04-11 21:33:01,397:INFO:Initializing Light Gradient Boosting Machine
2023-04-11 21:33:01,397:INFO:Total runtime is 0.5218012213706971 minutes
2023-04-11 21:33:01,403:INFO:SubProcess create_model() called ==================================
2023-04-11 21:33:01,403:INFO:Initializing create_model()
2023-04-11 21:33:01,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:33:01,403:INFO:Checking exceptions
2023-04-11 21:33:01,403:INFO:Importing libraries
2023-04-11 21:33:01,404:INFO:Copying training dataset
2023-04-11 21:33:01,413:INFO:Defining folds
2023-04-11 21:33:01,413:INFO:Declaring metric variables
2023-04-11 21:33:01,417:INFO:Importing untrained model
2023-04-11 21:33:01,424:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 21:33:01,433:INFO:Starting cross validation
2023-04-11 21:33:01,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:33:02,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,510:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,511:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,519:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,521:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,524:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,528:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,535:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,596:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,605:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,613:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,615:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,624:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,627:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,635:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,636:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,646:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,709:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,718:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,727:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,801:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,808:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:02,812:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,110:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,114:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,117:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,199:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,203:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,208:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:03,284:INFO:Calculating mean and std
2023-04-11 21:33:03,287:INFO:Creating metrics dataframe
2023-04-11 21:33:03,461:INFO:Uploading results into container
2023-04-11 21:33:03,462:INFO:Uploading model into container now
2023-04-11 21:33:03,463:INFO:_master_model_container: 29
2023-04-11 21:33:03,463:INFO:_display_container: 3
2023-04-11 21:33:03,463:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5598, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 21:33:03,463:INFO:create_model() successfully completed......................................
2023-04-11 21:33:03,536:INFO:SubProcess create_model() end ==================================
2023-04-11 21:33:03,537:INFO:Creating metrics dataframe
2023-04-11 21:33:03,554:INFO:Initializing Dummy Classifier
2023-04-11 21:33:03,555:INFO:Total runtime is 0.557752287387848 minutes
2023-04-11 21:33:03,559:INFO:SubProcess create_model() called ==================================
2023-04-11 21:33:03,560:INFO:Initializing create_model()
2023-04-11 21:33:03,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f48976da0>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:33:03,560:INFO:Checking exceptions
2023-04-11 21:33:03,560:INFO:Importing libraries
2023-04-11 21:33:03,560:INFO:Copying training dataset
2023-04-11 21:33:03,572:INFO:Defining folds
2023-04-11 21:33:03,572:INFO:Declaring metric variables
2023-04-11 21:33:03,578:INFO:Importing untrained model
2023-04-11 21:33:03,582:INFO:Dummy Classifier Imported successfully
2023-04-11 21:33:03,594:INFO:Starting cross validation
2023-04-11 21:33:03,597:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:33:04,336:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,341:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,344:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,433:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,439:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,443:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,489:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,496:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,500:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,502:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,504:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,506:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,509:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,511:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,523:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,527:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,530:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,536:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,549:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,556:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,564:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,572:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:04,576:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:04,580:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:05,073:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:05,077:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:05,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:33:05,080:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:33:05,087:INFO:Calculating mean and std
2023-04-11 21:33:05,089:INFO:Creating metrics dataframe
2023-04-11 21:33:05,332:INFO:Uploading results into container
2023-04-11 21:33:05,332:INFO:Uploading model into container now
2023-04-11 21:33:05,333:INFO:_master_model_container: 30
2023-04-11 21:33:05,333:INFO:_display_container: 3
2023-04-11 21:33:05,333:INFO:DummyClassifier(constant=None, random_state=5598, strategy='prior')
2023-04-11 21:33:05,334:INFO:create_model() successfully completed......................................
2023-04-11 21:33:05,411:INFO:SubProcess create_model() end ==================================
2023-04-11 21:33:05,411:INFO:Creating metrics dataframe
2023-04-11 21:33:05,435:INFO:Initializing create_model()
2023-04-11 21:33:05,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:33:05,435:INFO:Checking exceptions
2023-04-11 21:33:05,439:INFO:Importing libraries
2023-04-11 21:33:05,439:INFO:Copying training dataset
2023-04-11 21:33:05,447:INFO:Defining folds
2023-04-11 21:33:05,447:INFO:Declaring metric variables
2023-04-11 21:33:05,447:INFO:Importing untrained model
2023-04-11 21:33:05,447:INFO:Declaring custom model
2023-04-11 21:33:05,448:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:33:05,450:INFO:Cross validation set to False
2023-04-11 21:33:05,450:INFO:Fitting Model
2023-04-11 21:33:05,951:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:33:05,951:INFO:create_model() successfully completed......................................
2023-04-11 21:33:06,066:INFO:_master_model_container: 30
2023-04-11 21:33:06,066:INFO:_display_container: 3
2023-04-11 21:33:06,066:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:33:06,066:INFO:compare_models() successfully completed......................................
2023-04-11 21:34:13,373:INFO:Initializing tune_model()
2023-04-11 21:34:13,375:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>)
2023-04-11 21:34:13,375:INFO:Checking exceptions
2023-04-11 21:34:13,405:INFO:Copying training dataset
2023-04-11 21:34:13,417:INFO:Checking base model
2023-04-11 21:34:13,417:INFO:Base model : Random Forest Classifier
2023-04-11 21:34:13,424:INFO:Declaring metric variables
2023-04-11 21:34:13,430:INFO:Defining Hyperparameters
2023-04-11 21:34:13,581:INFO:Tuning with n_jobs=-1
2023-04-11 21:34:13,581:INFO:Initializing RandomizedSearchCV
2023-04-11 21:34:16,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:16,657:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:16,737:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:16,898:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:17,357:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:18,116:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,195:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,207:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,215:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,256:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,349:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,407:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,424:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,455:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,462:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:18,867:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:21,356:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:21,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:21,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:21,714:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:21,974:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:22,098:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:22,163:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:22,615:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,117:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,260:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,274:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,343:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,779:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:23,970:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:25,202:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:25,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:25,701:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,084:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,263:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,387:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,401:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,424:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,625:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,776:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:26,865:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:27,010:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:28,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:28,400:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:28,634:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:28,952:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:29,540:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:29,832:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:29,913:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:30,022:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:30,125:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:30,280:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:30,409:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:30,435:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:31,701:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:31,757:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:32,007:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:32,234:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:32,750:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:33,419:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:33,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:33,618:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:33,690:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:33,721:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:33,972:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:34,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:34,152:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:34,927:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:35,195:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:35,918:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:35,938:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:36,421:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:36,440:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:36,662:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:36,704:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:36,899:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:37,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:37,664:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:38,379:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:38,900:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:38,988:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:39,071:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:39,297:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:39,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:39,684:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:40,060:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:40,446:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:40,797:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:41,265:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:41,417:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:41,435:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:41,510:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:41,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:41,617:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:42,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:43,321:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:43,574:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:43,752:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:44,246:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:34:44,288:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:44,582:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:44,724:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:44,768:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:44,859:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:45,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:45,171:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:45,610:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:45,715:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:47,441:INFO:best_params: {'actual_estimator__n_estimators': 60, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': True}
2023-04-11 21:34:47,442:INFO:Hyperparameter search completed
2023-04-11 21:34:47,442:INFO:SubProcess create_model() called ==================================
2023-04-11 21:34:47,443:INFO:Initializing create_model()
2023-04-11 21:34:47,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f483cdc60>, model_only=True, return_train_score=False, kwargs={'n_estimators': 60, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0001, 'max_features': 'log2', 'max_depth': 7, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': True})
2023-04-11 21:34:47,444:INFO:Checking exceptions
2023-04-11 21:34:47,445:INFO:Importing libraries
2023-04-11 21:34:47,445:INFO:Copying training dataset
2023-04-11 21:34:47,454:INFO:Defining folds
2023-04-11 21:34:47,455:INFO:Declaring metric variables
2023-04-11 21:34:47,458:INFO:Importing untrained model
2023-04-11 21:34:47,458:INFO:Declaring custom model
2023-04-11 21:34:47,464:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:34:47,474:INFO:Starting cross validation
2023-04-11 21:34:47,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:34:49,096:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,109:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,210:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,216:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,238:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,302:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,330:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,339:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,360:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:34:49,524:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,528:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,534:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,544:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,558:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,567:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,570:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,576:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,582:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,604:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,612:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,653:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,661:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,690:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,700:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:49,705:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:50,135:INFO:Calculating mean and std
2023-04-11 21:34:50,137:INFO:Creating metrics dataframe
2023-04-11 21:34:50,143:INFO:Finalizing model
2023-04-11 21:34:51,331:INFO:Uploading results into container
2023-04-11 21:34:51,332:INFO:Uploading model into container now
2023-04-11 21:34:51,333:INFO:_master_model_container: 31
2023-04-11 21:34:51,333:INFO:_display_container: 4
2023-04-11 21:34:51,334:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=7, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=5, min_samples_split=7,
                       min_weight_fraction_leaf=0.0, n_estimators=60, n_jobs=-1,
                       oob_score=False, random_state=5598, verbose=0,
                       warm_start=False)
2023-04-11 21:34:51,334:INFO:create_model() successfully completed......................................
2023-04-11 21:34:51,448:INFO:SubProcess create_model() end ==================================
2023-04-11 21:34:51,448:INFO:choose_better activated
2023-04-11 21:34:51,452:INFO:SubProcess create_model() called ==================================
2023-04-11 21:34:51,452:INFO:Initializing create_model()
2023-04-11 21:34:51,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7f44310ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:34:51,452:INFO:Checking exceptions
2023-04-11 21:34:51,454:INFO:Importing libraries
2023-04-11 21:34:51,454:INFO:Copying training dataset
2023-04-11 21:34:51,461:INFO:Defining folds
2023-04-11 21:34:51,461:INFO:Declaring metric variables
2023-04-11 21:34:51,461:INFO:Importing untrained model
2023-04-11 21:34:51,461:INFO:Declaring custom model
2023-04-11 21:34:51,462:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:34:51,462:INFO:Starting cross validation
2023-04-11 21:34:51,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:34:52,679:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,690:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,700:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,740:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,748:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,762:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,770:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,817:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,825:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,830:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,837:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,844:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,855:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,905:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,917:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,931:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,937:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,945:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,946:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,958:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,967:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,971:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:52,981:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:53,036:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:53,040:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:53,044:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:34:53,546:INFO:Calculating mean and std
2023-04-11 21:34:53,546:INFO:Creating metrics dataframe
2023-04-11 21:34:53,549:INFO:Finalizing model
2023-04-11 21:34:54,258:INFO:Uploading results into container
2023-04-11 21:34:54,259:INFO:Uploading model into container now
2023-04-11 21:34:54,260:INFO:_master_model_container: 32
2023-04-11 21:34:54,260:INFO:_display_container: 5
2023-04-11 21:34:54,260:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:34:54,260:INFO:create_model() successfully completed......................................
2023-04-11 21:34:54,372:INFO:SubProcess create_model() end ==================================
2023-04-11 21:34:54,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False) result for Accuracy is 0.9673
2023-04-11 21:34:54,373:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=7, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=5, min_samples_split=7,
                       min_weight_fraction_leaf=0.0, n_estimators=60, n_jobs=-1,
                       oob_score=False, random_state=5598, verbose=0,
                       warm_start=False) result for Accuracy is 0.9611
2023-04-11 21:34:54,373:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False) is best model
2023-04-11 21:34:54,374:INFO:choose_better completed
2023-04-11 21:34:54,374:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-11 21:34:54,385:INFO:_master_model_container: 32
2023-04-11 21:34:54,385:INFO:_display_container: 4
2023-04-11 21:34:54,386:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5598, verbose=0, warm_start=False)
2023-04-11 21:34:54,386:INFO:tune_model() successfully completed......................................
2023-04-11 21:36:50,552:INFO:PyCaret ClassificationExperiment
2023-04-11 21:36:50,552:INFO:Logging name: clf-default-name
2023-04-11 21:36:50,552:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 21:36:50,552:INFO:version 3.0.0
2023-04-11 21:36:50,552:INFO:Initializing setup()
2023-04-11 21:36:50,552:INFO:self.USI: f2b5
2023-04-11 21:36:50,552:INFO:self._variable_keys: {'X_train', 'fold_generator', '_available_plots', 'target_param', 'X_test', '_ml_usecase', 'gpu_n_jobs_param', 'logging_param', 'n_jobs_param', 'X', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'memory', 'y', 'idx', 'html_param', 'pipeline', 'y_train', 'y_test', 'fold_shuffle_param', 'seed', 'log_plots_param', 'gpu_param', 'exp_id', 'fix_imbalance', 'data', 'USI'}
2023-04-11 21:36:50,552:INFO:Checking environment
2023-04-11 21:36:50,552:INFO:python_version: 3.10.9
2023-04-11 21:36:50,552:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 21:36:50,553:INFO:machine: x86_64
2023-04-11 21:36:50,553:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:36:50,553:INFO:Memory: svmem(total=16570302464, available=7059570688, percent=57.4, used=7523917824, free=951922688, active=8292405248, inactive=5624090624, buffers=1018245120, cached=7076216832, shared=1635045376, slab=689319936)
2023-04-11 21:36:50,554:INFO:Physical Core: 6
2023-04-11 21:36:50,554:INFO:Logical Core: 12
2023-04-11 21:36:50,554:INFO:Checking libraries
2023-04-11 21:36:50,554:INFO:System:
2023-04-11 21:36:50,554:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 21:36:50,554:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 21:36:50,554:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:36:50,554:INFO:PyCaret required dependencies:
2023-04-11 21:36:50,554:INFO:                 pip: 22.3.1
2023-04-11 21:36:50,554:INFO:          setuptools: 65.6.3
2023-04-11 21:36:50,554:INFO:             pycaret: 3.0.0
2023-04-11 21:36:50,554:INFO:             IPython: 8.12.0
2023-04-11 21:36:50,554:INFO:          ipywidgets: 8.0.4
2023-04-11 21:36:50,554:INFO:                tqdm: 4.64.1
2023-04-11 21:36:50,554:INFO:               numpy: 1.23.5
2023-04-11 21:36:50,554:INFO:              pandas: 1.5.3
2023-04-11 21:36:50,554:INFO:              jinja2: 3.1.2
2023-04-11 21:36:50,554:INFO:               scipy: 1.10.1
2023-04-11 21:36:50,554:INFO:              joblib: 1.2.0
2023-04-11 21:36:50,554:INFO:             sklearn: 1.2.2
2023-04-11 21:36:50,555:INFO:                pyod: 1.0.9
2023-04-11 21:36:50,555:INFO:            imblearn: 0.10.1
2023-04-11 21:36:50,555:INFO:   category_encoders: 2.6.0
2023-04-11 21:36:50,555:INFO:            lightgbm: 3.3.5
2023-04-11 21:36:50,555:INFO:               numba: 0.56.4
2023-04-11 21:36:50,555:INFO:            requests: 2.28.1
2023-04-11 21:36:50,555:INFO:          matplotlib: 3.7.1
2023-04-11 21:36:50,555:INFO:          scikitplot: 0.3.7
2023-04-11 21:36:50,555:INFO:         yellowbrick: 1.5
2023-04-11 21:36:50,555:INFO:              plotly: 5.14.1
2023-04-11 21:36:50,555:INFO:             kaleido: 0.2.1
2023-04-11 21:36:50,555:INFO:         statsmodels: 0.13.5
2023-04-11 21:36:50,555:INFO:              sktime: 0.17.1
2023-04-11 21:36:50,555:INFO:               tbats: 1.1.2
2023-04-11 21:36:50,555:INFO:            pmdarima: 2.0.3
2023-04-11 21:36:50,555:INFO:              psutil: 5.9.4
2023-04-11 21:36:50,555:INFO:PyCaret optional dependencies:
2023-04-11 21:36:50,555:INFO:                shap: 0.41.0
2023-04-11 21:36:50,555:INFO:           interpret: Not installed
2023-04-11 21:36:50,555:INFO:                umap: Not installed
2023-04-11 21:36:50,555:INFO:    pandas_profiling: Not installed
2023-04-11 21:36:50,555:INFO:  explainerdashboard: Not installed
2023-04-11 21:36:50,555:INFO:             autoviz: Not installed
2023-04-11 21:36:50,555:INFO:           fairlearn: Not installed
2023-04-11 21:36:50,555:INFO:             xgboost: 1.7.5
2023-04-11 21:36:50,555:INFO:            catboost: Not installed
2023-04-11 21:36:50,556:INFO:              kmodes: Not installed
2023-04-11 21:36:50,556:INFO:             mlxtend: Not installed
2023-04-11 21:36:50,556:INFO:       statsforecast: Not installed
2023-04-11 21:36:50,556:INFO:        tune_sklearn: Not installed
2023-04-11 21:36:50,556:INFO:                 ray: Not installed
2023-04-11 21:36:50,556:INFO:            hyperopt: Not installed
2023-04-11 21:36:50,556:INFO:              optuna: Not installed
2023-04-11 21:36:50,556:INFO:               skopt: Not installed
2023-04-11 21:36:50,556:INFO:              mlflow: Not installed
2023-04-11 21:36:50,556:INFO:              gradio: Not installed
2023-04-11 21:36:50,556:INFO:             fastapi: Not installed
2023-04-11 21:36:50,556:INFO:             uvicorn: Not installed
2023-04-11 21:36:50,556:INFO:              m2cgen: Not installed
2023-04-11 21:36:50,556:INFO:           evidently: Not installed
2023-04-11 21:36:50,556:INFO:               fugue: Not installed
2023-04-11 21:36:50,556:INFO:           streamlit: 1.21.0
2023-04-11 21:36:50,556:INFO:             prophet: Not installed
2023-04-11 21:36:50,556:INFO:None
2023-04-11 21:36:50,556:INFO:Set up data.
2023-04-11 21:36:50,589:INFO:Set up train/test split.
2023-04-11 21:36:50,606:INFO:Set up index.
2023-04-11 21:36:50,607:INFO:Set up folding strategy.
2023-04-11 21:36:50,607:INFO:Assigning column types.
2023-04-11 21:36:50,612:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-11 21:36:50,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:36:50,653:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:36:50,676:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:50,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:50,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:36:50,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:36:50,747:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:50,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:50,750:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-11 21:36:50,794:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:36:50,819:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:50,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:50,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:36:50,878:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:50,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:50,882:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-11 21:36:50,948:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:50,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:51,006:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:51,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:51,010:INFO:Preparing preprocessing pipeline...
2023-04-11 21:36:51,011:INFO:Set up label encoding.
2023-04-11 21:36:51,011:INFO:Set up simple imputation.
2023-04-11 21:36:51,022:INFO:Set up encoding of ordinal features.
2023-04-11 21:36:51,042:INFO:Set up encoding of categorical features.
2023-04-11 21:36:51,043:INFO:Set up column name cleaning.
2023-04-11 21:36:51,505:INFO:Finished creating preprocessing pipeline.
2023-04-11 21:36:51,670:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7946,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-11 21:36:51,670:INFO:Creating final display dataframe.
2023-04-11 21:36:52,557:INFO:Setup _display_container:                     Description                             Value
0                    Session id                              7946
1                        Target                   Customer Status
2                   Target type                        Multiclass
3                Target mapping  Churned: 0, Joined: 1, Stayed: 2
4           Original data shape                        (7043, 38)
5        Transformed data shape                        (7043, 72)
6   Transformed train set shape                        (4930, 72)
7    Transformed test set shape                        (2113, 72)
8              Ordinal features                                14
9              Numeric features                                15
10         Categorical features                                22
11     Rows with missing values                             77.5%
12                   Preprocess                              True
13              Imputation type                            simple
14           Numeric imputation                              mean
15       Categorical imputation                              mode
16     Maximum one-hot encoding                                25
17              Encoding method                              None
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              f2b5
2023-04-11 21:36:52,653:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:52,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:52,719:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:36:52,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:36:52,722:INFO:setup() successfully completed in 2.24s...............
2023-04-11 21:36:52,781:INFO:Initializing compare_models()
2023-04-11 21:36:52,781:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 21:36:52,781:INFO:Checking exceptions
2023-04-11 21:36:52,787:INFO:Preparing display monitor
2023-04-11 21:36:52,828:INFO:Initializing Logistic Regression
2023-04-11 21:36:52,829:INFO:Total runtime is 5.312760670979818e-06 minutes
2023-04-11 21:36:52,835:INFO:SubProcess create_model() called ==================================
2023-04-11 21:36:52,836:INFO:Initializing create_model()
2023-04-11 21:36:52,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f483ce020>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:36:52,836:INFO:Checking exceptions
2023-04-11 21:36:52,836:INFO:Importing libraries
2023-04-11 21:36:52,836:INFO:Copying training dataset
2023-04-11 21:36:52,848:INFO:Defining folds
2023-04-11 21:36:52,848:INFO:Declaring metric variables
2023-04-11 21:36:52,853:INFO:Importing untrained model
2023-04-11 21:36:52,857:INFO:Logistic Regression Imported successfully
2023-04-11 21:36:52,867:INFO:Starting cross validation
2023-04-11 21:36:52,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:36:57,301:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:57,629:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:58,210:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:58,219:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:58,224:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:58,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:58,645:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:58,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:58,659:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:58,822:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:58,903:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:58,926:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:58,973:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:59,006:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:59,162:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:59,177:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:36:59,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,264:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,682:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,687:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,689:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,692:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,693:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,787:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,792:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,796:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,802:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,806:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,810:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,917:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:36:59,932:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,098:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,108:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,109:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,111:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,115:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:00,237:INFO:Calculating mean and std
2023-04-11 21:37:00,238:INFO:Creating metrics dataframe
2023-04-11 21:37:00,430:INFO:Uploading results into container
2023-04-11 21:37:00,430:INFO:Uploading model into container now
2023-04-11 21:37:00,432:INFO:_master_model_container: 1
2023-04-11 21:37:00,432:INFO:_display_container: 2
2023-04-11 21:37:00,433:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7946, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 21:37:00,433:INFO:create_model() successfully completed......................................
2023-04-11 21:37:00,521:INFO:SubProcess create_model() end ==================================
2023-04-11 21:37:00,522:INFO:Creating metrics dataframe
2023-04-11 21:37:00,529:INFO:Initializing K Neighbors Classifier
2023-04-11 21:37:00,529:INFO:Total runtime is 0.1283425490061442 minutes
2023-04-11 21:37:00,533:INFO:SubProcess create_model() called ==================================
2023-04-11 21:37:00,534:INFO:Initializing create_model()
2023-04-11 21:37:00,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f483ce020>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:37:00,534:INFO:Checking exceptions
2023-04-11 21:37:00,534:INFO:Importing libraries
2023-04-11 21:37:00,534:INFO:Copying training dataset
2023-04-11 21:37:00,543:INFO:Defining folds
2023-04-11 21:37:00,543:INFO:Declaring metric variables
2023-04-11 21:37:00,547:INFO:Importing untrained model
2023-04-11 21:37:00,551:INFO:K Neighbors Classifier Imported successfully
2023-04-11 21:37:00,560:INFO:Starting cross validation
2023-04-11 21:37:00,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:37:02,072:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,601:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,606:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,608:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,614:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,662:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,670:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,713:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,727:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,731:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,735:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,743:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,811:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,818:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,826:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,836:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,844:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,853:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,859:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,864:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,871:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,982:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,989:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:02,993:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:03,313:INFO:Calculating mean and std
2023-04-11 21:37:03,314:INFO:Creating metrics dataframe
2023-04-11 21:37:03,551:INFO:Uploading results into container
2023-04-11 21:37:03,553:INFO:Uploading model into container now
2023-04-11 21:37:03,554:INFO:_master_model_container: 2
2023-04-11 21:37:03,554:INFO:_display_container: 2
2023-04-11 21:37:03,554:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 21:37:03,554:INFO:create_model() successfully completed......................................
2023-04-11 21:37:03,665:INFO:SubProcess create_model() end ==================================
2023-04-11 21:37:03,666:INFO:Creating metrics dataframe
2023-04-11 21:37:03,683:INFO:Initializing Naive Bayes
2023-04-11 21:37:03,683:INFO:Total runtime is 0.18091324965159097 minutes
2023-04-11 21:37:03,689:INFO:SubProcess create_model() called ==================================
2023-04-11 21:37:03,690:INFO:Initializing create_model()
2023-04-11 21:37:03,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f483ce020>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:37:03,690:INFO:Checking exceptions
2023-04-11 21:37:03,691:INFO:Importing libraries
2023-04-11 21:37:03,691:INFO:Copying training dataset
2023-04-11 21:37:03,707:INFO:Defining folds
2023-04-11 21:37:03,708:INFO:Declaring metric variables
2023-04-11 21:37:03,714:INFO:Importing untrained model
2023-04-11 21:37:03,720:INFO:Naive Bayes Imported successfully
2023-04-11 21:37:03,729:INFO:Starting cross validation
2023-04-11 21:37:03,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:37:05,143:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,147:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,181:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,189:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,197:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,449:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,457:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,465:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,527:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,531:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,598:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,606:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,606:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,610:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,612:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:37:05,618:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,625:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,742:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,750:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,759:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,813:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,817:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,822:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,845:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,848:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:05,855:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:06,248:INFO:Calculating mean and std
2023-04-11 21:37:06,249:INFO:Creating metrics dataframe
2023-04-11 21:37:06,497:INFO:Uploading results into container
2023-04-11 21:37:06,498:INFO:Uploading model into container now
2023-04-11 21:37:06,499:INFO:_master_model_container: 3
2023-04-11 21:37:06,499:INFO:_display_container: 2
2023-04-11 21:37:06,499:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 21:37:06,500:INFO:create_model() successfully completed......................................
2023-04-11 21:37:06,608:INFO:SubProcess create_model() end ==================================
2023-04-11 21:37:06,608:INFO:Creating metrics dataframe
2023-04-11 21:37:06,616:INFO:Initializing Decision Tree Classifier
2023-04-11 21:37:06,616:INFO:Total runtime is 0.2298001686731974 minutes
2023-04-11 21:37:06,621:INFO:SubProcess create_model() called ==================================
2023-04-11 21:37:06,622:INFO:Initializing create_model()
2023-04-11 21:37:06,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f483ce020>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:37:06,622:INFO:Checking exceptions
2023-04-11 21:37:06,622:INFO:Importing libraries
2023-04-11 21:37:06,622:INFO:Copying training dataset
2023-04-11 21:37:06,631:INFO:Defining folds
2023-04-11 21:37:06,631:INFO:Declaring metric variables
2023-04-11 21:37:06,636:INFO:Importing untrained model
2023-04-11 21:37:06,641:INFO:Decision Tree Classifier Imported successfully
2023-04-11 21:37:06,649:INFO:Starting cross validation
2023-04-11 21:37:06,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:37:08,302:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,306:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,308:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,311:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,313:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,315:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,389:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,397:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,404:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,407:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,414:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,422:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,533:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,538:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,538:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,546:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,546:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,554:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,554:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,558:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,566:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,575:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,645:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,660:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,721:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,726:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:08,729:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:09,073:INFO:Calculating mean and std
2023-04-11 21:37:09,074:INFO:Creating metrics dataframe
2023-04-11 21:37:09,345:INFO:Uploading results into container
2023-04-11 21:37:09,346:INFO:Uploading model into container now
2023-04-11 21:37:09,346:INFO:_master_model_container: 4
2023-04-11 21:37:09,347:INFO:_display_container: 2
2023-04-11 21:37:09,347:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7946, splitter='best')
2023-04-11 21:37:09,347:INFO:create_model() successfully completed......................................
2023-04-11 21:37:09,446:INFO:SubProcess create_model() end ==================================
2023-04-11 21:37:09,446:INFO:Creating metrics dataframe
2023-04-11 21:37:09,460:INFO:Initializing SVM - Linear Kernel
2023-04-11 21:37:09,461:INFO:Total runtime is 0.2772059837977091 minutes
2023-04-11 21:37:09,465:INFO:SubProcess create_model() called ==================================
2023-04-11 21:37:09,466:INFO:Initializing create_model()
2023-04-11 21:37:09,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f7eec20d5d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f483ce020>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:37:09,466:INFO:Checking exceptions
2023-04-11 21:37:09,467:INFO:Importing libraries
2023-04-11 21:37:09,467:INFO:Copying training dataset
2023-04-11 21:37:09,482:INFO:Defining folds
2023-04-11 21:37:09,482:INFO:Declaring metric variables
2023-04-11 21:37:09,488:INFO:Importing untrained model
2023-04-11 21:37:09,494:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 21:37:09,502:INFO:Starting cross validation
2023-04-11 21:37:09,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:37:11,156:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-11 21:37:13,537:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:37:13,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:37:13,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:13,557:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:13,568:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:37:13,577:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:37:17,750:INFO:PyCaret ClassificationExperiment
2023-04-11 21:37:17,750:INFO:Logging name: clf-default-name
2023-04-11 21:37:17,750:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 21:37:17,751:INFO:version 3.0.0
2023-04-11 21:37:17,751:INFO:Initializing setup()
2023-04-11 21:37:17,751:INFO:self.USI: d660
2023-04-11 21:37:17,751:INFO:self._variable_keys: {'X_train', 'fold_generator', '_available_plots', 'target_param', 'X_test', '_ml_usecase', 'gpu_n_jobs_param', 'logging_param', 'n_jobs_param', 'X', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'memory', 'y', 'idx', 'html_param', 'pipeline', 'y_train', 'y_test', 'fold_shuffle_param', 'seed', 'log_plots_param', 'gpu_param', 'exp_id', 'fix_imbalance', 'data', 'USI'}
2023-04-11 21:37:17,751:INFO:Checking environment
2023-04-11 21:37:17,751:INFO:python_version: 3.10.9
2023-04-11 21:37:17,751:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 21:37:17,751:INFO:machine: x86_64
2023-04-11 21:37:17,751:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:37:17,752:INFO:Memory: svmem(total=16570302464, available=9310662656, percent=43.8, used=5195444224, free=3203301376, active=6003060736, inactive=5703278592, buffers=1018400768, cached=7153156096, shared=1712435200, slab=683741184)
2023-04-11 21:37:17,752:INFO:Physical Core: 6
2023-04-11 21:37:17,753:INFO:Logical Core: 12
2023-04-11 21:37:17,753:INFO:Checking libraries
2023-04-11 21:37:17,753:INFO:System:
2023-04-11 21:37:17,753:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 21:37:17,753:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 21:37:17,753:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:37:17,753:INFO:PyCaret required dependencies:
2023-04-11 21:37:17,753:INFO:                 pip: 22.3.1
2023-04-11 21:37:17,753:INFO:          setuptools: 65.6.3
2023-04-11 21:37:17,753:INFO:             pycaret: 3.0.0
2023-04-11 21:37:17,754:INFO:             IPython: 8.12.0
2023-04-11 21:37:17,754:INFO:          ipywidgets: 8.0.4
2023-04-11 21:37:17,754:INFO:                tqdm: 4.64.1
2023-04-11 21:37:17,754:INFO:               numpy: 1.23.5
2023-04-11 21:37:17,754:INFO:              pandas: 1.5.3
2023-04-11 21:37:17,754:INFO:              jinja2: 3.1.2
2023-04-11 21:37:17,754:INFO:               scipy: 1.10.1
2023-04-11 21:37:17,754:INFO:              joblib: 1.2.0
2023-04-11 21:37:17,754:INFO:             sklearn: 1.2.2
2023-04-11 21:37:17,754:INFO:                pyod: 1.0.9
2023-04-11 21:37:17,754:INFO:            imblearn: 0.10.1
2023-04-11 21:37:17,754:INFO:   category_encoders: 2.6.0
2023-04-11 21:37:17,755:INFO:            lightgbm: 3.3.5
2023-04-11 21:37:17,755:INFO:               numba: 0.56.4
2023-04-11 21:37:17,755:INFO:            requests: 2.28.1
2023-04-11 21:37:17,755:INFO:          matplotlib: 3.7.1
2023-04-11 21:37:17,755:INFO:          scikitplot: 0.3.7
2023-04-11 21:37:17,755:INFO:         yellowbrick: 1.5
2023-04-11 21:37:17,755:INFO:              plotly: 5.14.1
2023-04-11 21:37:17,755:INFO:             kaleido: 0.2.1
2023-04-11 21:37:17,756:INFO:         statsmodels: 0.13.5
2023-04-11 21:37:17,756:INFO:              sktime: 0.17.1
2023-04-11 21:37:17,756:INFO:               tbats: 1.1.2
2023-04-11 21:37:17,756:INFO:            pmdarima: 2.0.3
2023-04-11 21:37:17,756:INFO:              psutil: 5.9.4
2023-04-11 21:37:17,756:INFO:PyCaret optional dependencies:
2023-04-11 21:37:17,756:INFO:                shap: 0.41.0
2023-04-11 21:37:17,756:INFO:           interpret: Not installed
2023-04-11 21:37:17,756:INFO:                umap: Not installed
2023-04-11 21:37:17,756:INFO:    pandas_profiling: Not installed
2023-04-11 21:37:17,756:INFO:  explainerdashboard: Not installed
2023-04-11 21:37:17,756:INFO:             autoviz: Not installed
2023-04-11 21:37:17,756:INFO:           fairlearn: Not installed
2023-04-11 21:37:17,756:INFO:             xgboost: 1.7.5
2023-04-11 21:37:17,757:INFO:            catboost: Not installed
2023-04-11 21:37:17,757:INFO:              kmodes: Not installed
2023-04-11 21:37:17,757:INFO:             mlxtend: Not installed
2023-04-11 21:37:17,757:INFO:       statsforecast: Not installed
2023-04-11 21:37:17,757:INFO:        tune_sklearn: Not installed
2023-04-11 21:37:17,757:INFO:                 ray: Not installed
2023-04-11 21:37:17,757:INFO:            hyperopt: Not installed
2023-04-11 21:37:17,757:INFO:              optuna: Not installed
2023-04-11 21:37:17,757:INFO:               skopt: Not installed
2023-04-11 21:37:17,757:INFO:              mlflow: Not installed
2023-04-11 21:37:17,757:INFO:              gradio: Not installed
2023-04-11 21:37:17,757:INFO:             fastapi: Not installed
2023-04-11 21:37:17,757:INFO:             uvicorn: Not installed
2023-04-11 21:37:17,757:INFO:              m2cgen: Not installed
2023-04-11 21:37:17,757:INFO:           evidently: Not installed
2023-04-11 21:37:17,757:INFO:               fugue: Not installed
2023-04-11 21:37:17,757:INFO:           streamlit: 1.21.0
2023-04-11 21:37:17,758:INFO:             prophet: Not installed
2023-04-11 21:37:17,758:INFO:None
2023-04-11 21:37:17,758:INFO:Set up data.
2023-04-11 21:37:17,795:INFO:Set up train/test split.
2023-04-11 21:37:17,812:INFO:Set up index.
2023-04-11 21:37:17,812:INFO:Set up folding strategy.
2023-04-11 21:37:17,812:INFO:Assigning column types.
2023-04-11 21:37:17,816:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-11 21:37:17,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:37:17,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:37:17,881:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:17,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:17,924:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:37:17,925:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:37:17,946:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:17,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:17,949:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-11 21:37:17,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:37:18,004:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:18,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:18,043:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:37:18,065:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:18,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:18,068:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-11 21:37:18,126:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:18,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:18,181:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:18,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:18,184:INFO:Preparing preprocessing pipeline...
2023-04-11 21:37:18,185:INFO:Set up label encoding.
2023-04-11 21:37:18,185:INFO:Set up simple imputation.
2023-04-11 21:37:18,196:INFO:Set up encoding of ordinal features.
2023-04-11 21:37:18,217:INFO:Set up encoding of categorical features.
2023-04-11 21:37:18,218:INFO:Set up column name cleaning.
2023-04-11 21:37:18,683:INFO:Finished creating preprocessing pipeline.
2023-04-11 21:37:18,798:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7358,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-11 21:37:18,798:INFO:Creating final display dataframe.
2023-04-11 21:37:19,725:INFO:Setup _display_container:                     Description                             Value
0                    Session id                              7358
1                        Target                   Customer Status
2                   Target type                        Multiclass
3                Target mapping  Churned: 0, Joined: 1, Stayed: 2
4           Original data shape                        (7043, 38)
5        Transformed data shape                        (7043, 72)
6   Transformed train set shape                        (4930, 72)
7    Transformed test set shape                        (2113, 72)
8              Ordinal features                                14
9              Numeric features                                15
10         Categorical features                                22
11     Rows with missing values                             77.5%
12                   Preprocess                              True
13              Imputation type                            simple
14           Numeric imputation                              mean
15       Categorical imputation                              mode
16     Maximum one-hot encoding                                25
17              Encoding method                              None
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              d660
2023-04-11 21:37:19,807:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:19,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:19,885:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:37:19,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:37:19,888:INFO:setup() successfully completed in 2.21s...............
2023-04-11 21:52:50,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:52:50,078:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:52:50,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:52:50,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-11 21:52:50,363:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-11 21:52:50,576:INFO:PyCaret ClassificationExperiment
2023-04-11 21:52:50,576:INFO:Logging name: clf-default-name
2023-04-11 21:52:50,576:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-11 21:52:50,576:INFO:version 3.0.0
2023-04-11 21:52:50,576:INFO:Initializing setup()
2023-04-11 21:52:50,576:INFO:self.USI: 3eaa
2023-04-11 21:52:50,576:INFO:self._variable_keys: {'gpu_n_jobs_param', 'seed', 'y', 'fold_generator', '_ml_usecase', 'is_multiclass', 'pipeline', 'data', 'exp_name_log', 'html_param', 'fold_shuffle_param', 'log_plots_param', 'X_test', 'X_train', 'idx', 'fix_imbalance', 'target_param', 'y_test', 'memory', 'exp_id', 'fold_groups_param', 'X', 'gpu_param', 'logging_param', 'y_train', 'n_jobs_param', '_available_plots', 'USI'}
2023-04-11 21:52:50,576:INFO:Checking environment
2023-04-11 21:52:50,576:INFO:python_version: 3.10.9
2023-04-11 21:52:50,576:INFO:python_build: ('main', 'Jan 11 2023 15:21:40')
2023-04-11 21:52:50,576:INFO:machine: x86_64
2023-04-11 21:52:50,576:INFO:platform: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:52:50,577:INFO:Memory: svmem(total=16570302464, available=10252050432, percent=38.1, used=4362657792, free=4011360256, active=5127430144, inactive=5862334464, buffers=1039908864, cached=7156375552, shared=1603833856, slab=681349120)
2023-04-11 21:52:50,577:INFO:Physical Core: 6
2023-04-11 21:52:50,578:INFO:Logical Core: 12
2023-04-11 21:52:50,578:INFO:Checking libraries
2023-04-11 21:52:50,578:INFO:System:
2023-04-11 21:52:50,578:INFO:    python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
2023-04-11 21:52:50,578:INFO:executable: /home/kalyan/miniconda3/bin/python
2023-04-11 21:52:50,578:INFO:   machine: Linux-6.1.23-1-MANJARO-x86_64-with-glibc2.37
2023-04-11 21:52:50,578:INFO:PyCaret required dependencies:
2023-04-11 21:52:50,578:INFO:                 pip: 22.3.1
2023-04-11 21:52:50,578:INFO:          setuptools: 65.6.3
2023-04-11 21:52:50,578:INFO:             pycaret: 3.0.0
2023-04-11 21:52:50,578:INFO:             IPython: 8.12.0
2023-04-11 21:52:50,578:INFO:          ipywidgets: 8.0.4
2023-04-11 21:52:50,578:INFO:                tqdm: 4.64.1
2023-04-11 21:52:50,578:INFO:               numpy: 1.23.5
2023-04-11 21:52:50,578:INFO:              pandas: 1.5.3
2023-04-11 21:52:50,578:INFO:              jinja2: 3.1.2
2023-04-11 21:52:50,578:INFO:               scipy: 1.10.1
2023-04-11 21:52:50,578:INFO:              joblib: 1.2.0
2023-04-11 21:52:50,578:INFO:             sklearn: 1.2.2
2023-04-11 21:52:50,578:INFO:                pyod: 1.0.9
2023-04-11 21:52:50,578:INFO:            imblearn: 0.10.1
2023-04-11 21:52:50,578:INFO:   category_encoders: 2.6.0
2023-04-11 21:52:50,578:INFO:            lightgbm: 3.3.5
2023-04-11 21:52:50,578:INFO:               numba: 0.56.4
2023-04-11 21:52:50,578:INFO:            requests: 2.28.1
2023-04-11 21:52:50,578:INFO:          matplotlib: 3.7.1
2023-04-11 21:52:50,578:INFO:          scikitplot: 0.3.7
2023-04-11 21:52:50,578:INFO:         yellowbrick: 1.5
2023-04-11 21:52:50,578:INFO:              plotly: 5.14.1
2023-04-11 21:52:50,579:INFO:             kaleido: 0.2.1
2023-04-11 21:52:50,579:INFO:         statsmodels: 0.13.5
2023-04-11 21:52:50,579:INFO:              sktime: 0.17.1
2023-04-11 21:52:50,579:INFO:               tbats: 1.1.2
2023-04-11 21:52:50,579:INFO:            pmdarima: 2.0.3
2023-04-11 21:52:50,579:INFO:              psutil: 5.9.4
2023-04-11 21:52:50,579:INFO:PyCaret optional dependencies:
2023-04-11 21:52:50,597:INFO:                shap: 0.41.0
2023-04-11 21:52:50,597:INFO:           interpret: Not installed
2023-04-11 21:52:50,597:INFO:                umap: Not installed
2023-04-11 21:52:50,597:INFO:    pandas_profiling: Not installed
2023-04-11 21:52:50,597:INFO:  explainerdashboard: Not installed
2023-04-11 21:52:50,597:INFO:             autoviz: Not installed
2023-04-11 21:52:50,597:INFO:           fairlearn: Not installed
2023-04-11 21:52:50,597:INFO:             xgboost: 1.7.5
2023-04-11 21:52:50,597:INFO:            catboost: Not installed
2023-04-11 21:52:50,597:INFO:              kmodes: Not installed
2023-04-11 21:52:50,598:INFO:             mlxtend: Not installed
2023-04-11 21:52:50,598:INFO:       statsforecast: Not installed
2023-04-11 21:52:50,598:INFO:        tune_sklearn: Not installed
2023-04-11 21:52:50,598:INFO:                 ray: Not installed
2023-04-11 21:52:50,598:INFO:            hyperopt: Not installed
2023-04-11 21:52:50,598:INFO:              optuna: Not installed
2023-04-11 21:52:50,598:INFO:               skopt: Not installed
2023-04-11 21:52:50,598:INFO:              mlflow: Not installed
2023-04-11 21:52:50,598:INFO:              gradio: Not installed
2023-04-11 21:52:50,598:INFO:             fastapi: Not installed
2023-04-11 21:52:50,598:INFO:             uvicorn: Not installed
2023-04-11 21:52:50,598:INFO:              m2cgen: Not installed
2023-04-11 21:52:50,598:INFO:           evidently: Not installed
2023-04-11 21:52:50,598:INFO:               fugue: Not installed
2023-04-11 21:52:50,598:INFO:           streamlit: 1.21.0
2023-04-11 21:52:50,598:INFO:             prophet: Not installed
2023-04-11 21:52:50,598:INFO:None
2023-04-11 21:52:50,598:INFO:Set up data.
2023-04-11 21:52:50,640:INFO:Set up train/test split.
2023-04-11 21:52:50,661:INFO:Set up index.
2023-04-11 21:52:50,661:INFO:Set up folding strategy.
2023-04-11 21:52:50,661:INFO:Assigning column types.
2023-04-11 21:52:50,667:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-11 21:52:50,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:52:50,709:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:52:50,739:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:50,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:50,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-11 21:52:50,816:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:52:50,842:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:50,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:50,845:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-11 21:52:50,893:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:52:50,924:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:50,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:50,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-11 21:52:51,005:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:51,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:51,008:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-11 21:52:51,087:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:51,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:51,162:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:51,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:51,167:INFO:Preparing preprocessing pipeline...
2023-04-11 21:52:51,169:INFO:Set up label encoding.
2023-04-11 21:52:51,169:INFO:Set up simple imputation.
2023-04-11 21:52:51,180:INFO:Set up encoding of ordinal features.
2023-04-11 21:52:51,203:INFO:Set up encoding of categorical features.
2023-04-11 21:52:51,204:INFO:Set up column name cleaning.
2023-04-11 21:52:51,723:INFO:Finished creating preprocessing pipeline.
2023-04-11 21:52:51,842:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Number of Dependents',
                                             'Zip Code', 'Latitude',
                                             'Longitude', 'Number of Referrals',
                                             'Tenure in Months',
                                             'Avg Monthly Long Distance '
                                             'Charges...
                                    include=['Customer ID', 'City'],
                                    transformer=LeaveOneOutEncoder(cols=['Customer '
                                                                         'ID',
                                                                         'City'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=5221,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-11 21:52:51,842:INFO:Creating final display dataframe.
2023-04-11 21:52:52,773:INFO:Setup _display_container:                     Description                             Value
0                    Session id                              5221
1                        Target                   Customer Status
2                   Target type                        Multiclass
3                Target mapping  Churned: 0, Joined: 1, Stayed: 2
4           Original data shape                        (7043, 38)
5        Transformed data shape                        (7043, 72)
6   Transformed train set shape                        (4930, 72)
7    Transformed test set shape                        (2113, 72)
8              Ordinal features                                14
9              Numeric features                                15
10         Categorical features                                22
11     Rows with missing values                             77.5%
12                   Preprocess                              True
13              Imputation type                            simple
14           Numeric imputation                              mean
15       Categorical imputation                              mode
16     Maximum one-hot encoding                                25
17              Encoding method                              None
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              3eaa
2023-04-11 21:52:52,912:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:52,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:53,009:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-11 21:52:53,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-11 21:52:53,012:INFO:setup() successfully completed in 2.52s...............
2023-04-11 21:52:53,012:INFO:Initializing compare_models()
2023-04-11 21:52:53,012:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-11 21:52:53,012:INFO:Checking exceptions
2023-04-11 21:52:53,018:INFO:Preparing display monitor
2023-04-11 21:52:53,048:INFO:Initializing Logistic Regression
2023-04-11 21:52:53,049:INFO:Total runtime is 5.352497100830078e-06 minutes
2023-04-11 21:52:53,054:INFO:SubProcess create_model() called ==================================
2023-04-11 21:52:53,055:INFO:Initializing create_model()
2023-04-11 21:52:53,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:52:53,056:INFO:Checking exceptions
2023-04-11 21:52:53,056:INFO:Importing libraries
2023-04-11 21:52:53,056:INFO:Copying training dataset
2023-04-11 21:52:53,067:INFO:Defining folds
2023-04-11 21:52:53,067:INFO:Declaring metric variables
2023-04-11 21:52:53,071:INFO:Importing untrained model
2023-04-11 21:52:53,074:INFO:Logistic Regression Imported successfully
2023-04-11 21:52:53,082:INFO:Starting cross validation
2023-04-11 21:52:53,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:52:58,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:52:58,673:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:52:58,681:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:00,539:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:01,430:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:01,438:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:01,445:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:01,564:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:01,604:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:01,887:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:02,261:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:02,332:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:02,348:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:02,421:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,425:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,429:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,430:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:02,476:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-11 21:53:02,490:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,498:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,737:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,745:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,956:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,960:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:02,963:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,120:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,124:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,127:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,172:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,176:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,180:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,215:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,219:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,223:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,312:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,316:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,322:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:03,391:INFO:Calculating mean and std
2023-04-11 21:53:03,394:INFO:Creating metrics dataframe
2023-04-11 21:53:03,657:INFO:Uploading results into container
2023-04-11 21:53:03,658:INFO:Uploading model into container now
2023-04-11 21:53:03,659:INFO:_master_model_container: 1
2023-04-11 21:53:03,659:INFO:_display_container: 2
2023-04-11 21:53:03,659:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-11 21:53:03,659:INFO:create_model() successfully completed......................................
2023-04-11 21:53:03,771:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:03,771:INFO:Creating metrics dataframe
2023-04-11 21:53:03,785:INFO:Initializing K Neighbors Classifier
2023-04-11 21:53:03,786:INFO:Total runtime is 0.17895577748616534 minutes
2023-04-11 21:53:03,791:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:03,792:INFO:Initializing create_model()
2023-04-11 21:53:03,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:03,793:INFO:Checking exceptions
2023-04-11 21:53:03,793:INFO:Importing libraries
2023-04-11 21:53:03,793:INFO:Copying training dataset
2023-04-11 21:53:03,806:INFO:Defining folds
2023-04-11 21:53:03,807:INFO:Declaring metric variables
2023-04-11 21:53:03,812:INFO:Importing untrained model
2023-04-11 21:53:03,819:INFO:K Neighbors Classifier Imported successfully
2023-04-11 21:53:03,830:INFO:Starting cross validation
2023-04-11 21:53:03,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:06,611:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:06,625:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:06,638:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:06,890:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,345:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,412:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,426:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,439:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,471:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,498:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,517:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,824:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,837:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,844:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,849:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,861:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,871:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,886:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,890:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:07,907:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:07,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,017:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,031:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,294:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,299:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,303:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,306:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,310:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:08,313:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,357:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,364:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,371:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,467:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,471:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,476:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:09,484:INFO:Calculating mean and std
2023-04-11 21:53:09,485:INFO:Creating metrics dataframe
2023-04-11 21:53:09,741:INFO:Uploading results into container
2023-04-11 21:53:09,742:INFO:Uploading model into container now
2023-04-11 21:53:09,743:INFO:_master_model_container: 2
2023-04-11 21:53:09,743:INFO:_display_container: 2
2023-04-11 21:53:09,743:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-11 21:53:09,743:INFO:create_model() successfully completed......................................
2023-04-11 21:53:09,819:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:09,819:INFO:Creating metrics dataframe
2023-04-11 21:53:09,832:INFO:Initializing Naive Bayes
2023-04-11 21:53:09,832:INFO:Total runtime is 0.2797235568364461 minutes
2023-04-11 21:53:09,837:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:09,837:INFO:Initializing create_model()
2023-04-11 21:53:09,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:09,837:INFO:Checking exceptions
2023-04-11 21:53:09,837:INFO:Importing libraries
2023-04-11 21:53:09,837:INFO:Copying training dataset
2023-04-11 21:53:09,851:INFO:Defining folds
2023-04-11 21:53:09,851:INFO:Declaring metric variables
2023-04-11 21:53:09,857:INFO:Importing untrained model
2023-04-11 21:53:09,862:INFO:Naive Bayes Imported successfully
2023-04-11 21:53:09,872:INFO:Starting cross validation
2023-04-11 21:53:09,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:11,635:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:11,834:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:11,849:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:11,862:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:11,872:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,039:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,063:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,097:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,112:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,132:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,226:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,238:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,246:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,252:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,260:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,318:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,333:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,348:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,420:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,452:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,465:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,477:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,538:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,563:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,643:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:12,648:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,662:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,760:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,772:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,779:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,975:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,980:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:12,986:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:13,322:INFO:Calculating mean and std
2023-04-11 21:53:13,323:INFO:Creating metrics dataframe
2023-04-11 21:53:13,548:INFO:Uploading results into container
2023-04-11 21:53:13,549:INFO:Uploading model into container now
2023-04-11 21:53:13,550:INFO:_master_model_container: 3
2023-04-11 21:53:13,550:INFO:_display_container: 2
2023-04-11 21:53:13,550:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-11 21:53:13,550:INFO:create_model() successfully completed......................................
2023-04-11 21:53:13,626:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:13,626:INFO:Creating metrics dataframe
2023-04-11 21:53:13,639:INFO:Initializing Decision Tree Classifier
2023-04-11 21:53:13,639:INFO:Total runtime is 0.34318586190541583 minutes
2023-04-11 21:53:13,644:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:13,644:INFO:Initializing create_model()
2023-04-11 21:53:13,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:13,645:INFO:Checking exceptions
2023-04-11 21:53:13,645:INFO:Importing libraries
2023-04-11 21:53:13,645:INFO:Copying training dataset
2023-04-11 21:53:13,653:INFO:Defining folds
2023-04-11 21:53:13,653:INFO:Declaring metric variables
2023-04-11 21:53:13,657:INFO:Importing untrained model
2023-04-11 21:53:13,661:INFO:Decision Tree Classifier Imported successfully
2023-04-11 21:53:13,667:INFO:Starting cross validation
2023-04-11 21:53:13,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:15,375:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:15,559:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:15,573:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:15,586:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:15,827:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:15,900:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,016:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,029:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,041:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,043:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,054:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,068:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,099:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,269:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,278:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,279:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,292:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,293:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,297:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,305:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,308:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,320:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,360:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,373:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:16,472:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,487:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,495:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,503:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,521:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,527:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,536:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,537:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,544:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,550:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,552:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:16,562:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:17,407:INFO:Calculating mean and std
2023-04-11 21:53:17,408:INFO:Creating metrics dataframe
2023-04-11 21:53:17,650:INFO:Uploading results into container
2023-04-11 21:53:17,651:INFO:Uploading model into container now
2023-04-11 21:53:17,652:INFO:_master_model_container: 4
2023-04-11 21:53:17,652:INFO:_display_container: 2
2023-04-11 21:53:17,652:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best')
2023-04-11 21:53:17,652:INFO:create_model() successfully completed......................................
2023-04-11 21:53:17,743:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:17,744:INFO:Creating metrics dataframe
2023-04-11 21:53:17,764:INFO:Initializing SVM - Linear Kernel
2023-04-11 21:53:17,764:INFO:Total runtime is 0.4119287093480428 minutes
2023-04-11 21:53:17,769:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:17,769:INFO:Initializing create_model()
2023-04-11 21:53:17,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:17,769:INFO:Checking exceptions
2023-04-11 21:53:17,769:INFO:Importing libraries
2023-04-11 21:53:17,769:INFO:Copying training dataset
2023-04-11 21:53:17,783:INFO:Defining folds
2023-04-11 21:53:17,783:INFO:Declaring metric variables
2023-04-11 21:53:17,787:INFO:Importing untrained model
2023-04-11 21:53:17,792:INFO:SVM - Linear Kernel Imported successfully
2023-04-11 21:53:17,801:INFO:Starting cross validation
2023-04-11 21:53:17,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:19,730:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:53:19,968:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:53:21,216:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,225:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,231:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,238:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,245:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,249:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,262:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,265:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,271:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,274:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,282:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,286:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,286:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,292:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,305:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,306:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,312:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,319:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,320:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,326:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,339:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,354:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,551:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,564:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,571:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,577:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,582:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,595:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,601:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,614:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,621:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,627:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,637:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,650:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,655:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,674:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,680:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,735:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,748:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,754:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,767:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,774:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,780:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,902:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,917:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:21,923:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,924:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-11 21:53:21,927:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,930:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:21,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,934:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:21,940:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:22,571:INFO:Calculating mean and std
2023-04-11 21:53:22,572:INFO:Creating metrics dataframe
2023-04-11 21:53:22,811:INFO:Uploading results into container
2023-04-11 21:53:22,812:INFO:Uploading model into container now
2023-04-11 21:53:22,813:INFO:_master_model_container: 5
2023-04-11 21:53:22,813:INFO:_display_container: 2
2023-04-11 21:53:22,813:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-11 21:53:22,813:INFO:create_model() successfully completed......................................
2023-04-11 21:53:22,887:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:22,888:INFO:Creating metrics dataframe
2023-04-11 21:53:22,900:INFO:Initializing Ridge Classifier
2023-04-11 21:53:22,900:INFO:Total runtime is 0.49753265778223676 minutes
2023-04-11 21:53:22,906:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:22,907:INFO:Initializing create_model()
2023-04-11 21:53:22,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:22,907:INFO:Checking exceptions
2023-04-11 21:53:22,907:INFO:Importing libraries
2023-04-11 21:53:22,907:INFO:Copying training dataset
2023-04-11 21:53:22,924:INFO:Defining folds
2023-04-11 21:53:22,924:INFO:Declaring metric variables
2023-04-11 21:53:22,929:INFO:Importing untrained model
2023-04-11 21:53:22,934:INFO:Ridge Classifier Imported successfully
2023-04-11 21:53:22,942:INFO:Starting cross validation
2023-04-11 21:53:22,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:24,698:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:24,708:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:24,712:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,713:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:24,717:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,720:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,724:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:24,725:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,730:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,735:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,892:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:24,904:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:24,910:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,924:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:24,931:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:24,938:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,078:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,091:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,097:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,110:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,115:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,117:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,121:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,122:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,123:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,131:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,131:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,134:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,143:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,148:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,150:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,153:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,156:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,156:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,161:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,162:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,166:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,167:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,172:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,179:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,186:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,186:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,192:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,201:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,266:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:25,273:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,278:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,279:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-11 21:53:25,285:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,286:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,290:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,295:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,299:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:25,307:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:53:25,314:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:26,143:INFO:Calculating mean and std
2023-04-11 21:53:26,146:INFO:Creating metrics dataframe
2023-04-11 21:53:26,405:INFO:Uploading results into container
2023-04-11 21:53:26,406:INFO:Uploading model into container now
2023-04-11 21:53:26,406:INFO:_master_model_container: 6
2023-04-11 21:53:26,406:INFO:_display_container: 2
2023-04-11 21:53:26,407:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5221, solver='auto',
                tol=0.0001)
2023-04-11 21:53:26,407:INFO:create_model() successfully completed......................................
2023-04-11 21:53:26,484:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:26,484:INFO:Creating metrics dataframe
2023-04-11 21:53:26,496:INFO:Initializing Random Forest Classifier
2023-04-11 21:53:26,496:INFO:Total runtime is 0.5574647426605225 minutes
2023-04-11 21:53:26,500:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:26,500:INFO:Initializing create_model()
2023-04-11 21:53:26,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:26,500:INFO:Checking exceptions
2023-04-11 21:53:26,500:INFO:Importing libraries
2023-04-11 21:53:26,501:INFO:Copying training dataset
2023-04-11 21:53:26,509:INFO:Defining folds
2023-04-11 21:53:26,509:INFO:Declaring metric variables
2023-04-11 21:53:26,513:INFO:Importing untrained model
2023-04-11 21:53:26,516:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:53:26,522:INFO:Starting cross validation
2023-04-11 21:53:26,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:30,992:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,272:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,304:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,322:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,546:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,634:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,639:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,642:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,654:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,665:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,675:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,703:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:31,818:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,834:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,851:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,858:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,864:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,872:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,881:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,886:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:31,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,116:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,132:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,154:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,199:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,216:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,232:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,238:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,243:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,253:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,260:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,276:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,310:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,322:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,335:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,335:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,348:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:32,361:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:33,412:INFO:Calculating mean and std
2023-04-11 21:53:33,414:INFO:Creating metrics dataframe
2023-04-11 21:53:33,871:INFO:Uploading results into container
2023-04-11 21:53:33,872:INFO:Uploading model into container now
2023-04-11 21:53:33,872:INFO:_master_model_container: 7
2023-04-11 21:53:33,872:INFO:_display_container: 2
2023-04-11 21:53:33,873:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5221, verbose=0, warm_start=False)
2023-04-11 21:53:33,873:INFO:create_model() successfully completed......................................
2023-04-11 21:53:33,976:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:33,976:INFO:Creating metrics dataframe
2023-04-11 21:53:34,000:INFO:Initializing Quadratic Discriminant Analysis
2023-04-11 21:53:34,001:INFO:Total runtime is 0.682541040579478 minutes
2023-04-11 21:53:34,007:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:34,008:INFO:Initializing create_model()
2023-04-11 21:53:34,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:34,008:INFO:Checking exceptions
2023-04-11 21:53:34,009:INFO:Importing libraries
2023-04-11 21:53:34,009:INFO:Copying training dataset
2023-04-11 21:53:34,022:INFO:Defining folds
2023-04-11 21:53:34,022:INFO:Declaring metric variables
2023-04-11 21:53:34,029:INFO:Importing untrained model
2023-04-11 21:53:34,035:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-11 21:53:34,045:INFO:Starting cross validation
2023-04-11 21:53:34,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:35,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,077:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,180:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,184:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,347:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,516:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,658:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,673:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:35,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-11 21:53:36,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:36,605:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:36,674:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:36,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,768:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,784:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,817:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:36,830:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:36,877:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,884:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,893:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,898:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,907:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:36,911:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,061:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,076:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,091:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,099:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,115:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,130:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,173:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:37,188:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:37,313:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:37,326:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:37,403:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,418:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,433:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,459:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,478:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,496:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,518:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,520:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,530:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,532:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,543:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,571:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:37,725:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:37,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:38,516:INFO:Calculating mean and std
2023-04-11 21:53:38,518:INFO:Creating metrics dataframe
2023-04-11 21:53:38,802:INFO:Uploading results into container
2023-04-11 21:53:38,803:INFO:Uploading model into container now
2023-04-11 21:53:38,804:INFO:_master_model_container: 8
2023-04-11 21:53:38,804:INFO:_display_container: 2
2023-04-11 21:53:38,804:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-11 21:53:38,804:INFO:create_model() successfully completed......................................
2023-04-11 21:53:38,888:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:38,888:INFO:Creating metrics dataframe
2023-04-11 21:53:38,902:INFO:Initializing Ada Boost Classifier
2023-04-11 21:53:38,902:INFO:Total runtime is 0.7642335693041483 minutes
2023-04-11 21:53:38,907:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:38,907:INFO:Initializing create_model()
2023-04-11 21:53:38,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:38,908:INFO:Checking exceptions
2023-04-11 21:53:38,908:INFO:Importing libraries
2023-04-11 21:53:38,908:INFO:Copying training dataset
2023-04-11 21:53:38,919:INFO:Defining folds
2023-04-11 21:53:38,920:INFO:Declaring metric variables
2023-04-11 21:53:38,925:INFO:Importing untrained model
2023-04-11 21:53:38,929:INFO:Ada Boost Classifier Imported successfully
2023-04-11 21:53:38,938:INFO:Starting cross validation
2023-04-11 21:53:38,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:53:42,753:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,089:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,102:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,107:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,119:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,131:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,138:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,144:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,179:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,217:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,376:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,398:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,460:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,473:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,486:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,501:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,514:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,517:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,517:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,529:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,530:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,533:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,545:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,559:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,574:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,617:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,632:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,646:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,754:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,756:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:53:43,768:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,768:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,784:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:43,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:44,123:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:44,132:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:44,143:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:53:44,912:INFO:Calculating mean and std
2023-04-11 21:53:44,914:INFO:Creating metrics dataframe
2023-04-11 21:53:45,183:INFO:Uploading results into container
2023-04-11 21:53:45,184:INFO:Uploading model into container now
2023-04-11 21:53:45,184:INFO:_master_model_container: 9
2023-04-11 21:53:45,184:INFO:_display_container: 2
2023-04-11 21:53:45,185:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5221)
2023-04-11 21:53:45,185:INFO:create_model() successfully completed......................................
2023-04-11 21:53:45,262:INFO:SubProcess create_model() end ==================================
2023-04-11 21:53:45,263:INFO:Creating metrics dataframe
2023-04-11 21:53:45,276:INFO:Initializing Gradient Boosting Classifier
2023-04-11 21:53:45,277:INFO:Total runtime is 0.8704741358757019 minutes
2023-04-11 21:53:45,282:INFO:SubProcess create_model() called ==================================
2023-04-11 21:53:45,283:INFO:Initializing create_model()
2023-04-11 21:53:45,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:53:45,283:INFO:Checking exceptions
2023-04-11 21:53:45,283:INFO:Importing libraries
2023-04-11 21:53:45,283:INFO:Copying training dataset
2023-04-11 21:53:45,296:INFO:Defining folds
2023-04-11 21:53:45,296:INFO:Declaring metric variables
2023-04-11 21:53:45,301:INFO:Importing untrained model
2023-04-11 21:53:45,305:INFO:Gradient Boosting Classifier Imported successfully
2023-04-11 21:53:45,315:INFO:Starting cross validation
2023-04-11 21:53:45,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:54:01,304:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:01,547:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:01,601:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:01,634:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:01,854:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:01,974:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:02,082:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:02,126:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:02,217:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:02,560:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:02,573:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:02,586:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:02,699:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:02,713:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:02,728:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:02,892:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,290:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,450:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,462:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,475:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,635:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,638:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,651:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,660:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,663:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,668:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,755:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.18s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,865:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:03,985:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,992:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:03,999:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,120:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,123:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,130:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,130:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,136:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,137:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,198:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:04,213:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,219:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,220:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,228:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,231:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,243:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,566:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,572:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,577:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:04,738:INFO:Calculating mean and std
2023-04-11 21:54:04,740:INFO:Creating metrics dataframe
2023-04-11 21:54:05,021:INFO:Uploading results into container
2023-04-11 21:54:05,022:INFO:Uploading model into container now
2023-04-11 21:54:05,022:INFO:_master_model_container: 10
2023-04-11 21:54:05,022:INFO:_display_container: 2
2023-04-11 21:54:05,023:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-11 21:54:05,023:INFO:create_model() successfully completed......................................
2023-04-11 21:54:05,101:INFO:SubProcess create_model() end ==================================
2023-04-11 21:54:05,102:INFO:Creating metrics dataframe
2023-04-11 21:54:05,115:INFO:Initializing Linear Discriminant Analysis
2023-04-11 21:54:05,115:INFO:Total runtime is 1.20110920270284 minutes
2023-04-11 21:54:05,118:INFO:SubProcess create_model() called ==================================
2023-04-11 21:54:05,119:INFO:Initializing create_model()
2023-04-11 21:54:05,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:54:05,119:INFO:Checking exceptions
2023-04-11 21:54:05,119:INFO:Importing libraries
2023-04-11 21:54:05,119:INFO:Copying training dataset
2023-04-11 21:54:05,128:INFO:Defining folds
2023-04-11 21:54:05,128:INFO:Declaring metric variables
2023-04-11 21:54:05,132:INFO:Importing untrained model
2023-04-11 21:54:05,135:INFO:Linear Discriminant Analysis Imported successfully
2023-04-11 21:54:05,144:INFO:Starting cross validation
2023-04-11 21:54:05,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:54:07,105:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,267:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,278:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,290:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,623:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,623:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,652:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,681:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,695:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,697:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,697:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,782:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,786:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:07,791:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,811:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,814:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,816:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,818:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,826:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,826:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,829:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,838:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,841:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,875:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,881:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,881:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,890:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,894:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,904:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,907:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,907:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,935:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,944:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:07,994:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:08,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:08,194:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:08,202:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:08,879:INFO:Calculating mean and std
2023-04-11 21:54:08,881:INFO:Creating metrics dataframe
2023-04-11 21:54:09,183:INFO:Uploading results into container
2023-04-11 21:54:09,184:INFO:Uploading model into container now
2023-04-11 21:54:09,185:INFO:_master_model_container: 11
2023-04-11 21:54:09,185:INFO:_display_container: 2
2023-04-11 21:54:09,185:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-11 21:54:09,185:INFO:create_model() successfully completed......................................
2023-04-11 21:54:09,264:INFO:SubProcess create_model() end ==================================
2023-04-11 21:54:09,264:INFO:Creating metrics dataframe
2023-04-11 21:54:09,282:INFO:Initializing Extra Trees Classifier
2023-04-11 21:54:09,282:INFO:Total runtime is 1.2705561240514118 minutes
2023-04-11 21:54:09,285:INFO:SubProcess create_model() called ==================================
2023-04-11 21:54:09,286:INFO:Initializing create_model()
2023-04-11 21:54:09,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:54:09,286:INFO:Checking exceptions
2023-04-11 21:54:09,286:INFO:Importing libraries
2023-04-11 21:54:09,286:INFO:Copying training dataset
2023-04-11 21:54:09,295:INFO:Defining folds
2023-04-11 21:54:09,295:INFO:Declaring metric variables
2023-04-11 21:54:09,299:INFO:Importing untrained model
2023-04-11 21:54:09,303:INFO:Extra Trees Classifier Imported successfully
2023-04-11 21:54:09,311:INFO:Starting cross validation
2023-04-11 21:54:09,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:54:12,149:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-11 21:54:13,974:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,047:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,058:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,085:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,204:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,256:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,297:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,338:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,365:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,556:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:14,656:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,687:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,761:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,783:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,799:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,861:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,876:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,891:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,913:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,929:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,943:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,951:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,953:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,962:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,969:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,969:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,976:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,983:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,983:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:14,991:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,018:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,049:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,061:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,064:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,075:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,076:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,203:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,218:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:15,233:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:16,043:INFO:Calculating mean and std
2023-04-11 21:54:16,046:INFO:Creating metrics dataframe
2023-04-11 21:54:16,290:INFO:Uploading results into container
2023-04-11 21:54:16,291:INFO:Uploading model into container now
2023-04-11 21:54:16,291:INFO:_master_model_container: 12
2023-04-11 21:54:16,291:INFO:_display_container: 2
2023-04-11 21:54:16,292:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5221, verbose=0, warm_start=False)
2023-04-11 21:54:16,292:INFO:create_model() successfully completed......................................
2023-04-11 21:54:16,381:INFO:SubProcess create_model() end ==================================
2023-04-11 21:54:16,381:INFO:Creating metrics dataframe
2023-04-11 21:54:16,397:INFO:Initializing Extreme Gradient Boosting
2023-04-11 21:54:16,397:INFO:Total runtime is 1.3891488909721372 minutes
2023-04-11 21:54:16,402:INFO:SubProcess create_model() called ==================================
2023-04-11 21:54:16,403:INFO:Initializing create_model()
2023-04-11 21:54:16,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:54:16,403:INFO:Checking exceptions
2023-04-11 21:54:16,403:INFO:Importing libraries
2023-04-11 21:54:16,403:INFO:Copying training dataset
2023-04-11 21:54:16,414:INFO:Defining folds
2023-04-11 21:54:16,414:INFO:Declaring metric variables
2023-04-11 21:54:16,419:INFO:Importing untrained model
2023-04-11 21:54:16,424:INFO:Extreme Gradient Boosting Imported successfully
2023-04-11 21:54:16,435:INFO:Starting cross validation
2023-04-11 21:54:16,439:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:54:31,160:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:31,327:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:31,337:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:31,344:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:31,644:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:31,850:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:31,861:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:31,873:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:32,878:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:33,012:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:33,020:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:33,027:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:33,734:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:33,741:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:33,748:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,243:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,250:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,257:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,368:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,379:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,389:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,497:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,507:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,515:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,659:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:34,678:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:34,775:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,781:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,792:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,803:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,811:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:34,820:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:35,203:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:35,312:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:35,318:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:35,325:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:35,337:INFO:Calculating mean and std
2023-04-11 21:54:35,339:INFO:Creating metrics dataframe
2023-04-11 21:54:35,678:INFO:Uploading results into container
2023-04-11 21:54:35,679:INFO:Uploading model into container now
2023-04-11 21:54:35,679:INFO:_master_model_container: 13
2023-04-11 21:54:35,679:INFO:_display_container: 2
2023-04-11 21:54:35,680:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-11 21:54:35,680:INFO:create_model() successfully completed......................................
2023-04-11 21:54:35,761:INFO:SubProcess create_model() end ==================================
2023-04-11 21:54:35,761:INFO:Creating metrics dataframe
2023-04-11 21:54:35,776:INFO:Initializing Light Gradient Boosting Machine
2023-04-11 21:54:35,776:INFO:Total runtime is 1.7121263543764749 minutes
2023-04-11 21:54:35,779:INFO:SubProcess create_model() called ==================================
2023-04-11 21:54:35,780:INFO:Initializing create_model()
2023-04-11 21:54:35,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:54:35,780:INFO:Checking exceptions
2023-04-11 21:54:35,780:INFO:Importing libraries
2023-04-11 21:54:35,780:INFO:Copying training dataset
2023-04-11 21:54:35,790:INFO:Defining folds
2023-04-11 21:54:35,790:INFO:Declaring metric variables
2023-04-11 21:54:35,794:INFO:Importing untrained model
2023-04-11 21:54:35,797:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-11 21:54:35,805:INFO:Starting cross validation
2023-04-11 21:54:35,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:54:39,575:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:39,733:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:39,838:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:39,912:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:39,925:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:39,938:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,094:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,107:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,122:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,133:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,170:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,185:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,199:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,256:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,381:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,410:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,512:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,525:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,540:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,556:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,569:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:40,579:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,592:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,604:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,608:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,620:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,634:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,677:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,688:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,693:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,699:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,708:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,711:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,778:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,785:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,793:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,889:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,904:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:40,916:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:41,699:INFO:Calculating mean and std
2023-04-11 21:54:41,700:INFO:Creating metrics dataframe
2023-04-11 21:54:41,967:INFO:Uploading results into container
2023-04-11 21:54:41,968:INFO:Uploading model into container now
2023-04-11 21:54:41,968:INFO:_master_model_container: 14
2023-04-11 21:54:41,968:INFO:_display_container: 2
2023-04-11 21:54:41,969:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5221, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-11 21:54:41,970:INFO:create_model() successfully completed......................................
2023-04-11 21:54:42,048:INFO:SubProcess create_model() end ==================================
2023-04-11 21:54:42,048:INFO:Creating metrics dataframe
2023-04-11 21:54:42,064:INFO:Initializing Dummy Classifier
2023-04-11 21:54:42,064:INFO:Total runtime is 1.816926630338033 minutes
2023-04-11 21:54:42,068:INFO:SubProcess create_model() called ==================================
2023-04-11 21:54:42,068:INFO:Initializing create_model()
2023-04-11 21:54:42,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3d4f508790>, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:54:42,068:INFO:Checking exceptions
2023-04-11 21:54:42,069:INFO:Importing libraries
2023-04-11 21:54:42,069:INFO:Copying training dataset
2023-04-11 21:54:42,082:INFO:Defining folds
2023-04-11 21:54:42,082:INFO:Declaring metric variables
2023-04-11 21:54:42,086:INFO:Importing untrained model
2023-04-11 21:54:42,092:INFO:Dummy Classifier Imported successfully
2023-04-11 21:54:42,101:INFO:Starting cross validation
2023-04-11 21:54:42,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-11 21:54:44,346:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,387:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,447:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,478:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,527:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,541:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,548:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:44,555:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,590:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,604:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,613:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:44,620:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,648:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,663:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,671:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:44,678:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,702:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,715:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,722:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:44,728:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,757:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,800:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,828:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:44,950:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,964:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,971:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:44,977:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:44,978:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:45,001:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,003:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,012:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,016:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:45,016:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,019:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,024:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:45,030:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,134:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:45,167:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,179:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-11 21:54:45,181:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,189:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:45,196:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,246:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,254:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,258:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:45,262:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,287:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,294:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:45,298:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-11 21:54:45,301:WARNING:/home/kalyan/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Stayed') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-11 21:54:46,132:INFO:Calculating mean and std
2023-04-11 21:54:46,134:INFO:Creating metrics dataframe
2023-04-11 21:54:46,449:INFO:Uploading results into container
2023-04-11 21:54:46,450:INFO:Uploading model into container now
2023-04-11 21:54:46,451:INFO:_master_model_container: 15
2023-04-11 21:54:46,451:INFO:_display_container: 2
2023-04-11 21:54:46,451:INFO:DummyClassifier(constant=None, random_state=5221, strategy='prior')
2023-04-11 21:54:46,451:INFO:create_model() successfully completed......................................
2023-04-11 21:54:46,533:INFO:SubProcess create_model() end ==================================
2023-04-11 21:54:46,534:INFO:Creating metrics dataframe
2023-04-11 21:54:46,565:INFO:Initializing create_model()
2023-04-11 21:54:46,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3daf5e2980>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5221, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-11 21:54:46,566:INFO:Checking exceptions
2023-04-11 21:54:46,568:INFO:Importing libraries
2023-04-11 21:54:46,568:INFO:Copying training dataset
2023-04-11 21:54:46,576:INFO:Defining folds
2023-04-11 21:54:46,576:INFO:Declaring metric variables
2023-04-11 21:54:46,577:INFO:Importing untrained model
2023-04-11 21:54:46,577:INFO:Declaring custom model
2023-04-11 21:54:46,578:INFO:Random Forest Classifier Imported successfully
2023-04-11 21:54:46,581:INFO:Cross validation set to False
2023-04-11 21:54:46,581:INFO:Fitting Model
2023-04-11 21:54:47,781:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5221, verbose=0, warm_start=False)
2023-04-11 21:54:47,781:INFO:create_model() successfully completed......................................
2023-04-11 21:54:47,894:INFO:_master_model_container: 15
2023-04-11 21:54:47,895:INFO:_display_container: 2
2023-04-11 21:54:47,895:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5221, verbose=0, warm_start=False)
2023-04-11 21:54:47,895:INFO:compare_models() successfully completed......................................
